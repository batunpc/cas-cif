{{- $sessionSecret := (randAlphaNum 32) | b64enc | quote }}
{{- $secretName := print (include "cas-cif.fullname" .) }}
{{- $dbReadonlyUser := "unfetched user" }}
{{- $dbReadonlyPassword := "unfetched password" }}
{{- $dbName := "unfetched db-name" }}

{{- $secret := (lookup "v1" "Secret" .Release.Namespace $secretName ) }}
{{- if $secret }}
{{- $sessionSecret = index $secret.data "session-secret" }}
{{- end -}}

{{- $ggircsSecret := (lookup "v1" "Secret" .Values.ggircs.namespace .Values.ggircs.instanceName ) }}
{{- if $ggircsSecret }}
{{- $dbReadonlyUser = index $ggircsSecret.data "database-readonly-user" }}
{{- $dbReadonlyPassword = index $ggircsSecret.data "database-readonly-password" }}
{{- $dbName = index $ggircsSecret.data "database-name" }}
{{- else }}
{{- print "WARNING ggircsSecret does not exist, connection to the ggircs db will fail" }}
{{- end -}}

apiVersion: v1
kind: Secret
metadata:
  name: {{ $secretName }}
  labels: {{ include "cas-cif.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": "pre-install,pre-upgrade"
type: Opaque
data:
  session-secret: {{ $sessionSecret }}
---

apiVersion: v1
kind: Secret
metadata:
  name: cas-ggircs
  labels: {{ include "cas-cif.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": "pre-install,pre-upgrade"
type: Opaque
data:
  ggircs-readonly-user: {{ $dbReadonlyUser }}
  ggircs-readonly-password: {{ $dbReadonlyPassword }}
  database-name: {{ $dbName }}
