{
  "data": {
    "__schema": {
      "queryType": {
        "name": "Query"
      },
      "mutationType": {
        "name": "Mutation"
      },
      "subscriptionType": null,
      "types": [
        {
          "kind": "OBJECT",
          "name": "Attachment",
          "description": "Table containing information about uploaded attachments",
          "fields": [
            {
              "name": "cifUserByCreatedBy",
              "description": "Reads a single `CifUser` that is related to this `Attachment`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUserByDeletedBy",
              "description": "Reads a single `CifUser` that is related to this `Attachment`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUserByUpdatedBy",
              "description": "Reads a single `CifUser` that is related to this `Attachment`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "created at timestamp",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Datetime",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdBy",
              "description": "created by user id",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "deletedAt",
              "description": "deleted at timestamp",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "deletedBy",
              "description": "deleted by user id",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "file",
              "description": "Universally Unique ID for the attachment, created by the fastapi storage micro-service",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "UUID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "fileName",
              "description": "Original uploaded filename",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": "A globally unique identifier. Can be used in various places throughout the system to identify this single value.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "rowId",
              "description": "Unique ID for the attachment",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "updated at timestamp",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Datetime",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedBy",
              "description": "updated by user id",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "AttachmentCondition",
          "description": "A condition to be used against `Attachment` object types. All fields are tested\nfor equality and combined with a logical ‘and.’",
          "fields": null,
          "inputFields": [
            {
              "name": "createdAt",
              "description": "Checks for equality with the object’s `createdAt` field.",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "createdBy",
              "description": "Checks for equality with the object’s `createdBy` field.",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "deletedAt",
              "description": "Checks for equality with the object’s `deletedAt` field.",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "deletedBy",
              "description": "Checks for equality with the object’s `deletedBy` field.",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "file",
              "description": "Checks for equality with the object’s `file` field.",
              "type": {
                "kind": "SCALAR",
                "name": "UUID",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "fileName",
              "description": "Checks for equality with the object’s `fileName` field.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "rowId",
              "description": "Checks for equality with the object’s `rowId` field.",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "updatedAt",
              "description": "Checks for equality with the object’s `updatedAt` field.",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "updatedBy",
              "description": "Checks for equality with the object’s `updatedBy` field.",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "AttachmentFilter",
          "description": "A filter to be used against `Attachment` object types. All fields are combined with a logical ‘and.’",
          "fields": null,
          "inputFields": [
            {
              "name": "and",
              "description": "Checks for all expressions in this list.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "AttachmentFilter",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "cifUserByCreatedBy",
              "description": "Filter by the object’s `cifUserByCreatedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "cifUserByCreatedByExists",
              "description": "A related `cifUserByCreatedBy` exists.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "cifUserByDeletedBy",
              "description": "Filter by the object’s `cifUserByDeletedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "cifUserByDeletedByExists",
              "description": "A related `cifUserByDeletedBy` exists.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "cifUserByUpdatedBy",
              "description": "Filter by the object’s `cifUserByUpdatedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "cifUserByUpdatedByExists",
              "description": "A related `cifUserByUpdatedBy` exists.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "createdAt",
              "description": "Filter by the object’s `createdAt` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DatetimeFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "createdBy",
              "description": "Filter by the object’s `createdBy` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IntFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "deletedAt",
              "description": "Filter by the object’s `deletedAt` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DatetimeFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "deletedBy",
              "description": "Filter by the object’s `deletedBy` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IntFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "file",
              "description": "Filter by the object’s `file` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "UUIDFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "fileName",
              "description": "Filter by the object’s `fileName` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Negates the expression.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "AttachmentFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "or",
              "description": "Checks for any expressions in this list.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "AttachmentFilter",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "rowId",
              "description": "Filter by the object’s `rowId` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IntFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "updatedAt",
              "description": "Filter by the object’s `updatedAt` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DatetimeFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "updatedBy",
              "description": "Filter by the object’s `updatedBy` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IntFilter",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "AttachmentInput",
          "description": "An input for mutations affecting `Attachment`",
          "fields": null,
          "inputFields": [
            {
              "name": "createdAt",
              "description": "created at timestamp",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "createdBy",
              "description": "created by user id",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "deletedAt",
              "description": "deleted at timestamp",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "deletedBy",
              "description": "deleted by user id",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "file",
              "description": "Universally Unique ID for the attachment, created by the fastapi storage micro-service",
              "type": {
                "kind": "SCALAR",
                "name": "Upload",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "fileName",
              "description": "Original uploaded filename",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "updatedAt",
              "description": "updated at timestamp",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "updatedBy",
              "description": "updated by user id",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "AttachmentPatch",
          "description": "Represents an update to a `Attachment`. Fields that are set will be updated.",
          "fields": null,
          "inputFields": [
            {
              "name": "createdAt",
              "description": "created at timestamp",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "createdBy",
              "description": "created by user id",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "deletedAt",
              "description": "deleted at timestamp",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "deletedBy",
              "description": "deleted by user id",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "file",
              "description": "Universally Unique ID for the attachment, created by the fastapi storage micro-service",
              "type": {
                "kind": "SCALAR",
                "name": "Upload",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "fileName",
              "description": "Original uploaded filename",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "updatedAt",
              "description": "updated at timestamp",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "updatedBy",
              "description": "updated by user id",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "AttachmentsConnection",
          "description": "A connection to a list of `Attachment` values.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `Attachment` and cursor to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "AttachmentsEdge",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of `Attachment` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "Attachment",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "The count of *all* `Attachment` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "AttachmentsEdge",
          "description": "A `Attachment` edge in the connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `Attachment` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Attachment",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "AttachmentsOrderBy",
          "description": "Methods to use when ordering `Attachment`.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "CREATED_AT_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CREATED_AT_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CREATED_BY_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CREATED_BY_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DELETED_AT_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DELETED_AT_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DELETED_BY_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DELETED_BY_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FILE_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FILE_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FILE_NAME_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FILE_NAME_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ID_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ID_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NATURAL",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PRIMARY_KEY_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PRIMARY_KEY_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UPDATED_AT_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UPDATED_AT_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UPDATED_BY_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UPDATED_BY_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "SCALAR",
          "name": "Boolean",
          "description": "The `Boolean` scalar type represents `true` or `false`.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "BooleanFilter",
          "description": "A filter to be used against Boolean fields. All fields are combined with a logical ‘and.’",
          "fields": null,
          "inputFields": [
            {
              "name": "distinctFrom",
              "description": "Not equal to the specified value, treating null like an ordinary value.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "equalTo",
              "description": "Equal to the specified value.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "greaterThan",
              "description": "Greater than the specified value.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "greaterThanOrEqualTo",
              "description": "Greater than or equal to the specified value.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "in",
              "description": "Included in the specified list.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "Boolean",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "isNull",
              "description": "Is null (if `true` is specified) or is not null (if `false` is specified).",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "lessThan",
              "description": "Less than the specified value.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "lessThanOrEqualTo",
              "description": "Less than or equal to the specified value.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "notDistinctFrom",
              "description": "Equal to the specified value, treating null like an ordinary value.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "notEqualTo",
              "description": "Not equal to the specified value.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "notIn",
              "description": "Not included in the specified list.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "Boolean",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "ChangeStatus",
          "description": "Table containing the different status that a change can have",
          "fields": [
            {
              "name": "active",
              "description": "Whether that status is active",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUserByCreatedBy",
              "description": "Reads a single `CifUser` that is related to this `ChangeStatus`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUserByDeletedBy",
              "description": "Reads a single `CifUser` that is related to this `ChangeStatus`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUserByUpdatedBy",
              "description": "Reads a single `CifUser` that is related to this `ChangeStatus`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUsersByFormChangeChangeStatusAndCreatedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `CifUser`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "CifUsersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ChangeStatusCifUsersByFormChangeChangeStatusAndCreatedByManyToManyConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUsersByFormChangeChangeStatusAndDeletedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `CifUser`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "CifUsersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ChangeStatusCifUsersByFormChangeChangeStatusAndDeletedByManyToManyConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUsersByFormChangeChangeStatusAndUpdatedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `CifUser`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "CifUsersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ChangeStatusCifUsersByFormChangeChangeStatusAndUpdatedByManyToManyConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "created at timestamp",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Datetime",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdBy",
              "description": "created by user id",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "deletedAt",
              "description": "deleted at timestamp",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "deletedBy",
              "description": "deleted by user id",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "formChangesByChangeStatus",
              "description": "Reads and enables pagination through a set of `FormChange`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "FormChangeCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "FormChangeFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `FormChange`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "FormChangesOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "FormChangesConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": "A globally unique identifier. Can be used in various places throughout the system to identify this single value.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "status",
              "description": "The name of the status, e.g. \"pending\", \"committed\", ...",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "triggersCommit",
              "description": "Whether that status should trigger a commit of the record described by the change",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "updated at timestamp",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Datetime",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedBy",
              "description": "updated by user id",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "ChangeStatusCifUsersByFormChangeChangeStatusAndCreatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `FormChange`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `FormChange`, and the cursor to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "ChangeStatusCifUsersByFormChangeChangeStatusAndCreatedByManyToManyEdge",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "ChangeStatusCifUsersByFormChangeChangeStatusAndCreatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `FormChange`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "formChangesByCreatedBy",
              "description": "Reads and enables pagination through a set of `FormChange`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "FormChangeCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "FormChangeFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `FormChange`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "FormChangesOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "FormChangesConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "ChangeStatusCifUsersByFormChangeChangeStatusAndDeletedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `FormChange`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `FormChange`, and the cursor to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "ChangeStatusCifUsersByFormChangeChangeStatusAndDeletedByManyToManyEdge",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "ChangeStatusCifUsersByFormChangeChangeStatusAndDeletedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `FormChange`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "formChangesByDeletedBy",
              "description": "Reads and enables pagination through a set of `FormChange`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "FormChangeCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "FormChangeFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `FormChange`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "FormChangesOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "FormChangesConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "ChangeStatusCifUsersByFormChangeChangeStatusAndUpdatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `FormChange`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `FormChange`, and the cursor to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "ChangeStatusCifUsersByFormChangeChangeStatusAndUpdatedByManyToManyEdge",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "ChangeStatusCifUsersByFormChangeChangeStatusAndUpdatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `FormChange`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "formChangesByUpdatedBy",
              "description": "Reads and enables pagination through a set of `FormChange`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "FormChangeCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "FormChangeFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `FormChange`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "FormChangesOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "FormChangesConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "ChangeStatusCondition",
          "description": "A condition to be used against `ChangeStatus` object types. All fields are\ntested for equality and combined with a logical ‘and.’",
          "fields": null,
          "inputFields": [
            {
              "name": "active",
              "description": "Checks for equality with the object’s `active` field.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "createdAt",
              "description": "Checks for equality with the object’s `createdAt` field.",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "createdBy",
              "description": "Checks for equality with the object’s `createdBy` field.",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "deletedAt",
              "description": "Checks for equality with the object’s `deletedAt` field.",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "deletedBy",
              "description": "Checks for equality with the object’s `deletedBy` field.",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "status",
              "description": "Checks for equality with the object’s `status` field.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "triggersCommit",
              "description": "Checks for equality with the object’s `triggersCommit` field.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "updatedAt",
              "description": "Checks for equality with the object’s `updatedAt` field.",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "updatedBy",
              "description": "Checks for equality with the object’s `updatedBy` field.",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "ChangeStatusFilter",
          "description": "A filter to be used against `ChangeStatus` object types. All fields are combined with a logical ‘and.’",
          "fields": null,
          "inputFields": [
            {
              "name": "active",
              "description": "Filter by the object’s `active` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "BooleanFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "and",
              "description": "Checks for all expressions in this list.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "ChangeStatusFilter",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "cifUserByCreatedBy",
              "description": "Filter by the object’s `cifUserByCreatedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "cifUserByCreatedByExists",
              "description": "A related `cifUserByCreatedBy` exists.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "cifUserByDeletedBy",
              "description": "Filter by the object’s `cifUserByDeletedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "cifUserByDeletedByExists",
              "description": "A related `cifUserByDeletedBy` exists.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "cifUserByUpdatedBy",
              "description": "Filter by the object’s `cifUserByUpdatedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "cifUserByUpdatedByExists",
              "description": "A related `cifUserByUpdatedBy` exists.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "createdAt",
              "description": "Filter by the object’s `createdAt` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DatetimeFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "createdBy",
              "description": "Filter by the object’s `createdBy` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IntFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "deletedAt",
              "description": "Filter by the object’s `deletedAt` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DatetimeFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "deletedBy",
              "description": "Filter by the object’s `deletedBy` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IntFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "formChangesByChangeStatus",
              "description": "Filter by the object’s `formChangesByChangeStatus` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "ChangeStatusToManyFormChangeFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "formChangesByChangeStatusExist",
              "description": "Some related `formChangesByChangeStatus` exist.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Negates the expression.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "ChangeStatusFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "or",
              "description": "Checks for any expressions in this list.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "ChangeStatusFilter",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "status",
              "description": "Filter by the object’s `status` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "triggersCommit",
              "description": "Filter by the object’s `triggersCommit` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "BooleanFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "updatedAt",
              "description": "Filter by the object’s `updatedAt` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DatetimeFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "updatedBy",
              "description": "Filter by the object’s `updatedBy` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IntFilter",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "ChangeStatusInput",
          "description": "An input for mutations affecting `ChangeStatus`",
          "fields": null,
          "inputFields": [
            {
              "name": "active",
              "description": "Whether that status is active",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "createdAt",
              "description": "created at timestamp",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "createdBy",
              "description": "created by user id",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "deletedAt",
              "description": "deleted at timestamp",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "deletedBy",
              "description": "deleted by user id",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "status",
              "description": "The name of the status, e.g. \"pending\", \"committed\", ...",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "triggersCommit",
              "description": "Whether that status should trigger a commit of the record described by the change",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "updatedAt",
              "description": "updated at timestamp",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "updatedBy",
              "description": "updated by user id",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "ChangeStatusPatch",
          "description": "Represents an update to a `ChangeStatus`. Fields that are set will be updated.",
          "fields": null,
          "inputFields": [
            {
              "name": "active",
              "description": "Whether that status is active",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "createdAt",
              "description": "created at timestamp",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "createdBy",
              "description": "created by user id",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "deletedAt",
              "description": "deleted at timestamp",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "deletedBy",
              "description": "deleted by user id",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "status",
              "description": "The name of the status, e.g. \"pending\", \"committed\", ...",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "triggersCommit",
              "description": "Whether that status should trigger a commit of the record described by the change",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "updatedAt",
              "description": "updated at timestamp",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "updatedBy",
              "description": "updated by user id",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "ChangeStatusToManyFormChangeFilter",
          "description": "A filter to be used against many `FormChange` object types. All fields are combined with a logical ‘and.’",
          "fields": null,
          "inputFields": [
            {
              "name": "every",
              "description": "Every related `FormChange` matches the filter criteria. All fields are combined with a logical ‘and.’",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "FormChangeFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "none",
              "description": "No related `FormChange` matches the filter criteria. All fields are combined with a logical ‘and.’",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "FormChangeFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "some",
              "description": "Some related `FormChange` matches the filter criteria. All fields are combined with a logical ‘and.’",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "FormChangeFilter",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "ChangeStatusesConnection",
          "description": "A connection to a list of `ChangeStatus` values.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `ChangeStatus` and cursor to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "ChangeStatusesEdge",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of `ChangeStatus` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "ChangeStatus",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "The count of *all* `ChangeStatus` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "ChangeStatusesEdge",
          "description": "A `ChangeStatus` edge in the connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `ChangeStatus` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "ChangeStatus",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "ChangeStatusesOrderBy",
          "description": "Methods to use when ordering `ChangeStatus`.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "ACTIVE_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ACTIVE_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CREATED_AT_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CREATED_AT_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CREATED_BY_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CREATED_BY_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DELETED_AT_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DELETED_AT_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DELETED_BY_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DELETED_BY_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NATURAL",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PRIMARY_KEY_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PRIMARY_KEY_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "STATUS_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "STATUS_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TRIGGERS_COMMIT_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TRIGGERS_COMMIT_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UPDATED_AT_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UPDATED_AT_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UPDATED_BY_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UPDATED_BY_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUser",
          "description": "Table containing information about the application's users ",
          "fields": [
            {
              "name": "attachmentsByCreatedBy",
              "description": "Reads and enables pagination through a set of `Attachment`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "AttachmentCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "AttachmentFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `Attachment`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "AttachmentsOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "AttachmentsConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "attachmentsByDeletedBy",
              "description": "Reads and enables pagination through a set of `Attachment`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "AttachmentCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "AttachmentFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `Attachment`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "AttachmentsOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "AttachmentsConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "attachmentsByUpdatedBy",
              "description": "Reads and enables pagination through a set of `Attachment`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "AttachmentCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "AttachmentFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `Attachment`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "AttachmentsOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "AttachmentsConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "changeStatusesByCreatedBy",
              "description": "Reads and enables pagination through a set of `ChangeStatus`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ChangeStatusCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ChangeStatusFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `ChangeStatus`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "ChangeStatusesOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ChangeStatusesConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "changeStatusesByDeletedBy",
              "description": "Reads and enables pagination through a set of `ChangeStatus`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ChangeStatusCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ChangeStatusFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `ChangeStatus`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "ChangeStatusesOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ChangeStatusesConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "changeStatusesByFormChangeCreatedByAndChangeStatus",
              "description": "Reads and enables pagination through a set of `ChangeStatus`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ChangeStatusCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ChangeStatusFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `ChangeStatus`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "ChangeStatusesOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CifUserChangeStatusesByFormChangeCreatedByAndChangeStatusManyToManyConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "changeStatusesByFormChangeDeletedByAndChangeStatus",
              "description": "Reads and enables pagination through a set of `ChangeStatus`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ChangeStatusCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ChangeStatusFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `ChangeStatus`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "ChangeStatusesOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CifUserChangeStatusesByFormChangeDeletedByAndChangeStatusManyToManyConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "changeStatusesByFormChangeUpdatedByAndChangeStatus",
              "description": "Reads and enables pagination through a set of `ChangeStatus`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ChangeStatusCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ChangeStatusFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `ChangeStatus`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "ChangeStatusesOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CifUserChangeStatusesByFormChangeUpdatedByAndChangeStatusManyToManyConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "changeStatusesByUpdatedBy",
              "description": "Reads and enables pagination through a set of `ChangeStatus`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ChangeStatusCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ChangeStatusFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `ChangeStatus`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "ChangeStatusesOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ChangeStatusesConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUserByCreatedBy",
              "description": "Reads a single `CifUser` that is related to this `CifUser`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUserByDeletedBy",
              "description": "Reads a single `CifUser` that is related to this `CifUser`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUserByUpdatedBy",
              "description": "Reads a single `CifUser` that is related to this `CifUser`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUsersByAttachmentCreatedByAndDeletedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `CifUser`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "CifUsersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CifUserCifUsersByAttachmentCreatedByAndDeletedByManyToManyConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUsersByAttachmentCreatedByAndUpdatedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `CifUser`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "CifUsersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CifUserCifUsersByAttachmentCreatedByAndUpdatedByManyToManyConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUsersByAttachmentDeletedByAndCreatedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `CifUser`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "CifUsersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CifUserCifUsersByAttachmentDeletedByAndCreatedByManyToManyConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUsersByAttachmentDeletedByAndUpdatedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `CifUser`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "CifUsersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CifUserCifUsersByAttachmentDeletedByAndUpdatedByManyToManyConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUsersByAttachmentUpdatedByAndCreatedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `CifUser`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "CifUsersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CifUserCifUsersByAttachmentUpdatedByAndCreatedByManyToManyConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUsersByAttachmentUpdatedByAndDeletedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `CifUser`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "CifUsersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CifUserCifUsersByAttachmentUpdatedByAndDeletedByManyToManyConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUsersByChangeStatusCreatedByAndDeletedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `CifUser`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "CifUsersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CifUserCifUsersByChangeStatusCreatedByAndDeletedByManyToManyConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUsersByChangeStatusCreatedByAndUpdatedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `CifUser`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "CifUsersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CifUserCifUsersByChangeStatusCreatedByAndUpdatedByManyToManyConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUsersByChangeStatusDeletedByAndCreatedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `CifUser`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "CifUsersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CifUserCifUsersByChangeStatusDeletedByAndCreatedByManyToManyConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUsersByChangeStatusDeletedByAndUpdatedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `CifUser`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "CifUsersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CifUserCifUsersByChangeStatusDeletedByAndUpdatedByManyToManyConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUsersByChangeStatusUpdatedByAndCreatedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `CifUser`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "CifUsersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CifUserCifUsersByChangeStatusUpdatedByAndCreatedByManyToManyConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUsersByChangeStatusUpdatedByAndDeletedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `CifUser`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "CifUsersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CifUserCifUsersByChangeStatusUpdatedByAndDeletedByManyToManyConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUsersByCifUserCreatedByAndDeletedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `CifUser`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "CifUsersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CifUserCifUsersByCifUserCreatedByAndDeletedByManyToManyConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUsersByCifUserCreatedByAndUpdatedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `CifUser`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "CifUsersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CifUserCifUsersByCifUserCreatedByAndUpdatedByManyToManyConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUsersByCifUserDeletedByAndCreatedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `CifUser`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "CifUsersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CifUserCifUsersByCifUserDeletedByAndCreatedByManyToManyConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUsersByCifUserDeletedByAndUpdatedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `CifUser`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "CifUsersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CifUserCifUsersByCifUserDeletedByAndUpdatedByManyToManyConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUsersByCifUserUpdatedByAndCreatedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `CifUser`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "CifUsersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CifUserCifUsersByCifUserUpdatedByAndCreatedByManyToManyConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUsersByCifUserUpdatedByAndDeletedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `CifUser`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "CifUsersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CifUserCifUsersByCifUserUpdatedByAndDeletedByManyToManyConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUsersByCreatedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `CifUser`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "CifUsersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CifUsersConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUsersByDeletedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `CifUser`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "CifUsersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CifUsersConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUsersByFormChangeCreatedByAndDeletedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `CifUser`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "CifUsersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CifUserCifUsersByFormChangeCreatedByAndDeletedByManyToManyConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUsersByFormChangeCreatedByAndUpdatedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `CifUser`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "CifUsersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CifUserCifUsersByFormChangeCreatedByAndUpdatedByManyToManyConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUsersByFormChangeDeletedByAndCreatedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `CifUser`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "CifUsersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CifUserCifUsersByFormChangeDeletedByAndCreatedByManyToManyConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUsersByFormChangeDeletedByAndUpdatedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `CifUser`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "CifUsersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CifUserCifUsersByFormChangeDeletedByAndUpdatedByManyToManyConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUsersByFormChangeUpdatedByAndCreatedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `CifUser`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "CifUsersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CifUserCifUsersByFormChangeUpdatedByAndCreatedByManyToManyConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUsersByFormChangeUpdatedByAndDeletedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `CifUser`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "CifUsersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CifUserCifUsersByFormChangeUpdatedByAndDeletedByManyToManyConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUsersByFundingStreamCreatedByAndDeletedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `CifUser`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "CifUsersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CifUserCifUsersByFundingStreamCreatedByAndDeletedByManyToManyConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUsersByFundingStreamCreatedByAndUpdatedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `CifUser`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "CifUsersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CifUserCifUsersByFundingStreamCreatedByAndUpdatedByManyToManyConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUsersByFundingStreamDeletedByAndCreatedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `CifUser`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "CifUsersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CifUserCifUsersByFundingStreamDeletedByAndCreatedByManyToManyConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUsersByFundingStreamDeletedByAndUpdatedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `CifUser`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "CifUsersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CifUserCifUsersByFundingStreamDeletedByAndUpdatedByManyToManyConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUsersByFundingStreamUpdatedByAndCreatedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `CifUser`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "CifUsersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CifUserCifUsersByFundingStreamUpdatedByAndCreatedByManyToManyConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUsersByFundingStreamUpdatedByAndDeletedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `CifUser`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "CifUsersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CifUserCifUsersByFundingStreamUpdatedByAndDeletedByManyToManyConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUsersByProjectCreatedByAndDeletedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `CifUser`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "CifUsersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CifUserCifUsersByProjectCreatedByAndDeletedByManyToManyConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUsersByProjectCreatedByAndUpdatedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `CifUser`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "CifUsersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CifUserCifUsersByProjectCreatedByAndUpdatedByManyToManyConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUsersByProjectDeletedByAndCreatedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `CifUser`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "CifUsersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CifUserCifUsersByProjectDeletedByAndCreatedByManyToManyConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUsersByProjectDeletedByAndUpdatedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `CifUser`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "CifUsersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CifUserCifUsersByProjectDeletedByAndUpdatedByManyToManyConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUsersByProjectManagerCifUserIdAndCreatedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `CifUser`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "CifUsersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CifUserCifUsersByProjectManagerCifUserIdAndCreatedByManyToManyConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUsersByProjectManagerCifUserIdAndDeletedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `CifUser`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "CifUsersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CifUserCifUsersByProjectManagerCifUserIdAndDeletedByManyToManyConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUsersByProjectManagerCifUserIdAndUpdatedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `CifUser`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "CifUsersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CifUserCifUsersByProjectManagerCifUserIdAndUpdatedByManyToManyConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "cifUsersByProjectManagerCreatedByAndCifUserId",
=======
<<<<<<< HEAD
              "name": "cifUsersByFundingStreamCreatedByAndDeletedBy",
=======
              "name": "cifUsersByOperatorCreatedByAndDeletedBy",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
              "description": "Reads and enables pagination through a set of `CifUser`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `CifUser`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "CifUsersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
<<<<<<< HEAD
                  "name": "CifUserCifUsersByProjectManagerCreatedByAndCifUserIdManyToManyConnection",
=======
<<<<<<< HEAD
                  "name": "CifUserCifUsersByFundingStreamCreatedByAndDeletedByManyToManyConnection",
=======
                  "name": "CifUserCifUsersByOperatorCreatedByAndDeletedByManyToManyConnection",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "cifUsersByProjectManagerCreatedByAndDeletedBy",
=======
<<<<<<< HEAD
              "name": "cifUsersByFundingStreamCreatedByAndUpdatedBy",
=======
              "name": "cifUsersByOperatorCreatedByAndUpdatedBy",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
              "description": "Reads and enables pagination through a set of `CifUser`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `CifUser`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "CifUsersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
<<<<<<< HEAD
                  "name": "CifUserCifUsersByProjectManagerCreatedByAndDeletedByManyToManyConnection",
=======
<<<<<<< HEAD
                  "name": "CifUserCifUsersByFundingStreamCreatedByAndUpdatedByManyToManyConnection",
=======
                  "name": "CifUserCifUsersByOperatorCreatedByAndUpdatedByManyToManyConnection",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "cifUsersByProjectManagerCreatedByAndUpdatedBy",
=======
<<<<<<< HEAD
              "name": "cifUsersByFundingStreamDeletedByAndCreatedBy",
=======
              "name": "cifUsersByOperatorDeletedByAndCreatedBy",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
              "description": "Reads and enables pagination through a set of `CifUser`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `CifUser`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "CifUsersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
<<<<<<< HEAD
                  "name": "CifUserCifUsersByProjectManagerCreatedByAndUpdatedByManyToManyConnection",
=======
<<<<<<< HEAD
                  "name": "CifUserCifUsersByFundingStreamDeletedByAndCreatedByManyToManyConnection",
=======
                  "name": "CifUserCifUsersByOperatorDeletedByAndCreatedByManyToManyConnection",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "cifUsersByProjectManagerDeletedByAndCifUserId",
=======
<<<<<<< HEAD
              "name": "cifUsersByFundingStreamDeletedByAndUpdatedBy",
=======
              "name": "cifUsersByOperatorDeletedByAndUpdatedBy",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
              "description": "Reads and enables pagination through a set of `CifUser`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `CifUser`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "CifUsersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
<<<<<<< HEAD
                  "name": "CifUserCifUsersByProjectManagerDeletedByAndCifUserIdManyToManyConnection",
=======
<<<<<<< HEAD
                  "name": "CifUserCifUsersByFundingStreamDeletedByAndUpdatedByManyToManyConnection",
=======
                  "name": "CifUserCifUsersByOperatorDeletedByAndUpdatedByManyToManyConnection",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "cifUsersByProjectManagerDeletedByAndCreatedBy",
=======
<<<<<<< HEAD
              "name": "cifUsersByFundingStreamUpdatedByAndCreatedBy",
=======
<<<<<<< HEAD
              "name": "cifUsersByProjectManagerCifUserIdAndCreatedBy",
=======
              "name": "cifUsersByOperatorUpdatedByAndCreatedBy",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
              "description": "Reads and enables pagination through a set of `CifUser`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `CifUser`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "CifUsersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
<<<<<<< HEAD
                  "name": "CifUserCifUsersByProjectManagerDeletedByAndCreatedByManyToManyConnection",
=======
<<<<<<< HEAD
                  "name": "CifUserCifUsersByFundingStreamUpdatedByAndCreatedByManyToManyConnection",
=======
<<<<<<< HEAD
                  "name": "CifUserCifUsersByProjectManagerCifUserIdAndCreatedByManyToManyConnection",
=======
                  "name": "CifUserCifUsersByOperatorUpdatedByAndCreatedByManyToManyConnection",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "cifUsersByProjectManagerDeletedByAndUpdatedBy",
=======
<<<<<<< HEAD
              "name": "cifUsersByFundingStreamUpdatedByAndDeletedBy",
=======
<<<<<<< HEAD
              "name": "cifUsersByProjectManagerCifUserIdAndDeletedBy",
=======
              "name": "cifUsersByOperatorUpdatedByAndDeletedBy",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
              "description": "Reads and enables pagination through a set of `CifUser`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `CifUser`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "CifUsersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
<<<<<<< HEAD
                  "name": "CifUserCifUsersByProjectManagerDeletedByAndUpdatedByManyToManyConnection",
=======
<<<<<<< HEAD
                  "name": "CifUserCifUsersByFundingStreamUpdatedByAndDeletedByManyToManyConnection",
=======
<<<<<<< HEAD
                  "name": "CifUserCifUsersByProjectManagerCifUserIdAndDeletedByManyToManyConnection",
=======
                  "name": "CifUserCifUsersByOperatorUpdatedByAndDeletedByManyToManyConnection",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "cifUsersByProjectManagerUpdatedByAndCifUserId",
=======
<<<<<<< HEAD
              "name": "cifUsersByProjectCreatedByAndDeletedBy",
=======
<<<<<<< HEAD
              "name": "cifUsersByProjectManagerCifUserIdAndUpdatedBy",
=======
              "name": "cifUsersByProjectCreatedByAndDeletedBy",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
              "description": "Reads and enables pagination through a set of `CifUser`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `CifUser`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "CifUsersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
<<<<<<< HEAD
                  "name": "CifUserCifUsersByProjectManagerUpdatedByAndCifUserIdManyToManyConnection",
=======
<<<<<<< HEAD
                  "name": "CifUserCifUsersByProjectCreatedByAndDeletedByManyToManyConnection",
=======
<<<<<<< HEAD
                  "name": "CifUserCifUsersByProjectManagerCifUserIdAndUpdatedByManyToManyConnection",
=======
                  "name": "CifUserCifUsersByProjectCreatedByAndDeletedByManyToManyConnection",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "cifUsersByProjectManagerUpdatedByAndCreatedBy",
=======
<<<<<<< HEAD
              "name": "cifUsersByProjectCreatedByAndUpdatedBy",
=======
<<<<<<< HEAD
              "name": "cifUsersByProjectManagerCreatedByAndCifUserId",
=======
              "name": "cifUsersByProjectCreatedByAndUpdatedBy",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
              "description": "Reads and enables pagination through a set of `CifUser`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `CifUser`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "CifUsersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
<<<<<<< HEAD
                  "name": "CifUserCifUsersByProjectManagerUpdatedByAndCreatedByManyToManyConnection",
=======
<<<<<<< HEAD
                  "name": "CifUserCifUsersByProjectCreatedByAndUpdatedByManyToManyConnection",
=======
<<<<<<< HEAD
                  "name": "CifUserCifUsersByProjectManagerCreatedByAndCifUserIdManyToManyConnection",
=======
                  "name": "CifUserCifUsersByProjectCreatedByAndUpdatedByManyToManyConnection",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "cifUsersByProjectManagerUpdatedByAndDeletedBy",
=======
<<<<<<< HEAD
              "name": "cifUsersByProjectDeletedByAndCreatedBy",
=======
<<<<<<< HEAD
              "name": "cifUsersByProjectManagerCreatedByAndDeletedBy",
=======
              "name": "cifUsersByProjectDeletedByAndCreatedBy",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
              "description": "Reads and enables pagination through a set of `CifUser`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `CifUser`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "CifUsersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
<<<<<<< HEAD
                  "name": "CifUserCifUsersByProjectManagerUpdatedByAndDeletedByManyToManyConnection",
=======
<<<<<<< HEAD
                  "name": "CifUserCifUsersByProjectDeletedByAndCreatedByManyToManyConnection",
=======
<<<<<<< HEAD
                  "name": "CifUserCifUsersByProjectManagerCreatedByAndDeletedByManyToManyConnection",
=======
                  "name": "CifUserCifUsersByProjectDeletedByAndCreatedByManyToManyConnection",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "cifUsersByProjectUpdatedByAndCreatedBy",
=======
<<<<<<< HEAD
              "name": "cifUsersByProjectDeletedByAndUpdatedBy",
=======
<<<<<<< HEAD
              "name": "cifUsersByProjectManagerCreatedByAndUpdatedBy",
=======
              "name": "cifUsersByProjectDeletedByAndUpdatedBy",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
              "description": "Reads and enables pagination through a set of `CifUser`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `CifUser`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "CifUsersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
<<<<<<< HEAD
                  "name": "CifUserCifUsersByProjectUpdatedByAndCreatedByManyToManyConnection",
=======
<<<<<<< HEAD
                  "name": "CifUserCifUsersByProjectDeletedByAndUpdatedByManyToManyConnection",
=======
<<<<<<< HEAD
                  "name": "CifUserCifUsersByProjectManagerCreatedByAndUpdatedByManyToManyConnection",
=======
                  "name": "CifUserCifUsersByProjectDeletedByAndUpdatedByManyToManyConnection",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
<<<<<<< HEAD
              "name": "cifUsersByProjectUpdatedByAndDeletedBy",
=======
<<<<<<< HEAD
              "name": "cifUsersByFundingStreamUpdatedByAndCreatedBy",
>>>>>>> refactor: update schema & reorder sqitch plan
=======
<<<<<<< HEAD
              "name": "cifUsersByProjectManagerCifUserIdAndCreatedBy",
=======
<<<<<<< HEAD
              "name": "cifUsersByProjectManagerDeletedByAndCifUserId",
=======
              "name": "cifUsersByProjectUpdatedByAndCreatedBy",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
              "name": "cifUsersByOperatorUpdatedByAndCreatedBy",
>>>>>>> refactor: update schema & reorder sqitch plan
              "description": "Reads and enables pagination through a set of `CifUser`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `CifUser`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "CifUsersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                  "name": "CifUserCifUsersByProjectUpdatedByAndDeletedByManyToManyConnection",
=======
<<<<<<< HEAD
                  "name": "CifUserCifUsersByFundingStreamUpdatedByAndCreatedByManyToManyConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
=======
<<<<<<< HEAD
                  "name": "CifUserCifUsersByProjectManagerCifUserIdAndCreatedByManyToManyConnection",
=======
<<<<<<< HEAD
                  "name": "CifUserCifUsersByProjectManagerDeletedByAndCifUserIdManyToManyConnection",
=======
                  "name": "CifUserCifUsersByProjectUpdatedByAndCreatedByManyToManyConnection",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
                  "name": "CifUserCifUsersByOperatorUpdatedByAndCreatedByManyToManyConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
<<<<<<< HEAD
              "name": "cifUsersByUpdatedBy",
=======
<<<<<<< HEAD
              "name": "cifUsersByFundingStreamUpdatedByAndDeletedBy",
>>>>>>> refactor: update schema & reorder sqitch plan
=======
<<<<<<< HEAD
              "name": "cifUsersByProjectManagerCifUserIdAndDeletedBy",
=======
<<<<<<< HEAD
              "name": "cifUsersByProjectManagerDeletedByAndCreatedBy",
=======
              "name": "cifUsersByProjectUpdatedByAndDeletedBy",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
              "name": "cifUsersByOperatorUpdatedByAndDeletedBy",
>>>>>>> refactor: update schema & reorder sqitch plan
              "description": "Reads and enables pagination through a set of `CifUser`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `CifUser`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "CifUsersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                  "name": "CifUsersConnection",
=======
<<<<<<< HEAD
                  "name": "CifUserCifUsersByFundingStreamUpdatedByAndDeletedByManyToManyConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
=======
<<<<<<< HEAD
                  "name": "CifUserCifUsersByProjectManagerCifUserIdAndDeletedByManyToManyConnection",
=======
<<<<<<< HEAD
                  "name": "CifUserCifUsersByProjectManagerDeletedByAndCreatedByManyToManyConnection",
=======
                  "name": "CifUserCifUsersByProjectUpdatedByAndDeletedByManyToManyConnection",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
                  "name": "CifUserCifUsersByOperatorUpdatedByAndDeletedByManyToManyConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
<<<<<<< HEAD
              "name": "createdAt",
              "description": "created at timestamp",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Datetime",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdBy",
              "description": "created by user id",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "deletedAt",
              "description": "deleted at timestamp",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "deletedBy",
              "description": "deleted by user id",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "emailAddress",
              "description": "User's email address",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "firstName",
              "description": "User's first name",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "formChangesByCreatedBy",
              "description": "Reads and enables pagination through a set of `FormChange`.",
=======
<<<<<<< HEAD
              "name": "cifUsersByProjectManagerCifUserIdAndUpdatedBy",
=======
<<<<<<< HEAD
              "name": "cifUsersByProjectManagerDeletedByAndUpdatedBy",
=======
              "name": "cifUsersByUpdatedBy",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
              "name": "cifUsersByProjectCreatedByAndDeletedBy",
>>>>>>> refactor: update schema & reorder sqitch plan
              "description": "Reads and enables pagination through a set of `CifUser`.",
>>>>>>> chore: add basic SelectOperator component
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "FormChangeCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "FormChangeFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `FormChange`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "FormChangesOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                  "name": "FormChangesConnection",
=======
<<<<<<< HEAD
                  "name": "CifUserCifUsersByProjectManagerCifUserIdAndUpdatedByManyToManyConnection",
=======
<<<<<<< HEAD
                  "name": "CifUserCifUsersByProjectManagerDeletedByAndUpdatedByManyToManyConnection",
=======
                  "name": "CifUsersConnection",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
                  "name": "CifUserCifUsersByProjectCreatedByAndDeletedByManyToManyConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
<<<<<<< HEAD
              "name": "formChangesByDeletedBy",
              "description": "Reads and enables pagination through a set of `FormChange`.",
=======
<<<<<<< HEAD
              "name": "cifUsersByProjectCreatedByAndDeletedBy",
>>>>>>> refactor: update schema & reorder sqitch plan
=======
<<<<<<< HEAD
              "name": "cifUsersByProjectManagerCifUserIdAndUpdatedBy",
=======
<<<<<<< HEAD
<<<<<<< HEAD
              "name": "cifUsersByProjectManagerUpdatedByAndCifUserId",
=======
              "name": "cifUsersByProjectCreatedByAndDeletedBy",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> chore: add basic SelectOperator component
=======
              "name": "cifUsersByProjectCreatedByAndUpdatedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
=======
              "name": "createdAt",
              "description": "created at timestamp",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Datetime",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdBy",
              "description": "created by user id",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "deletedAt",
              "description": "deleted at timestamp",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "deletedBy",
              "description": "deleted by user id",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "emailAddress",
              "description": "User's email address",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "firstName",
              "description": "User's first name",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": "A globally unique identifier. Can be used in various places throughout the system to identify this single value.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "lastName",
              "description": "User's last name",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "operatorsByCreatedBy",
              "description": "Reads and enables pagination through a set of `Operator`.",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
                    "name": "FormChangeCondition",
=======
<<<<<<< HEAD
                    "name": "CifUserCondition",
=======
                    "name": "OperatorCondition",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
                    "name": "FormChangeFilter",
=======
<<<<<<< HEAD
                    "name": "CifUserFilter",
=======
                    "name": "OperatorFilter",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
<<<<<<< HEAD
                  "description": "The method to use when ordering `FormChange`.",
=======
<<<<<<< HEAD
                  "description": "The method to use when ordering `CifUser`.",
=======
                  "description": "The method to use when ordering `Operator`.",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
<<<<<<< HEAD
                        "name": "FormChangesOrderBy",
=======
<<<<<<< HEAD
                        "name": "CifUsersOrderBy",
=======
                        "name": "OperatorsOrderBy",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                  "name": "FormChangesConnection",
=======
<<<<<<< HEAD
                  "name": "CifUserCifUsersByProjectManagerCreatedByAndCifUserIdManyToManyConnection",
=======
<<<<<<< HEAD
                  "name": "CifUserCifUsersByProjectManagerUpdatedByAndCifUserIdManyToManyConnection",
=======
                  "name": "OperatorsConnection",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
                  "name": "CifUserCifUsersByProjectCreatedByAndUpdatedByManyToManyConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
<<<<<<< HEAD
              "name": "formChangesByUpdatedBy",
              "description": "Reads and enables pagination through a set of `FormChange`.",
=======
<<<<<<< HEAD
              "name": "cifUsersByProjectManagerCreatedByAndDeletedBy",
=======
<<<<<<< HEAD
              "name": "cifUsersByProjectManagerUpdatedByAndCreatedBy",
>>>>>>> chore: add basic SelectOperator component
=======
              "name": "cifUsersByProjectDeletedByAndCreatedBy",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
              "description": "Reads and enables pagination through a set of `CifUser`.",
=======
              "name": "operatorsByDeletedBy",
              "description": "Reads and enables pagination through a set of `Operator`.",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
                    "name": "FormChangeCondition",
=======
<<<<<<< HEAD
                    "name": "CifUserCondition",
=======
                    "name": "OperatorCondition",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
                    "name": "FormChangeFilter",
=======
<<<<<<< HEAD
                    "name": "CifUserFilter",
=======
                    "name": "OperatorFilter",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
<<<<<<< HEAD
                  "description": "The method to use when ordering `FormChange`.",
=======
<<<<<<< HEAD
                  "description": "The method to use when ordering `CifUser`.",
=======
                  "description": "The method to use when ordering `Operator`.",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
<<<<<<< HEAD
                        "name": "FormChangesOrderBy",
=======
<<<<<<< HEAD
                        "name": "CifUsersOrderBy",
=======
                        "name": "OperatorsOrderBy",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                  "name": "FormChangesConnection",
=======
<<<<<<< HEAD
                  "name": "CifUserCifUsersByProjectCreatedByAndDeletedByManyToManyConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
=======
<<<<<<< HEAD
                  "name": "CifUserCifUsersByProjectManagerCifUserIdAndUpdatedByManyToManyConnection",
=======
<<<<<<< HEAD
<<<<<<< HEAD
                  "name": "CifUserCifUsersByProjectManagerUpdatedByAndCreatedByManyToManyConnection",
=======
                  "name": "OperatorsConnection",
>>>>>>> chore: add basic SelectOperator component
=======
                  "name": "CifUserCifUsersByProjectCreatedByAndDeletedByManyToManyConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
<<<<<<< HEAD
              "name": "fundingStreamsByCreatedBy",
              "description": "Reads and enables pagination through a set of `FundingStream`.",
=======
              "name": "cifUsersByProjectCreatedByAndUpdatedBy",
>>>>>>> refactor: update schema & reorder sqitch plan
=======
<<<<<<< HEAD
              "name": "cifUsersByProjectManagerCreatedByAndCifUserId",
=======
<<<<<<< HEAD
<<<<<<< HEAD
              "name": "cifUsersByProjectManagerUpdatedByAndDeletedBy",
=======
              "name": "cifUsersByProjectCreatedByAndUpdatedBy",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> chore: add basic SelectOperator component
              "description": "Reads and enables pagination through a set of `CifUser`.",
=======
              "name": "operatorsByUpdatedBy",
              "description": "Reads and enables pagination through a set of `Operator`.",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
                    "name": "FundingStreamCondition",
=======
<<<<<<< HEAD
                    "name": "CifUserCondition",
=======
                    "name": "OperatorCondition",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
                    "name": "FundingStreamFilter",
=======
<<<<<<< HEAD
                    "name": "CifUserFilter",
=======
                    "name": "OperatorFilter",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
<<<<<<< HEAD
                  "description": "The method to use when ordering `FundingStream`.",
=======
<<<<<<< HEAD
                  "description": "The method to use when ordering `CifUser`.",
=======
                  "description": "The method to use when ordering `Operator`.",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
<<<<<<< HEAD
                        "name": "FundingStreamsOrderBy",
=======
<<<<<<< HEAD
                        "name": "CifUsersOrderBy",
=======
                        "name": "OperatorsOrderBy",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                  "name": "FundingStreamsConnection",
=======
                  "name": "CifUserCifUsersByProjectCreatedByAndUpdatedByManyToManyConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
=======
<<<<<<< HEAD
                  "name": "CifUserCifUsersByProjectManagerCreatedByAndCifUserIdManyToManyConnection",
=======
<<<<<<< HEAD
<<<<<<< HEAD
                  "name": "CifUserCifUsersByProjectManagerUpdatedByAndDeletedByManyToManyConnection",
=======
                  "name": "OperatorsConnection",
>>>>>>> chore: add basic SelectOperator component
=======
                  "name": "CifUserCifUsersByProjectCreatedByAndUpdatedByManyToManyConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
<<<<<<< HEAD
              "name": "fundingStreamsByDeletedBy",
              "description": "Reads and enables pagination through a set of `FundingStream`.",
=======
              "name": "cifUsersByProjectDeletedByAndCreatedBy",
>>>>>>> refactor: update schema & reorder sqitch plan
=======
<<<<<<< HEAD
              "name": "cifUsersByProjectManagerCreatedByAndDeletedBy",
=======
<<<<<<< HEAD
<<<<<<< HEAD
              "name": "cifUsersByProjectUpdatedByAndCreatedBy",
=======
              "name": "cifUsersByProjectDeletedByAndCreatedBy",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> chore: add basic SelectOperator component
              "description": "Reads and enables pagination through a set of `CifUser`.",
=======
              "name": "projectsByCreatedBy",
              "description": "Reads and enables pagination through a set of `Project`.",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
                    "name": "FundingStreamCondition",
=======
<<<<<<< HEAD
                    "name": "CifUserCondition",
=======
                    "name": "ProjectCondition",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
                    "name": "FundingStreamFilter",
=======
<<<<<<< HEAD
                    "name": "CifUserFilter",
=======
                    "name": "ProjectFilter",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
<<<<<<< HEAD
                  "description": "The method to use when ordering `FundingStream`.",
=======
<<<<<<< HEAD
                  "description": "The method to use when ordering `CifUser`.",
=======
                  "description": "The method to use when ordering `Project`.",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
<<<<<<< HEAD
                        "name": "FundingStreamsOrderBy",
=======
<<<<<<< HEAD
                        "name": "CifUsersOrderBy",
=======
                        "name": "ProjectsOrderBy",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                  "name": "FundingStreamsConnection",
=======
                  "name": "CifUserCifUsersByProjectDeletedByAndCreatedByManyToManyConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
=======
<<<<<<< HEAD
                  "name": "CifUserCifUsersByProjectManagerCreatedByAndDeletedByManyToManyConnection",
=======
<<<<<<< HEAD
<<<<<<< HEAD
                  "name": "CifUserCifUsersByProjectUpdatedByAndCreatedByManyToManyConnection",
=======
                  "name": "ProjectsConnection",
>>>>>>> chore: add basic SelectOperator component
=======
                  "name": "CifUserCifUsersByProjectDeletedByAndCreatedByManyToManyConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
                  "name": "CifUserCifUsersByProjectDeletedByAndCreatedByManyToManyConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
<<<<<<< HEAD
              "name": "fundingStreamsByProjectCreatedByAndFundingStreamId",
              "description": "Reads and enables pagination through a set of `FundingStream`.",
=======
<<<<<<< HEAD
              "name": "cifUsersByProjectDeletedByAndUpdatedBy",
>>>>>>> refactor: update schema & reorder sqitch plan
=======
<<<<<<< HEAD
              "name": "cifUsersByProjectManagerCreatedByAndUpdatedBy",
=======
<<<<<<< HEAD
<<<<<<< HEAD
              "name": "cifUsersByProjectUpdatedByAndDeletedBy",
>>>>>>> chore: add basic SelectOperator component
=======
              "name": "cifUsersByProjectDeletedByAndUpdatedBy",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
              "name": "cifUsersByProjectDeletedByAndUpdatedBy",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
              "description": "Reads and enables pagination through a set of `CifUser`.",
=======
              "name": "projectsByDeletedBy",
              "description": "Reads and enables pagination through a set of `Project`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `Project`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "ProjectsOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                  "name": "CifUserCifUsersByProjectManagerDeletedByAndCreatedByManyToManyConnection",
=======
                  "name": "ProjectsConnection",
=======
<<<<<<< HEAD
                  "name": "CifUserCifUsersByProjectDeletedByAndUpdatedByManyToManyConnection",
=======
<<<<<<< HEAD
                  "name": "CifUserCifUsersByProjectManagerCreatedByAndUpdatedByManyToManyConnection",
=======
                  "name": "CifUserCifUsersByProjectDeletedByAndUpdatedByManyToManyConnection",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> chore: add basic SelectOperator component
=======
                  "name": "CifUserCifUsersByProjectDeletedByAndUpdatedByManyToManyConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
<<<<<<< HEAD
              "name": "cifUsersByProjectManagerDeletedByAndUpdatedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
=======
              "name": "projectsByUpdatedBy",
              "description": "Reads and enables pagination through a set of `Project`.",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
<<<<<<< HEAD
              "name": "cifUsersByProjectManagerCifUserIdAndCreatedBy",
=======
<<<<<<< HEAD
              "name": "cifUsersByProjectManagerDeletedByAndCifUserId",
=======
              "name": "cifUsersByProjectUpdatedByAndCreatedBy",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
              "name": "cifUsersByProjectManagerCifUserIdAndCreatedBy",
>>>>>>> refactor: update schema & reorder sqitch plan
              "description": "Reads and enables pagination through a set of `CifUser`.",
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
                    "name": "FundingStreamCondition",
=======
<<<<<<< HEAD
                    "name": "CifUserCondition",
=======
                    "name": "ProjectCondition",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
                    "name": "FundingStreamFilter",
=======
<<<<<<< HEAD
                    "name": "CifUserFilter",
=======
                    "name": "ProjectFilter",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
<<<<<<< HEAD
                  "description": "The method to use when ordering `FundingStream`.",
=======
<<<<<<< HEAD
                  "description": "The method to use when ordering `CifUser`.",
=======
                  "description": "The method to use when ordering `Project`.",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
<<<<<<< HEAD
                        "name": "FundingStreamsOrderBy",
=======
<<<<<<< HEAD
                        "name": "CifUsersOrderBy",
=======
                        "name": "ProjectsOrderBy",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                  "name": "CifUserFundingStreamsByProjectCreatedByAndFundingStreamIdManyToManyConnection",
=======
<<<<<<< HEAD
                  "name": "CifUserCifUsersByProjectManagerCifUserIdAndCreatedByManyToManyConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
=======
<<<<<<< HEAD
                  "name": "CifUserCifUsersByProjectManagerDeletedByAndCifUserIdManyToManyConnection",
=======
<<<<<<< HEAD
<<<<<<< HEAD
                  "name": "CifUserCifUsersByProjectUpdatedByAndDeletedByManyToManyConnection",
=======
                  "name": "ProjectsConnection",
=======
                  "name": "CifUserCifUsersByProjectUpdatedByAndCreatedByManyToManyConnection",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> chore: add basic SelectOperator component
=======
                  "name": "CifUserCifUsersByProjectManagerCifUserIdAndCreatedByManyToManyConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
<<<<<<< HEAD
              "name": "fundingStreamsByProjectDeletedByAndFundingStreamId",
              "description": "Reads and enables pagination through a set of `FundingStream`.",
=======
              "name": "rowId",
              "description": "Unique ID for the user",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "updated at timestamp",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Datetime",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedBy",
              "description": "updated by user id",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "uuid",
              "description": "Universally Unique ID for the user, defined by the single sign-on provider",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "UUID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserCifUsersByAttachmentCreatedByAndDeletedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `Attachment`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `Attachment`, and the cursor to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CifUserCifUsersByAttachmentCreatedByAndDeletedByManyToManyEdge",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "cifUsersByProjectManagerUpdatedByAndCifUserId",
              "description": "Reads and enables pagination through a set of `CifUser`.",
=======
<<<<<<< HEAD
              "name": "cifUsersByUpdatedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
=======
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserCifUsersByAttachmentCreatedByAndDeletedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `Attachment`.",
          "fields": [
            {
              "name": "attachmentsByDeletedBy",
              "description": "Reads and enables pagination through a set of `Attachment`.",
>>>>>>> chore: add basic SelectOperator component
=======
<<<<<<< HEAD
              "name": "cifUsersByProjectManagerCifUserIdAndDeletedBy",
=======
<<<<<<< HEAD
              "name": "cifUsersByProjectManagerDeletedByAndCreatedBy",
=======
              "name": "cifUsersByProjectUpdatedByAndDeletedBy",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
              "name": "cifUsersByProjectManagerCifUserIdAndDeletedBy",
>>>>>>> refactor: update schema & reorder sqitch plan
              "description": "Reads and enables pagination through a set of `CifUser`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                    "name": "FundingStreamCondition",
=======
<<<<<<< HEAD
                    "name": "CifUserCondition",
=======
<<<<<<< HEAD
                    "name": "CifUserCondition",
=======
                    "name": "AttachmentCondition",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
                    "name": "CifUserCondition",
>>>>>>> refactor: update schema & reorder sqitch plan
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                    "name": "FundingStreamFilter",
=======
<<<<<<< HEAD
                    "name": "CifUserFilter",
=======
<<<<<<< HEAD
                    "name": "CifUserFilter",
=======
                    "name": "AttachmentFilter",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
                    "name": "CifUserFilter",
>>>>>>> refactor: update schema & reorder sqitch plan
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
<<<<<<< HEAD
<<<<<<< HEAD
                  "description": "The method to use when ordering `FundingStream`.",
=======
<<<<<<< HEAD
                  "description": "The method to use when ordering `CifUser`.",
=======
<<<<<<< HEAD
                  "description": "The method to use when ordering `CifUser`.",
=======
                  "description": "The method to use when ordering `Attachment`.",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
                  "description": "The method to use when ordering `CifUser`.",
>>>>>>> refactor: update schema & reorder sqitch plan
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
<<<<<<< HEAD
<<<<<<< HEAD
                        "name": "FundingStreamsOrderBy",
=======
<<<<<<< HEAD
                        "name": "CifUsersOrderBy",
=======
<<<<<<< HEAD
                        "name": "CifUsersOrderBy",
=======
                        "name": "AttachmentsOrderBy",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
                        "name": "CifUsersOrderBy",
>>>>>>> refactor: update schema & reorder sqitch plan
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                  "name": "CifUserFundingStreamsByProjectDeletedByAndFundingStreamIdManyToManyConnection",
=======
<<<<<<< HEAD
                  "name": "CifUserCifUsersByProjectManagerCifUserIdAndDeletedByManyToManyConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
=======
<<<<<<< HEAD
                  "name": "CifUserCifUsersByProjectManagerDeletedByAndCreatedByManyToManyConnection",
=======
<<<<<<< HEAD
<<<<<<< HEAD
                  "name": "CifUsersConnection",
=======
                  "name": "AttachmentsConnection",
>>>>>>> chore: add basic SelectOperator component
=======
                  "name": "CifUserCifUsersByProjectUpdatedByAndDeletedByManyToManyConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
                  "name": "CifUserCifUsersByProjectManagerCifUserIdAndDeletedByManyToManyConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
<<<<<<< HEAD
              "name": "fundingStreamsByProjectUpdatedByAndFundingStreamId",
              "description": "Reads and enables pagination through a set of `FundingStream`.",
=======
<<<<<<< HEAD
              "name": "cifUsersByProjectManagerUpdatedByAndCreatedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
=======
              "name": "createdAt",
              "description": "created at timestamp",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Datetime",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdBy",
              "description": "created by user id",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "deletedAt",
              "description": "deleted at timestamp",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
<<<<<<< HEAD
            },
            {
              "name": "deletedBy",
              "description": "deleted by user id",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
=======
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserCifUsersByAttachmentCreatedByAndUpdatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `Attachment`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `Attachment`, and the cursor to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CifUserCifUsersByAttachmentCreatedByAndUpdatedByManyToManyEdge",
                      "ofType": null
                    }
                  }
                }
>>>>>>> chore: add basic SelectOperator component
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "emailAddress",
              "description": "User's email address",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "firstName",
              "description": "User's first name",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": "A globally unique identifier. Can be used in various places throughout the system to identify this single value.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
<<<<<<< HEAD
            },
            {
              "name": "lastName",
              "description": "User's last name",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projectManagersByCifUserId",
              "description": "Reads and enables pagination through a set of `ProjectManager`.",
=======
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserCifUsersByAttachmentCreatedByAndUpdatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `Attachment`.",
          "fields": [
            {
              "name": "attachmentsByUpdatedBy",
              "description": "Reads and enables pagination through a set of `Attachment`.",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
<<<<<<< HEAD
              "name": "cifUsersByProjectManagerCifUserIdAndUpdatedBy",
=======
<<<<<<< HEAD
              "name": "cifUsersByProjectManagerDeletedByAndUpdatedBy",
=======
              "name": "cifUsersByUpdatedBy",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
              "name": "cifUsersByProjectManagerCifUserIdAndUpdatedBy",
>>>>>>> refactor: update schema & reorder sqitch plan
              "description": "Reads and enables pagination through a set of `CifUser`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                    "name": "FundingStreamCondition",
=======
<<<<<<< HEAD
                    "name": "CifUserCondition",
=======
<<<<<<< HEAD
                    "name": "ProjectManagerCondition",
=======
                    "name": "AttachmentCondition",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
                    "name": "CifUserCondition",
>>>>>>> refactor: update schema & reorder sqitch plan
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                    "name": "FundingStreamFilter",
=======
<<<<<<< HEAD
                    "name": "CifUserFilter",
=======
<<<<<<< HEAD
                    "name": "ProjectManagerFilter",
=======
                    "name": "AttachmentFilter",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
                    "name": "CifUserFilter",
>>>>>>> refactor: update schema & reorder sqitch plan
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
<<<<<<< HEAD
<<<<<<< HEAD
                  "description": "The method to use when ordering `FundingStream`.",
=======
<<<<<<< HEAD
                  "description": "The method to use when ordering `CifUser`.",
=======
<<<<<<< HEAD
                  "description": "The method to use when ordering `ProjectManager`.",
=======
                  "description": "The method to use when ordering `Attachment`.",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
                  "description": "The method to use when ordering `CifUser`.",
>>>>>>> refactor: update schema & reorder sqitch plan
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
<<<<<<< HEAD
<<<<<<< HEAD
                        "name": "FundingStreamsOrderBy",
=======
<<<<<<< HEAD
=======
>>>>>>> refactor: update schema & reorder sqitch plan
                        "name": "CifUsersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                  "name": "CifUserCifUsersByProjectManagerCifUserIdAndUpdatedByManyToManyConnection",
=======
<<<<<<< HEAD
<<<<<<< HEAD
                        "name": "ProjectManagersOrderBy",
=======
                        "name": "AttachmentsOrderBy",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
                  "name": "CifUserCifUsersByProjectManagerDeletedByAndUpdatedByManyToManyConnection",
=======
                  "name": "CifUsersConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
                  "name": "CifUserCifUsersByProjectManagerCifUserIdAndUpdatedByManyToManyConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
<<<<<<< HEAD
              "name": "cifUsersByProjectManagerCreatedByAndCifUserId",
=======
<<<<<<< HEAD
              "name": "cifUsersByProjectManagerUpdatedByAndCifUserId",
>>>>>>> chore: add basic SelectOperator component
=======
              "name": "cifUsersByProjectManagerCreatedByAndCifUserId",
>>>>>>> refactor: update schema & reorder sqitch plan
              "description": "Reads and enables pagination through a set of `CifUser`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `CifUser`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "CifUsersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                  "name": "CifUserFundingStreamsByProjectUpdatedByAndFundingStreamIdManyToManyConnection",
=======
<<<<<<< HEAD
                  "name": "CifUserCifUsersByProjectManagerCreatedByAndCifUserIdManyToManyConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
=======
<<<<<<< HEAD
                  "name": "CifUserCifUsersByProjectManagerUpdatedByAndCifUserIdManyToManyConnection",
=======
<<<<<<< HEAD
                  "name": "ProjectManagersConnection",
=======
                  "name": "AttachmentsConnection",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
                  "name": "CifUserCifUsersByProjectManagerCreatedByAndCifUserIdManyToManyConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
<<<<<<< HEAD
              "name": "fundingStreamsByUpdatedBy",
              "description": "Reads and enables pagination through a set of `FundingStream`.",
=======
<<<<<<< HEAD
              "name": "cifUsersByProjectManagerUpdatedByAndDeletedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
=======
              "name": "projectManagersByCreatedBy",
              "description": "Reads and enables pagination through a set of `ProjectManager`.",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
<<<<<<< HEAD
              "name": "cifUsersByProjectManagerCreatedByAndDeletedBy",
=======
<<<<<<< HEAD
              "name": "cifUsersByProjectManagerUpdatedByAndCreatedBy",
>>>>>>> chore: add basic SelectOperator component
=======
              "name": "cifUsersByProjectManagerCreatedByAndDeletedBy",
>>>>>>> refactor: update schema & reorder sqitch plan
              "description": "Reads and enables pagination through a set of `CifUser`.",
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
                    "name": "FundingStreamCondition",
=======
                    "name": "CifUserCondition",
>>>>>>> refactor: update schema & reorder sqitch plan
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
                    "name": "FundingStreamFilter",
=======
                    "name": "CifUserFilter",
>>>>>>> refactor: update schema & reorder sqitch plan
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
<<<<<<< HEAD
                  "description": "The method to use when ordering `FundingStream`.",
=======
                  "description": "The method to use when ordering `CifUser`.",
>>>>>>> refactor: update schema & reorder sqitch plan
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
<<<<<<< HEAD
                        "name": "FundingStreamsOrderBy",
=======
                        "name": "CifUsersOrderBy",
>>>>>>> refactor: update schema & reorder sqitch plan
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                  "name": "FundingStreamsConnection",
=======
                  "name": "CifUserCifUsersByProjectManagerUpdatedByAndDeletedByManyToManyConnection",
=======
<<<<<<< HEAD
                  "name": "CifUserCifUsersByProjectManagerCreatedByAndDeletedByManyToManyConnection",
=======
<<<<<<< HEAD
                  "name": "CifUserCifUsersByProjectManagerUpdatedByAndCreatedByManyToManyConnection",
=======
                  "name": "OperatorsConnection",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> chore: add basic SelectOperator component
=======
                  "name": "CifUserCifUsersByProjectManagerCreatedByAndDeletedByManyToManyConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
<<<<<<< HEAD
              "name": "id",
              "description": "A globally unique identifier. Can be used in various places throughout the system to identify this single value.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "lastName",
              "description": "User's last name",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projectManagersByCifUserId",
              "description": "Reads and enables pagination through a set of `ProjectManager`.",
=======
<<<<<<< HEAD
              "name": "cifUsersByProjectUpdatedByAndCreatedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
>>>>>>> chore: add basic SelectOperator component
=======
<<<<<<< HEAD
              "name": "cifUsersByProjectManagerCreatedByAndUpdatedBy",
=======
<<<<<<< HEAD
              "name": "cifUsersByProjectManagerUpdatedByAndDeletedBy",
>>>>>>> chore: add basic SelectOperator component
=======
              "name": "cifUsersByProjectManagerCreatedByAndUpdatedBy",
>>>>>>> refactor: update schema & reorder sqitch plan
              "description": "Reads and enables pagination through a set of `CifUser`.",
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
                    "name": "ProjectManagerCondition",
=======
                    "name": "CifUserCondition",
>>>>>>> refactor: update schema & reorder sqitch plan
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
                    "name": "ProjectManagerFilter",
=======
                    "name": "CifUserFilter",
>>>>>>> refactor: update schema & reorder sqitch plan
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
<<<<<<< HEAD
                  "description": "The method to use when ordering `ProjectManager`.",
=======
                  "description": "The method to use when ordering `CifUser`.",
>>>>>>> refactor: update schema & reorder sqitch plan
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
<<<<<<< HEAD
                        "name": "ProjectManagersOrderBy",
                        "ofType": null
                      }
=======
<<<<<<< HEAD
              "name": "projectManagersByDeletedBy",
              "description": "Reads and enables pagination through a set of `ProjectManager`.",
=======
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserCifUsersByAttachmentDeletedByAndCreatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `Attachment`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `Attachment`, and the cursor to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CifUserCifUsersByAttachmentDeletedByAndCreatedByManyToManyEdge",
                      "ofType": null
>>>>>>> chore: add basic SelectOperator component
=======
                        "name": "CifUsersOrderBy",
                        "ofType": null
                      }
>>>>>>> refactor: update schema & reorder sqitch plan
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
<<<<<<< HEAD
                  "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                  "name": "ProjectManagersConnection",
=======
                  "name": "CifUserCifUsersByProjectUpdatedByAndCreatedByManyToManyConnection",
=======
<<<<<<< HEAD
                  "name": "CifUserCifUsersByProjectManagerCreatedByAndUpdatedByManyToManyConnection",
=======
<<<<<<< HEAD
                  "name": "CifUserCifUsersByProjectManagerUpdatedByAndDeletedByManyToManyConnection",
=======
                  "name": "OperatorsConnection",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> chore: add basic SelectOperator component
=======
                  "name": "CifUserCifUsersByProjectManagerCreatedByAndUpdatedByManyToManyConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
                  "ofType": null
=======
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
>>>>>>> chore: add basic SelectOperator component
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
<<<<<<< HEAD
              "name": "projectManagersByCreatedBy",
              "description": "Reads and enables pagination through a set of `ProjectManager`.",
=======
<<<<<<< HEAD
              "name": "cifUsersByProjectUpdatedByAndDeletedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
>>>>>>> chore: add basic SelectOperator component
=======
<<<<<<< HEAD
              "name": "cifUsersByProjectManagerDeletedByAndCifUserId",
=======
<<<<<<< HEAD
              "name": "cifUsersByProjectUpdatedByAndCreatedBy",
>>>>>>> chore: add basic SelectOperator component
=======
              "name": "cifUsersByProjectManagerDeletedByAndCifUserId",
>>>>>>> refactor: update schema & reorder sqitch plan
              "description": "Reads and enables pagination through a set of `CifUser`.",
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
                    "name": "ProjectManagerCondition",
=======
                    "name": "CifUserCondition",
>>>>>>> refactor: update schema & reorder sqitch plan
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
                    "name": "ProjectManagerFilter",
=======
                    "name": "CifUserFilter",
>>>>>>> refactor: update schema & reorder sqitch plan
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
<<<<<<< HEAD
                  "description": "The method to use when ordering `ProjectManager`.",
=======
                  "description": "The method to use when ordering `CifUser`.",
>>>>>>> refactor: update schema & reorder sqitch plan
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
<<<<<<< HEAD
                        "name": "ProjectManagersOrderBy",
=======
                        "name": "CifUsersOrderBy",
>>>>>>> refactor: update schema & reorder sqitch plan
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
=======
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
>>>>>>> chore: add basic SelectOperator component
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                  "name": "ProjectManagersConnection",
=======
<<<<<<< HEAD
                  "name": "CifUserCifUsersByProjectManagerDeletedByAndCifUserIdManyToManyConnection",
=======
<<<<<<< HEAD
                  "name": "CifUserCifUsersByProjectUpdatedByAndCreatedByManyToManyConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
=======
<<<<<<< HEAD
                  "name": "CifUserCifUsersByProjectUpdatedByAndDeletedByManyToManyConnection",
=======
                  "name": "PageInfo",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
                  "name": "CifUserCifUsersByProjectManagerDeletedByAndCifUserIdManyToManyConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
<<<<<<< HEAD
              "name": "projectManagersByDeletedBy",
              "description": "Reads and enables pagination through a set of `ProjectManager`.",
=======
<<<<<<< HEAD
              "name": "cifUsersByUpdatedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
=======
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserCifUsersByAttachmentDeletedByAndCreatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `Attachment`.",
          "fields": [
            {
              "name": "attachmentsByCreatedBy",
              "description": "Reads and enables pagination through a set of `Attachment`.",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
<<<<<<< HEAD
              "name": "cifUsersByProjectManagerDeletedByAndCreatedBy",
=======
<<<<<<< HEAD
              "name": "cifUsersByProjectUpdatedByAndDeletedBy",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> chore: add basic SelectOperator component
=======
              "name": "cifUsersByProjectManagerDeletedByAndCreatedBy",
>>>>>>> refactor: update schema & reorder sqitch plan
              "description": "Reads and enables pagination through a set of `CifUser`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                    "name": "ProjectManagerCondition",
=======
<<<<<<< HEAD
                    "name": "CifUserCondition",
=======
<<<<<<< HEAD
                    "name": "ProjectManagerCondition",
=======
                    "name": "AttachmentCondition",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
                    "name": "CifUserCondition",
>>>>>>> refactor: update schema & reorder sqitch plan
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                    "name": "ProjectManagerFilter",
=======
<<<<<<< HEAD
                    "name": "CifUserFilter",
=======
<<<<<<< HEAD
                    "name": "ProjectManagerFilter",
=======
                    "name": "AttachmentFilter",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
                    "name": "CifUserFilter",
>>>>>>> refactor: update schema & reorder sqitch plan
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
<<<<<<< HEAD
<<<<<<< HEAD
                  "description": "The method to use when ordering `ProjectManager`.",
=======
<<<<<<< HEAD
                  "description": "The method to use when ordering `CifUser`.",
=======
<<<<<<< HEAD
                  "description": "The method to use when ordering `ProjectManager`.",
=======
                  "description": "The method to use when ordering `Attachment`.",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
<<<<<<< HEAD
                        "name": "ProjectManagersOrderBy",
=======
                  "description": "The method to use when ordering `CifUser`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "CifUsersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                  "name": "CifUserCifUsersByProjectManagerDeletedByAndCreatedByManyToManyConnection",
=======
                  "name": "ProjectsConnection",
>>>>>>> chore: add basic SelectOperator component
=======
                  "name": "CifUserCifUsersByProjectManagerDeletedByAndCreatedByManyToManyConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
<<<<<<< HEAD
              "name": "cifUsersByProjectManagerDeletedByAndUpdatedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
=======
              "name": "projectsByUpdatedBy",
              "description": "Reads and enables pagination through a set of `Project`.",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
              "name": "cifUsersByProjectManagerDeletedByAndUpdatedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `CifUser`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "CifUsersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                  "name": "CifUserCifUsersByProjectManagerDeletedByAndUpdatedByManyToManyConnection",
=======
<<<<<<< HEAD
                  "name": "CifUserCifUsersByProjectUpdatedByAndDeletedByManyToManyConnection",
=======
                  "name": "ProjectsConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "rowId",
              "description": "Unique ID for the user",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "updated at timestamp",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Datetime",
=======
                  "name": "CifUserCifUsersByProjectManagerDeletedByAndUpdatedByManyToManyConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUsersByProjectManagerUpdatedByAndCifUserId",
              "description": "Reads and enables pagination through a set of `CifUser`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `CifUser`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "CifUsersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
<<<<<<< HEAD
                  "name": "PageInfo",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
                  "name": "CifUserCifUsersByProjectManagerUpdatedByAndCifUserIdManyToManyConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
<<<<<<< HEAD
              "name": "cifUsersByProjectManagerUpdatedByAndCifUserId",
              "description": "Reads and enables pagination through a set of `CifUser`.",
>>>>>>> refactor: update schema & reorder sqitch plan
=======
<<<<<<< HEAD
                        "name": "CifUsersOrderBy",
=======
<<<<<<< HEAD
                        "name": "ProjectManagersOrderBy",
=======
                        "name": "AttachmentsOrderBy",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
<<<<<<< HEAD
                  "name": "ProjectManagersConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "projectManagersByUpdatedBy",
              "description": "Reads and enables pagination through a set of `ProjectManager`.",
=======
              "name": "attachmentsByDeletedBy",
              "description": "Reads and enables pagination through a set of `Attachment`.",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
              "name": "cifUsersByProjectManagerUpdatedByAndCreatedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
                    "name": "ProjectManagerCondition",
=======
                    "name": "CifUserCondition",
<<<<<<< HEAD
=======
<<<<<<< HEAD
                    "name": "CifUserCondition",
=======
                    "name": "AttachmentCondition",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
                    "name": "ProjectManagerFilter",
=======
                    "name": "CifUserFilter",
<<<<<<< HEAD
=======
<<<<<<< HEAD
                    "name": "CifUserFilter",
=======
                    "name": "AttachmentFilter",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
<<<<<<< HEAD
                  "description": "The method to use when ordering `ProjectManager`.",
=======
                  "description": "The method to use when ordering `CifUser`.",
<<<<<<< HEAD
=======
<<<<<<< HEAD
                  "description": "The method to use when ordering `CifUser`.",
=======
                  "description": "The method to use when ordering `Attachment`.",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
<<<<<<< HEAD
                        "name": "ProjectManagersOrderBy",
=======
                        "name": "CifUsersOrderBy",
<<<<<<< HEAD
=======
<<<<<<< HEAD
                        "name": "CifUsersOrderBy",
=======
                        "name": "AttachmentsOrderBy",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
<<<<<<< HEAD
                  "name": "ProjectManagersConnection",
=======
<<<<<<< HEAD
<<<<<<< HEAD
                  "name": "CifUserCifUsersByProjectManagerUpdatedByAndCifUserIdManyToManyConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
=======
<<<<<<< HEAD
                  "name": "CifUsersConnection",
=======
<<<<<<< HEAD
                  "name": "ProjectManagersConnection",
=======
                  "name": "AttachmentsConnection",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "projectsByCreatedBy",
              "description": "Reads and enables pagination through a set of `Project`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `Project`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "ProjectsOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
=======
<<<<<<< HEAD
              "name": "createdAt",
              "description": "created at timestamp",
              "args": [],
>>>>>>> chore: add basic SelectOperator component
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
<<<<<<< HEAD
                  "kind": "OBJECT",
                  "name": "ProjectsConnection",
=======
                  "kind": "SCALAR",
                  "name": "Datetime",
=======
                  "name": "CifUserCifUsersByProjectManagerUpdatedByAndCreatedByManyToManyConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
<<<<<<< HEAD
              "name": "projectsByDeletedBy",
              "description": "Reads and enables pagination through a set of `Project`.",
=======
=======
>>>>>>> refactor: update schema & reorder sqitch plan
              "name": "createdBy",
              "description": "created by user id",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "deletedAt",
              "description": "deleted at timestamp",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "deletedBy",
              "description": "deleted by user id",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
=======
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
>>>>>>> chore: add basic SelectOperator component
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "emailAddress",
              "description": "User's email address",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
=======
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
>>>>>>> chore: add basic SelectOperator component
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
<<<<<<< HEAD
            },
            {
              "name": "firstName",
              "description": "User's first name",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "fundingStreamsByCreatedBy",
              "description": "Reads and enables pagination through a set of `FundingStream`.",
>>>>>>> chore: add basic SelectOperator component
=======
              "name": "cifUsersByProjectManagerUpdatedByAndDeletedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
                    "name": "ProjectCondition",
=======
<<<<<<< HEAD
<<<<<<< HEAD
                    "name": "CifUserCondition",
=======
<<<<<<< HEAD
                    "name": "ProjectManagerCondition",
=======
                    "name": "AttachmentCondition",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
                    "name": "CifUserCondition",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
                    "name": "ProjectFilter",
=======
<<<<<<< HEAD
<<<<<<< HEAD
                    "name": "CifUserFilter",
=======
<<<<<<< HEAD
                    "name": "ProjectManagerFilter",
=======
                    "name": "AttachmentFilter",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
                    "name": "CifUserFilter",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
<<<<<<< HEAD
                  "description": "The method to use when ordering `Project`.",
=======
<<<<<<< HEAD
<<<<<<< HEAD
                  "description": "The method to use when ordering `CifUser`.",
=======
<<<<<<< HEAD
                  "description": "The method to use when ordering `ProjectManager`.",
=======
                  "description": "The method to use when ordering `Attachment`.",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
                  "description": "The method to use when ordering `CifUser`.",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
<<<<<<< HEAD
                        "name": "ProjectsOrderBy",
=======
<<<<<<< HEAD
<<<<<<< HEAD
                        "name": "CifUsersOrderBy",
=======
<<<<<<< HEAD
                        "name": "ProjectManagersOrderBy",
=======
                        "name": "AttachmentsOrderBy",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
                        "name": "CifUsersOrderBy",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                        "ofType": null
                      }
=======
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserCifUsersByAttachmentDeletedByAndUpdatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `Attachment`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `Attachment`, and the cursor to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CifUserCifUsersByAttachmentDeletedByAndUpdatedByManyToManyEdge",
                      "ofType": null
>>>>>>> chore: add basic SelectOperator component
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                  "name": "ProjectsConnection",
=======
<<<<<<< HEAD
                  "name": "CifUserCifUsersByProjectManagerUpdatedByAndCreatedByManyToManyConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
=======
<<<<<<< HEAD
                  "name": "FundingStreamsConnection",
=======
                  "name": "PageInfo",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
                  "name": "CifUserCifUsersByProjectManagerUpdatedByAndDeletedByManyToManyConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
<<<<<<< HEAD
              "name": "projectsByProjectManagerCifUserIdAndProjectId",
              "description": "Reads and enables pagination through a set of `Project`.",
=======
<<<<<<< HEAD
              "name": "cifUsersByProjectManagerUpdatedByAndDeletedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
>>>>>>> refactor: update schema & reorder sqitch plan
=======
<<<<<<< HEAD
              "name": "fundingStreamsByDeletedBy",
              "description": "Reads and enables pagination through a set of `FundingStream`.",
=======
<<<<<<< HEAD
              "name": "projectManagersByUpdatedBy",
              "description": "Reads and enables pagination through a set of `ProjectManager`.",
=======
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserCifUsersByAttachmentDeletedByAndUpdatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `Attachment`.",
          "fields": [
            {
              "name": "attachmentsByUpdatedBy",
              "description": "Reads and enables pagination through a set of `Attachment`.",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
              "name": "cifUsersByProjectUpdatedByAndCreatedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
                    "name": "ProjectCondition",
=======
<<<<<<< HEAD
                    "name": "FundingStreamCondition",
=======
<<<<<<< HEAD
                    "name": "ProjectManagerCondition",
=======
                    "name": "AttachmentCondition",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
                    "name": "ProjectFilter",
=======
<<<<<<< HEAD
                    "name": "FundingStreamFilter",
=======
<<<<<<< HEAD
                    "name": "ProjectManagerFilter",
=======
                    "name": "AttachmentFilter",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
<<<<<<< HEAD
                  "description": "The method to use when ordering `Project`.",
=======
<<<<<<< HEAD
                  "description": "The method to use when ordering `FundingStream`.",
=======
<<<<<<< HEAD
                  "description": "The method to use when ordering `ProjectManager`.",
=======
                  "description": "The method to use when ordering `Attachment`.",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
<<<<<<< HEAD
                        "name": "ProjectsOrderBy",
=======
<<<<<<< HEAD
                        "name": "FundingStreamsOrderBy",
=======
<<<<<<< HEAD
                        "name": "ProjectManagersOrderBy",
=======
                        "name": "AttachmentsOrderBy",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                  "name": "CifUserProjectsByProjectManagerCifUserIdAndProjectIdManyToManyConnection",
=======
<<<<<<< HEAD
                  "name": "FundingStreamsConnection",
=======
<<<<<<< HEAD
                  "name": "ProjectManagersConnection",
=======
                  "name": "AttachmentsConnection",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
                  "name": "CifUserCifUsersByProjectManagerUpdatedByAndDeletedByManyToManyConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "projectsByProjectManagerCreatedByAndProjectId",
              "description": "Reads and enables pagination through a set of `Project`.",
=======
<<<<<<< HEAD
              "name": "fundingStreamsByProjectCreatedByAndFundingStreamId",
              "description": "Reads and enables pagination through a set of `FundingStream`.",
>>>>>>> chore: add basic SelectOperator component
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `Project`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "ProjectsOrderBy",
                        "ofType": null
                      }
=======
<<<<<<< HEAD
              "name": "projectsByCreatedBy",
              "description": "Reads and enables pagination through a set of `Project`.",
=======
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserCifUsersByAttachmentUpdatedByAndCreatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `Attachment`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `Attachment`, and the cursor to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CifUserCifUsersByAttachmentUpdatedByAndCreatedByManyToManyEdge",
                      "ofType": null
>>>>>>> chore: add basic SelectOperator component
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
<<<<<<< HEAD
                  "kind": "OBJECT",
                  "name": "CifUserProjectsByProjectManagerCreatedByAndProjectIdManyToManyConnection",
                  "ofType": null
=======
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
>>>>>>> chore: add basic SelectOperator component
=======
                  "name": "CifUserCifUsersByProjectUpdatedByAndCreatedByManyToManyConnection",
                  "ofType": null
>>>>>>> refactor: update schema & reorder sqitch plan
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
<<<<<<< HEAD
              "name": "projectsByProjectManagerDeletedByAndProjectId",
              "description": "Reads and enables pagination through a set of `Project`.",
=======
<<<<<<< HEAD
              "name": "fundingStreamsByProjectDeletedByAndFundingStreamId",
              "description": "Reads and enables pagination through a set of `FundingStream`.",
>>>>>>> chore: add basic SelectOperator component
=======
<<<<<<< HEAD
=======
>>>>>>> refactor: update schema & reorder sqitch plan
              "name": "cifUsersByProjectUpdatedByAndDeletedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `Project`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "ProjectsOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
<<<<<<< HEAD
=======
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
=======
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CifUserCifUsersByProjectUpdatedByAndDeletedByManyToManyConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUsersByUpdatedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `CifUser`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "CifUsersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CifUsersConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "created at timestamp",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Datetime",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdBy",
              "description": "created by user id",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "deletedAt",
              "description": "deleted at timestamp",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "deletedBy",
              "description": "deleted by user id",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "emailAddress",
              "description": "User's email address",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "firstName",
              "description": "User's first name",
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [],
>>>>>>> chore: add basic SelectOperator component
              "type": {
<<<<<<< HEAD
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
<<<<<<< HEAD
                  "name": "CifUserProjectsByProjectManagerDeletedByAndProjectIdManyToManyConnection",
=======
<<<<<<< HEAD
                  "name": "CifUserFundingStreamsByProjectDeletedByAndFundingStreamIdManyToManyConnection",
=======
                  "name": "PageInfo",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
                  "ofType": null
                }
=======
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
>>>>>>> refactor: update schema & reorder sqitch plan
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
<<<<<<< HEAD
              "name": "projectsByProjectManagerUpdatedByAndProjectId",
              "description": "Reads and enables pagination through a set of `Project`.",
=======
<<<<<<< HEAD
              "name": "fundingStreamsByProjectUpdatedByAndFundingStreamId",
              "description": "Reads and enables pagination through a set of `FundingStream`.",
=======
<<<<<<< HEAD
              "name": "cifUsersByUpdatedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
>>>>>>> refactor: update schema & reorder sqitch plan
=======
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
=======
              "name": "id",
              "description": "A globally unique identifier. Can be used in various places throughout the system to identify this single value.",
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
<<<<<<< HEAD
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserCifUsersByAttachmentUpdatedByAndCreatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `Attachment`.",
          "fields": [
            {
              "name": "attachmentsByCreatedBy",
              "description": "Reads and enables pagination through a set of `Attachment`.",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
=======
=======
            },
            {
              "name": "lastName",
              "description": "User's last name",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "operatorsByCreatedBy",
              "description": "Reads and enables pagination through a set of `Operator`.",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                    "name": "ProjectCondition",
=======
<<<<<<< HEAD
                    "name": "CifUserCondition",
>>>>>>> refactor: update schema & reorder sqitch plan
=======
<<<<<<< HEAD
                    "name": "FundingStreamCondition",
=======
<<<<<<< HEAD
                    "name": "ProjectCondition",
=======
                    "name": "AttachmentCondition",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
=======
=======
                    "name": "OperatorCondition",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                    "name": "ProjectFilter",
=======
<<<<<<< HEAD
                    "name": "CifUserFilter",
>>>>>>> refactor: update schema & reorder sqitch plan
=======
<<<<<<< HEAD
                    "name": "FundingStreamFilter",
=======
<<<<<<< HEAD
                    "name": "ProjectFilter",
=======
                    "name": "AttachmentFilter",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
=======
=======
                    "name": "OperatorFilter",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
<<<<<<< HEAD
<<<<<<< HEAD
                  "description": "The method to use when ordering `Project`.",
=======
<<<<<<< HEAD
                  "description": "The method to use when ordering `CifUser`.",
>>>>>>> refactor: update schema & reorder sqitch plan
=======
<<<<<<< HEAD
                  "description": "The method to use when ordering `FundingStream`.",
=======
<<<<<<< HEAD
                  "description": "The method to use when ordering `Project`.",
=======
                  "description": "The method to use when ordering `Attachment`.",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
=======
=======
                  "description": "The method to use when ordering `Operator`.",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
<<<<<<< HEAD
<<<<<<< HEAD
                        "name": "ProjectsOrderBy",
=======
<<<<<<< HEAD
                        "name": "CifUsersOrderBy",
>>>>>>> refactor: update schema & reorder sqitch plan
=======
<<<<<<< HEAD
                        "name": "FundingStreamsOrderBy",
=======
<<<<<<< HEAD
                        "name": "ProjectsOrderBy",
=======
                        "name": "AttachmentsOrderBy",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
=======
=======
                        "name": "OperatorsOrderBy",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                  "name": "CifUserProjectsByProjectManagerUpdatedByAndProjectIdManyToManyConnection",
=======
<<<<<<< HEAD
                  "name": "CifUsersConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
=======
<<<<<<< HEAD
                  "name": "CifUserFundingStreamsByProjectUpdatedByAndFundingStreamIdManyToManyConnection",
=======
<<<<<<< HEAD
                  "name": "ProjectsConnection",
=======
                  "name": "AttachmentsConnection",
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
=======
=======
                  "name": "OperatorsConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
<<<<<<< HEAD
              "name": "projectsByUpdatedBy",
              "description": "Reads and enables pagination through a set of `Project`.",
=======
<<<<<<< HEAD
              "name": "fundingStreamsByUpdatedBy",
              "description": "Reads and enables pagination through a set of `FundingStream`.",
>>>>>>> chore: add basic SelectOperator component
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `Project`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "ProjectsOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
=======
<<<<<<< HEAD
              "name": "createdAt",
              "description": "created at timestamp",
              "args": [],
>>>>>>> refactor: update schema & reorder sqitch plan
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProjectsConnection",
                  "ofType": null
                }
=======
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
>>>>>>> chore: add basic SelectOperator component
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "rowId",
              "description": "Unique ID for the user",
=======
<<<<<<< HEAD
              "name": "id",
              "description": "A globally unique identifier. Can be used in various places throughout the system to identify this single value.",
>>>>>>> chore: add basic SelectOperator component
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "updated at timestamp",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Datetime",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedBy",
              "description": "updated by user id",
              "args": [],
              "type": {
                "kind": "SCALAR",
<<<<<<< HEAD
                "name": "Int",
=======
                "name": "String",
=======
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
<<<<<<< HEAD
            },
            {
<<<<<<< HEAD
              "name": "uuid",
              "description": "Universally Unique ID for the user, defined by the single sign-on provider",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "UUID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "ofType": null
            }
          ],
=======
              "name": "projectManagersByCifUserId",
              "description": "Reads and enables pagination through a set of `ProjectManager`.",
=======
            }
          ],
          "inputFields": null,
          "interfaces": [],
>>>>>>> chore: add basic SelectOperator component
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
          "name": "CifUserChangeStatusesByFormChangeCreatedByAndChangeStatusManyToManyConnection",
          "description": "A connection to a list of `ChangeStatus` values, with data from `FormChange`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `ChangeStatus`, info from the `FormChange`, and the cursor to aid in pagination.",
=======
          "name": "CifUserCifUsersByAttachmentUpdatedByAndDeletedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `Attachment`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `Attachment`, and the cursor to aid in pagination.",
>>>>>>> chore: add basic SelectOperator component
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
<<<<<<< HEAD
                      "name": "CifUserChangeStatusesByFormChangeCreatedByAndChangeStatusManyToManyEdge",
=======
                      "name": "CifUserCifUsersByAttachmentUpdatedByAndDeletedByManyToManyEdge",
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
<<<<<<< HEAD
              "description": "A list of `ChangeStatus` objects.",
=======
              "description": "A list of `CifUser` objects.",
>>>>>>> chore: add basic SelectOperator component
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
<<<<<<< HEAD
                    "name": "ChangeStatus",
=======
                    "name": "CifUser",
>>>>>>> chore: add basic SelectOperator component
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
<<<<<<< HEAD
=======
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "totalCount",
              "description": "The count of *all* `ChangeStatus` you could get from the connection.",
=======
<<<<<<< HEAD
              "name": "projectsByDeletedBy",
              "description": "Reads and enables pagination through a set of `Project`.",
=======
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
>>>>>>> chore: add basic SelectOperator component
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
          "name": "CifUserChangeStatusesByFormChangeCreatedByAndChangeStatusManyToManyEdge",
          "description": "A `ChangeStatus` edge in the connection, with data from `FormChange`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "formChangesByChangeStatus",
              "description": "Reads and enables pagination through a set of `FormChange`.",
=======
          "name": "CifUserCifUsersByAttachmentUpdatedByAndDeletedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `Attachment`.",
          "fields": [
            {
              "name": "attachmentsByDeletedBy",
              "description": "Reads and enables pagination through a set of `Attachment`.",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
                "ofType": null
=======
              "name": "operatorsByDeletedBy",
              "description": "Reads and enables pagination through a set of `Operator`.",
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                    "name": "FormChangeCondition",
=======
<<<<<<< HEAD
                    "name": "ProjectManagerCondition",
=======
<<<<<<< HEAD
                    "name": "ProjectCondition",
=======
                    "name": "AttachmentCondition",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
                    "name": "OperatorCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "OperatorFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `Operator`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "OperatorsOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "OperatorsConnection",
                  "ofType": null
                }
>>>>>>> refactor: update schema & reorder sqitch plan
              },
              "isDeprecated": false,
              "deprecationReason": null
<<<<<<< HEAD
            },
            {
<<<<<<< HEAD
              "name": "firstName",
              "description": "User's first name",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "fundingStreamsByCreatedBy",
              "description": "Reads and enables pagination through a set of `FundingStream`.",
=======
              "name": "operatorsByProjectCreatedByAndOperatorId",
              "description": "Reads and enables pagination through a set of `Operator`.",
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
                    "name": "FundingStreamCondition",
=======
                    "name": "OperatorCondition",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                    "name": "FormChangeFilter",
=======
<<<<<<< HEAD
                    "name": "ProjectManagerFilter",
=======
<<<<<<< HEAD
                    "name": "ProjectFilter",
=======
                    "name": "AttachmentFilter",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
                    "name": "FundingStreamFilter",
=======
                    "name": "OperatorFilter",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
<<<<<<< HEAD
<<<<<<< HEAD
                  "description": "The method to use when ordering `FormChange`.",
=======
<<<<<<< HEAD
                  "description": "The method to use when ordering `ProjectManager`.",
=======
<<<<<<< HEAD
                  "description": "The method to use when ordering `Project`.",
=======
                  "description": "The method to use when ordering `Attachment`.",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
                  "description": "The method to use when ordering `FundingStream`.",
=======
                  "description": "The method to use when ordering `Operator`.",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
<<<<<<< HEAD
<<<<<<< HEAD
                        "name": "FormChangesOrderBy",
=======
<<<<<<< HEAD
                        "name": "ProjectManagersOrderBy",
=======
<<<<<<< HEAD
                        "name": "ProjectsOrderBy",
=======
                        "name": "AttachmentsOrderBy",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
                        "name": "FundingStreamsOrderBy",
>>>>>>> refactor: update schema & reorder sqitch plan
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
<<<<<<< HEAD
                  "name": "FormChangesConnection",
=======
<<<<<<< HEAD
                  "name": "ProjectManagersConnection",
=======
<<<<<<< HEAD
                  "name": "ProjectsConnection",
=======
                  "name": "AttachmentsConnection",
>>>>>>> chore: add basic SelectOperator component
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "projectsByProjectManagerCifUserIdAndProjectId",
              "description": "Reads and enables pagination through a set of `Project`.",
=======
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserCifUsersByChangeStatusCreatedByAndDeletedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `ChangeStatus`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `ChangeStatus`, and the cursor to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CifUserCifUsersByChangeStatusCreatedByAndDeletedByManyToManyEdge",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
=======
                        "name": "OperatorsOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
>>>>>>> refactor: update schema & reorder sqitch plan
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
<<<<<<< HEAD
=======
<<<<<<< HEAD
<<<<<<< HEAD
                  "name": "FundingStreamsConnection",
=======
>>>>>>> refactor: update schema & reorder sqitch plan
                  "name": "PageInfo",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
                  "name": "CifUserOperatorsByProjectCreatedByAndOperatorIdManyToManyConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
<<<<<<< HEAD
              "name": "node",
              "description": "The `ChangeStatus` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "ChangeStatus",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserChangeStatusesByFormChangeDeletedByAndChangeStatusManyToManyConnection",
          "description": "A connection to a list of `ChangeStatus` values, with data from `FormChange`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `ChangeStatus`, info from the `FormChange`, and the cursor to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CifUserChangeStatusesByFormChangeDeletedByAndChangeStatusManyToManyEdge",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of `ChangeStatus` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "ChangeStatus",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "The count of *all* `ChangeStatus` you could get from the connection.",
=======
<<<<<<< HEAD
              "name": "fundingStreamsByDeletedBy",
              "description": "Reads and enables pagination through a set of `FundingStream`.",
>>>>>>> refactor: update schema & reorder sqitch plan
=======
<<<<<<< HEAD
              "name": "projectManagersByCreatedBy",
              "description": "Reads and enables pagination through a set of `ProjectManager`.",
=======
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
>>>>>>> chore: add basic SelectOperator component
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
          "name": "CifUserChangeStatusesByFormChangeDeletedByAndChangeStatusManyToManyEdge",
          "description": "A `ChangeStatus` edge in the connection, with data from `FormChange`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "formChangesByChangeStatus",
              "description": "Reads and enables pagination through a set of `FormChange`.",
=======
          "name": "CifUserCifUsersByChangeStatusCreatedByAndDeletedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `ChangeStatus`.",
          "fields": [
            {
              "name": "changeStatusesByDeletedBy",
              "description": "Reads and enables pagination through a set of `ChangeStatus`.",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
              "name": "operatorsByProjectDeletedByAndOperatorId",
              "description": "Reads and enables pagination through a set of `Operator`.",
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                    "name": "FormChangeCondition",
=======
<<<<<<< HEAD
                    "name": "FundingStreamCondition",
>>>>>>> refactor: update schema & reorder sqitch plan
=======
<<<<<<< HEAD
                    "name": "ProjectManagerCondition",
=======
<<<<<<< HEAD
                    "name": "ProjectCondition",
=======
                    "name": "ChangeStatusCondition",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
                    "name": "OperatorCondition",
>>>>>>> refactor: update schema & reorder sqitch plan
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                    "name": "FormChangeFilter",
=======
<<<<<<< HEAD
                    "name": "FundingStreamFilter",
>>>>>>> refactor: update schema & reorder sqitch plan
=======
<<<<<<< HEAD
                    "name": "ProjectManagerFilter",
=======
<<<<<<< HEAD
                    "name": "ProjectFilter",
=======
                    "name": "ChangeStatusFilter",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
                    "name": "OperatorFilter",
>>>>>>> refactor: update schema & reorder sqitch plan
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
<<<<<<< HEAD
<<<<<<< HEAD
                  "description": "The method to use when ordering `FormChange`.",
=======
<<<<<<< HEAD
                  "description": "The method to use when ordering `FundingStream`.",
>>>>>>> refactor: update schema & reorder sqitch plan
=======
<<<<<<< HEAD
                  "description": "The method to use when ordering `ProjectManager`.",
=======
<<<<<<< HEAD
                  "description": "The method to use when ordering `Project`.",
=======
                  "description": "The method to use when ordering `ChangeStatus`.",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
                  "description": "The method to use when ordering `Operator`.",
>>>>>>> refactor: update schema & reorder sqitch plan
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
<<<<<<< HEAD
<<<<<<< HEAD
                        "name": "FormChangesOrderBy",
=======
<<<<<<< HEAD
                        "name": "FundingStreamsOrderBy",
>>>>>>> refactor: update schema & reorder sqitch plan
=======
<<<<<<< HEAD
                        "name": "ProjectManagersOrderBy",
=======
<<<<<<< HEAD
                        "name": "ProjectsOrderBy",
=======
                        "name": "ChangeStatusesOrderBy",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
                        "name": "OperatorsOrderBy",
>>>>>>> refactor: update schema & reorder sqitch plan
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                  "name": "FormChangesConnection",
=======
<<<<<<< HEAD
                  "name": "FundingStreamsConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
=======
<<<<<<< HEAD
                  "name": "ProjectManagersConnection",
=======
<<<<<<< HEAD
                  "name": "CifUserProjectsByProjectManagerCifUserIdAndProjectIdManyToManyConnection",
=======
                  "name": "ChangeStatusesConnection",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
                  "name": "CifUserOperatorsByProjectDeletedByAndOperatorIdManyToManyConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
<<<<<<< HEAD
              "name": "node",
              "description": "The `ChangeStatus` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "ChangeStatus",
=======
<<<<<<< HEAD
              "name": "fundingStreamsByProjectCreatedByAndFundingStreamId",
              "description": "Reads and enables pagination through a set of `FundingStream`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "FundingStreamCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "FundingStreamFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `FundingStream`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "FundingStreamsOrderBy",
                        "ofType": null
                      }
>>>>>>> refactor: update schema & reorder sqitch plan
=======
<<<<<<< HEAD
              "name": "projectManagersByDeletedBy",
              "description": "Reads and enables pagination through a set of `ProjectManager`.",
=======
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
>>>>>>> chore: add basic SelectOperator component
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
          "name": "CifUserChangeStatusesByFormChangeUpdatedByAndChangeStatusManyToManyConnection",
          "description": "A connection to a list of `ChangeStatus` values, with data from `FormChange`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `ChangeStatus`, info from the `FormChange`, and the cursor to aid in pagination.",
=======
          "name": "CifUserCifUsersByChangeStatusCreatedByAndUpdatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `ChangeStatus`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `ChangeStatus`, and the cursor to aid in pagination.",
>>>>>>> chore: add basic SelectOperator component
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
<<<<<<< HEAD
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CifUserChangeStatusesByFormChangeUpdatedByAndChangeStatusManyToManyEdge",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of `ChangeStatus` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "ChangeStatus",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "The count of *all* `ChangeStatus` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserChangeStatusesByFormChangeUpdatedByAndChangeStatusManyToManyEdge",
          "description": "A `ChangeStatus` edge in the connection, with data from `FormChange`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "formChangesByChangeStatus",
              "description": "Reads and enables pagination through a set of `FormChange`.",
=======
<<<<<<< HEAD
              "name": "fundingStreamsByProjectDeletedByAndFundingStreamId",
              "description": "Reads and enables pagination through a set of `FundingStream`.",
=======
              "name": "operatorsByProjectUpdatedByAndOperatorId",
              "description": "Reads and enables pagination through a set of `Operator`.",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
                    "name": "FormChangeCondition",
=======
<<<<<<< HEAD
                    "name": "FundingStreamCondition",
=======
                    "name": "OperatorCondition",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
                    "name": "FormChangeFilter",
=======
<<<<<<< HEAD
                    "name": "FundingStreamFilter",
=======
                    "name": "OperatorFilter",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
<<<<<<< HEAD
                  "description": "The method to use when ordering `FormChange`.",
=======
<<<<<<< HEAD
                  "description": "The method to use when ordering `FundingStream`.",
=======
                  "description": "The method to use when ordering `Operator`.",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
<<<<<<< HEAD
                        "name": "FormChangesOrderBy",
                        "ofType": null
                      }
=======
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CifUserCifUsersByChangeStatusCreatedByAndUpdatedByManyToManyEdge",
                      "ofType": null
>>>>>>> chore: add basic SelectOperator component
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
<<<<<<< HEAD
                  "name": "FormChangesConnection",
=======
                  "name": "PageInfo",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "node",
              "description": "The `ChangeStatus` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "ChangeStatus",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserCifUsersByAttachmentCreatedByAndDeletedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `Attachment`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `Attachment`, and the cursor to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CifUserCifUsersByAttachmentCreatedByAndDeletedByManyToManyEdge",
                      "ofType": null
=======
<<<<<<< HEAD
                        "name": "FundingStreamsOrderBy",
=======
                        "name": "OperatorsOrderBy",
>>>>>>> refactor: update schema & reorder sqitch plan
                        "ofType": null
                      }
>>>>>>> refactor: update schema & reorder sqitch plan
                    }
                  }
                }
<<<<<<< HEAD
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
=======
              ],
<<<<<<< HEAD
=======
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
>>>>>>> chore: add basic SelectOperator component
=======
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
<<<<<<< HEAD
                  "name": "PageInfo",
=======
<<<<<<< HEAD
<<<<<<< HEAD
                  "name": "CifUserFundingStreamsByProjectDeletedByAndFundingStreamIdManyToManyConnection",
=======
                  "name": "PageInfo",
>>>>>>> chore: add basic SelectOperator component
=======
                  "name": "CifUserOperatorsByProjectUpdatedByAndOperatorIdManyToManyConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
=======
<<<<<<< HEAD
<<<<<<< HEAD
              "name": "projectsByProjectManagerCreatedByAndProjectId",
              "description": "Reads and enables pagination through a set of `Project`.",
=======
<<<<<<< HEAD
              "name": "fundingStreamsByProjectUpdatedByAndFundingStreamId",
              "description": "Reads and enables pagination through a set of `FundingStream`.",
>>>>>>> refactor: update schema & reorder sqitch plan
=======
>>>>>>> chore: add basic SelectOperator component
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
          "name": "CifUserCifUsersByAttachmentCreatedByAndDeletedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `Attachment`.",
          "fields": [
            {
              "name": "attachmentsByDeletedBy",
              "description": "Reads and enables pagination through a set of `Attachment`.",
=======
          "name": "CifUserCifUsersByChangeStatusCreatedByAndUpdatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `ChangeStatus`.",
          "fields": [
            {
              "name": "changeStatusesByUpdatedBy",
              "description": "Reads and enables pagination through a set of `ChangeStatus`.",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
              "name": "operatorsByUpdatedBy",
              "description": "Reads and enables pagination through a set of `Operator`.",
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                    "name": "AttachmentCondition",
=======
<<<<<<< HEAD
                    "name": "ProjectManagerCondition",
=======
<<<<<<< HEAD
                    "name": "FundingStreamCondition",
>>>>>>> refactor: update schema & reorder sqitch plan
=======
<<<<<<< HEAD
                    "name": "ProjectCondition",
=======
                    "name": "ChangeStatusCondition",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
                    "name": "OperatorCondition",
>>>>>>> refactor: update schema & reorder sqitch plan
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                    "name": "AttachmentFilter",
=======
<<<<<<< HEAD
                    "name": "ProjectManagerFilter",
=======
<<<<<<< HEAD
                    "name": "FundingStreamFilter",
>>>>>>> refactor: update schema & reorder sqitch plan
=======
<<<<<<< HEAD
                    "name": "ProjectFilter",
=======
                    "name": "ChangeStatusFilter",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
                    "name": "OperatorFilter",
>>>>>>> refactor: update schema & reorder sqitch plan
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
<<<<<<< HEAD
<<<<<<< HEAD
                  "description": "The method to use when ordering `Attachment`.",
=======
<<<<<<< HEAD
                  "description": "The method to use when ordering `ProjectManager`.",
=======
<<<<<<< HEAD
                  "description": "The method to use when ordering `FundingStream`.",
>>>>>>> refactor: update schema & reorder sqitch plan
=======
<<<<<<< HEAD
                  "description": "The method to use when ordering `Project`.",
=======
                  "description": "The method to use when ordering `ChangeStatus`.",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
                  "description": "The method to use when ordering `Operator`.",
>>>>>>> refactor: update schema & reorder sqitch plan
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
<<<<<<< HEAD
<<<<<<< HEAD
                        "name": "AttachmentsOrderBy",
=======
<<<<<<< HEAD
                        "name": "ProjectManagersOrderBy",
=======
<<<<<<< HEAD
                        "name": "FundingStreamsOrderBy",
>>>>>>> refactor: update schema & reorder sqitch plan
=======
<<<<<<< HEAD
                        "name": "ProjectsOrderBy",
=======
                        "name": "ChangeStatusesOrderBy",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
                        "name": "OperatorsOrderBy",
>>>>>>> refactor: update schema & reorder sqitch plan
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                  "name": "AttachmentsConnection",
=======
<<<<<<< HEAD
                  "name": "CifUserFundingStreamsByProjectUpdatedByAndFundingStreamIdManyToManyConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
=======
<<<<<<< HEAD
                  "name": "ProjectManagersConnection",
=======
<<<<<<< HEAD
                  "name": "CifUserProjectsByProjectManagerCreatedByAndProjectIdManyToManyConnection",
=======
                  "name": "ChangeStatusesConnection",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
=======
<<<<<<< HEAD
              "name": "projectsByProjectManagerDeletedByAndProjectId",
              "description": "Reads and enables pagination through a set of `Project`.",
=======
>>>>>>> chore: add basic SelectOperator component
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
          "name": "CifUserCifUsersByAttachmentCreatedByAndUpdatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `Attachment`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `Attachment`, and the cursor to aid in pagination.",
=======
          "name": "CifUserCifUsersByChangeStatusDeletedByAndCreatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `ChangeStatus`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `ChangeStatus`, and the cursor to aid in pagination.",
>>>>>>> chore: add basic SelectOperator component
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
<<<<<<< HEAD
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CifUserCifUsersByAttachmentCreatedByAndUpdatedByManyToManyEdge",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserCifUsersByAttachmentCreatedByAndUpdatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `Attachment`.",
          "fields": [
            {
              "name": "attachmentsByUpdatedBy",
              "description": "Reads and enables pagination through a set of `Attachment`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "AttachmentCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "AttachmentFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `Attachment`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "AttachmentsOrderBy",
                        "ofType": null
                      }
=======
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CifUserCifUsersByChangeStatusDeletedByAndCreatedByManyToManyEdge",
                      "ofType": null
>>>>>>> chore: add basic SelectOperator component
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
<<<<<<< HEAD
                  "kind": "OBJECT",
                  "name": "AttachmentsConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserCifUsersByAttachmentDeletedByAndCreatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `Attachment`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `Attachment`, and the cursor to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CifUserCifUsersByAttachmentDeletedByAndCreatedByManyToManyEdge",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
=======
>>>>>>> chore: add basic SelectOperator component
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
<<<<<<< HEAD
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
<<<<<<< HEAD
=======
>>>>>>> chore: add basic SelectOperator component
=======
                  "name": "OperatorsConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
=======
<<<<<<< HEAD
<<<<<<< HEAD
              "name": "projectsByDeletedBy",
              "description": "Reads and enables pagination through a set of `Project`.",
=======
>>>>>>> refactor: update schema & reorder sqitch plan
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
=======
>>>>>>> chore: add basic SelectOperator component
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserCifUsersByAttachmentDeletedByAndCreatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `Attachment`.",
          "fields": [
            {
<<<<<<< HEAD
              "name": "attachmentsByCreatedBy",
              "description": "Reads and enables pagination through a set of `Attachment`.",
<<<<<<< HEAD
=======
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
              "name": "projectManagersByCifUserId",
              "description": "Reads and enables pagination through a set of `ProjectManager`.",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
                    "name": "AttachmentCondition",
=======
<<<<<<< HEAD
<<<<<<< HEAD
                    "name": "ProjectManagerCondition",
=======
<<<<<<< HEAD
                    "name": "ProjectCondition",
=======
                    "name": "AttachmentCondition",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
                    "name": "ProjectManagerCondition",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
                    "name": "AttachmentFilter",
=======
<<<<<<< HEAD
<<<<<<< HEAD
                    "name": "ProjectManagerFilter",
=======
<<<<<<< HEAD
                    "name": "ProjectFilter",
=======
                    "name": "AttachmentFilter",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
                    "name": "ProjectManagerFilter",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
<<<<<<< HEAD
                  "description": "The method to use when ordering `Attachment`.",
=======
<<<<<<< HEAD
<<<<<<< HEAD
                  "description": "The method to use when ordering `ProjectManager`.",
=======
<<<<<<< HEAD
                  "description": "The method to use when ordering `Project`.",
=======
                  "description": "The method to use when ordering `Attachment`.",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
                  "description": "The method to use when ordering `ProjectManager`.",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
<<<<<<< HEAD
                        "name": "AttachmentsOrderBy",
=======
<<<<<<< HEAD
<<<<<<< HEAD
                        "name": "ProjectManagersOrderBy",
=======
<<<<<<< HEAD
                        "name": "ProjectsOrderBy",
=======
                        "name": "AttachmentsOrderBy",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
                        "name": "ProjectManagersOrderBy",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
=======
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
>>>>>>> chore: add basic SelectOperator component
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
=======
<<<<<<< HEAD
                  "name": "ProjectManagersConnection",
=======
<<<<<<< HEAD
                  "name": "ProjectsConnection",
=======
>>>>>>> refactor: update schema & reorder sqitch plan
                  "name": "AttachmentsConnection",
=======
                  "name": "PageInfo",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
                  "name": "ProjectManagersConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
<<<<<<< HEAD
=======
<<<<<<< HEAD
              "name": "projectsByProjectManagerCifUserIdAndProjectId",
              "description": "Reads and enables pagination through a set of `Project`.",
=======
>>>>>>> refactor: update schema & reorder sqitch plan
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
=======
<<<<<<< HEAD
              "name": "projectManagersByUpdatedBy",
              "description": "Reads and enables pagination through a set of `ProjectManager`.",
=======
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
>>>>>>> chore: add basic SelectOperator component
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
          "name": "CifUserCifUsersByAttachmentDeletedByAndUpdatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `Attachment`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `Attachment`, and the cursor to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CifUserCifUsersByAttachmentDeletedByAndUpdatedByManyToManyEdge",
                      "ofType": null
=======
<<<<<<< HEAD
          "name": "CifUserCifUsersByChangeStatusDeletedByAndCreatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `ChangeStatus`.",
          "fields": [
            {
              "name": "changeStatusesByCreatedBy",
              "description": "Reads and enables pagination through a set of `ChangeStatus`.",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
              "name": "projectManagersByCreatedBy",
              "description": "Reads and enables pagination through a set of `ProjectManager`.",
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectManagerCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectManagerFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `ProjectManager`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "ProjectManagersOrderBy",
                        "ofType": null
                      }
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
=======
>>>>>>> refactor: update schema & reorder sqitch plan
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
>>>>>>> refactor: update schema & reorder sqitch plan
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                  "name": "PageInfo",
=======
<<<<<<< HEAD
                  "name": "ProjectManagersConnection",
=======
<<<<<<< HEAD
                  "name": "CifUserProjectsByProjectManagerDeletedByAndProjectIdManyToManyConnection",
=======
                  "name": "ChangeStatusesConnection",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
                  "name": "ProjectManagersConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
<<<<<<< HEAD
=======
<<<<<<< HEAD
<<<<<<< HEAD
              "name": "projectManagersByCreatedBy",
              "description": "Reads and enables pagination through a set of `ProjectManager`.",
=======
>>>>>>> refactor: update schema & reorder sqitch plan
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
=======
<<<<<<< HEAD
              "name": "projectsByCreatedBy",
              "description": "Reads and enables pagination through a set of `Project`.",
=======
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
>>>>>>> chore: add basic SelectOperator component
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
          "name": "CifUserCifUsersByAttachmentDeletedByAndUpdatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `Attachment`.",
          "fields": [
            {
              "name": "attachmentsByUpdatedBy",
              "description": "Reads and enables pagination through a set of `Attachment`.",
=======
          "name": "CifUserCifUsersByChangeStatusCreatedByAndDeletedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `ChangeStatus`.",
          "fields": [
            {
              "name": "changeStatusesByDeletedBy",
              "description": "Reads and enables pagination through a set of `ChangeStatus`.",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
              "name": "projectManagersByDeletedBy",
              "description": "Reads and enables pagination through a set of `ProjectManager`.",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
                    "name": "AttachmentCondition",
=======
<<<<<<< HEAD
<<<<<<< HEAD
                    "name": "ProjectManagerCondition",
=======
<<<<<<< HEAD
                    "name": "ProjectCondition",
=======
                    "name": "ChangeStatusCondition",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
                    "name": "ProjectManagerCondition",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
                    "name": "AttachmentFilter",
=======
<<<<<<< HEAD
<<<<<<< HEAD
                    "name": "ProjectManagerFilter",
=======
<<<<<<< HEAD
                    "name": "ProjectFilter",
=======
                    "name": "ChangeStatusFilter",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
                    "name": "ProjectManagerFilter",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
<<<<<<< HEAD
                  "description": "The method to use when ordering `Attachment`.",
=======
<<<<<<< HEAD
<<<<<<< HEAD
                  "description": "The method to use when ordering `ProjectManager`.",
=======
<<<<<<< HEAD
                  "description": "The method to use when ordering `Project`.",
=======
                  "description": "The method to use when ordering `ChangeStatus`.",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
                  "description": "The method to use when ordering `ProjectManager`.",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
<<<<<<< HEAD
                        "name": "AttachmentsOrderBy",
=======
<<<<<<< HEAD
<<<<<<< HEAD
                        "name": "ProjectManagersOrderBy",
=======
<<<<<<< HEAD
                        "name": "ProjectsOrderBy",
=======
                        "name": "ChangeStatusesOrderBy",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
                        "name": "ProjectManagersOrderBy",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                        "ofType": null
                      }
=======
          "name": "CifUserCifUsersByChangeStatusDeletedByAndUpdatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `ChangeStatus`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `ChangeStatus`, and the cursor to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CifUserCifUsersByChangeStatusDeletedByAndUpdatedByManyToManyEdge",
                      "ofType": null
>>>>>>> chore: add basic SelectOperator component
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                  "name": "AttachmentsConnection",
=======
<<<<<<< HEAD
                  "name": "ProjectManagersConnection",
=======
<<<<<<< HEAD
                  "name": "CifUserProjectsByProjectManagerCifUserIdAndProjectIdManyToManyConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
=======
                  "name": "PageInfo",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
                  "name": "ProjectManagersConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
<<<<<<< HEAD
=======
<<<<<<< HEAD
              "name": "projectManagersByDeletedBy",
              "description": "Reads and enables pagination through a set of `ProjectManager`.",
=======
>>>>>>> refactor: update schema & reorder sqitch plan
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
<<<<<<< HEAD
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserCifUsersByAttachmentUpdatedByAndCreatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `Attachment`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `Attachment`, and the cursor to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CifUserCifUsersByAttachmentUpdatedByAndCreatedByManyToManyEdge",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
=======
<<<<<<< HEAD
              "name": "projectsByProjectManagerUpdatedByAndProjectId",
              "description": "Reads and enables pagination through a set of `Project`.",
=======
>>>>>>> chore: add basic SelectOperator component
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
          "name": "CifUserCifUsersByAttachmentUpdatedByAndCreatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `Attachment`.",
          "fields": [
            {
              "name": "attachmentsByCreatedBy",
              "description": "Reads and enables pagination through a set of `Attachment`.",
=======
          "name": "CifUserCifUsersByChangeStatusDeletedByAndUpdatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `ChangeStatus`.",
          "fields": [
            {
              "name": "changeStatusesByUpdatedBy",
              "description": "Reads and enables pagination through a set of `ChangeStatus`.",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
=======
              "name": "projectManagersByUpdatedBy",
              "description": "Reads and enables pagination through a set of `ProjectManager`.",
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                    "name": "AttachmentCondition",
=======
<<<<<<< HEAD
                    "name": "ProjectCondition",
=======
<<<<<<< HEAD
                    "name": "ProjectCondition",
=======
                    "name": "ChangeStatusCondition",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
                    "name": "ProjectManagerCondition",
>>>>>>> refactor: update schema & reorder sqitch plan
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                    "name": "AttachmentFilter",
=======
<<<<<<< HEAD
                    "name": "ProjectFilter",
=======
<<<<<<< HEAD
                    "name": "ProjectFilter",
=======
                    "name": "ChangeStatusFilter",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
                    "name": "ProjectManagerFilter",
>>>>>>> refactor: update schema & reorder sqitch plan
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
<<<<<<< HEAD
<<<<<<< HEAD
                  "description": "The method to use when ordering `Attachment`.",
=======
<<<<<<< HEAD
                  "description": "The method to use when ordering `Project`.",
=======
<<<<<<< HEAD
                  "description": "The method to use when ordering `Project`.",
=======
                  "description": "The method to use when ordering `ChangeStatus`.",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
                  "description": "The method to use when ordering `ProjectManager`.",
>>>>>>> refactor: update schema & reorder sqitch plan
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
<<<<<<< HEAD
<<<<<<< HEAD
                        "name": "AttachmentsOrderBy",
=======
<<<<<<< HEAD
                        "name": "ProjectsOrderBy",
=======
<<<<<<< HEAD
                        "name": "ProjectsOrderBy",
=======
                        "name": "ChangeStatusesOrderBy",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
                        "name": "ProjectManagersOrderBy",
>>>>>>> refactor: update schema & reorder sqitch plan
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                  "name": "AttachmentsConnection",
=======
<<<<<<< HEAD
                  "name": "ProjectsConnection",
=======
<<<<<<< HEAD
                  "name": "CifUserProjectsByProjectManagerUpdatedByAndProjectIdManyToManyConnection",
=======
                  "name": "ChangeStatusesConnection",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
                  "name": "ProjectManagersConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
                  "ofType": null
                }
>>>>>>> refactor: update schema & reorder sqitch plan
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
<<<<<<< HEAD
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
=======
>>>>>>> refactor: update schema & reorder sqitch plan
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
          "name": "CifUserCifUsersByAttachmentUpdatedByAndDeletedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `Attachment`.",
=======
          "name": "CifUserCifUsersByChangeStatusCreatedByAndUpdatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `ChangeStatus`.",
>>>>>>> refactor: update schema & reorder sqitch plan
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `Attachment`, and the cursor to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
<<<<<<< HEAD
                      "name": "CifUserCifUsersByAttachmentUpdatedByAndDeletedByManyToManyEdge",
=======
                      "name": "CifUserCifUsersByChangeStatusCreatedByAndUpdatedByManyToManyEdge",
>>>>>>> refactor: update schema & reorder sqitch plan
                      "ofType": null
=======
              "name": "projectsByCreatedBy",
              "description": "Reads and enables pagination through a set of `Project`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `Project`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "ProjectsOrderBy",
                        "ofType": null
                      }
>>>>>>> refactor: update schema & reorder sqitch plan
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
<<<<<<< HEAD
                  "name": "PageInfo",
<<<<<<< HEAD
=======
>>>>>>> chore: add basic SelectOperator component
=======
                  "name": "ProjectsConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
=======
<<<<<<< HEAD
<<<<<<< HEAD
              "name": "projectsByProjectManagerCreatedByAndProjectId",
              "description": "Reads and enables pagination through a set of `Project`.",
=======
>>>>>>> refactor: update schema & reorder sqitch plan
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
          "name": "CifUserCifUsersByAttachmentUpdatedByAndDeletedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `Attachment`.",
=======
          "name": "CifUserCifUsersByChangeStatusCreatedByAndUpdatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `ChangeStatus`.",
>>>>>>> refactor: update schema & reorder sqitch plan
          "fields": [
            {
              "name": "attachmentsByDeletedBy",
              "description": "Reads and enables pagination through a set of `Attachment`.",
=======
<<<<<<< HEAD
              "name": "projectsByDeletedBy",
=======
              "name": "projectsByUpdatedBy",
>>>>>>> chore: add basic SelectOperator component
              "description": "Reads and enables pagination through a set of `Project`.",
>>>>>>> chore: add basic SelectOperator component
=======
              "name": "projectsByDeletedBy",
              "description": "Reads and enables pagination through a set of `Project`.",
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
                    "name": "AttachmentCondition",
=======
<<<<<<< HEAD
<<<<<<< HEAD
                    "name": "ProjectManagerCondition",
=======
<<<<<<< HEAD
                    "name": "ProjectCondition",
=======
                    "name": "ChangeStatusCondition",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
                    "name": "ProjectCondition",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
                    "name": "AttachmentFilter",
=======
<<<<<<< HEAD
<<<<<<< HEAD
                    "name": "ProjectManagerFilter",
=======
<<<<<<< HEAD
                    "name": "ProjectFilter",
=======
                    "name": "ChangeStatusFilter",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
                    "name": "ProjectFilter",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
<<<<<<< HEAD
<<<<<<< HEAD
                  "description": "The method to use when ordering `Attachment`.",
=======
<<<<<<< HEAD
                  "description": "The method to use when ordering `ProjectManager`.",
>>>>>>> refactor: update schema & reorder sqitch plan
=======
                  "description": "The method to use when ordering `Project`.",
<<<<<<< HEAD
=======
=======
                  "description": "The method to use when ordering `ChangeStatus`.",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
                  "description": "The method to use when ordering `Project`.",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
<<<<<<< HEAD
                        "name": "ProjectsOrderBy",
=======
<<<<<<< HEAD
<<<<<<< HEAD
                        "name": "ProjectManagersOrderBy",
=======
<<<<<<< HEAD
                        "name": "ProjectsOrderBy",
=======
                        "name": "ChangeStatusesOrderBy",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
                        "name": "ProjectsOrderBy",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
<<<<<<< HEAD
                  "name": "ProjectsConnection",
=======
<<<<<<< HEAD
<<<<<<< HEAD
                  "name": "ProjectManagersConnection",
=======
<<<<<<< HEAD
                  "name": "CifUserProjectsByProjectManagerCreatedByAndProjectIdManyToManyConnection",
=======
                  "name": "ChangeStatusesConnection",
>>>>>>> chore: add basic SelectOperator component
=======
                  "name": "ProjectsConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
<<<<<<< HEAD
=======
<<<<<<< HEAD
              "name": "projectsByProjectManagerDeletedByAndProjectId",
              "description": "Reads and enables pagination through a set of `Project`.",
=======
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserCifUsersByChangeStatusDeletedByAndCreatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `ChangeStatus`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `ChangeStatus`, and the cursor to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CifUserCifUsersByChangeStatusDeletedByAndCreatedByManyToManyEdge",
                      "ofType": null
=======
>>>>>>> refactor: update schema & reorder sqitch plan
              "name": "projectsByProjectManagerCifUserIdAndProjectId",
              "description": "Reads and enables pagination through a set of `Project`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `Project`.",
>>>>>>> chore: add basic SelectOperator component
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "AttachmentsOrderBy",
                        "ofType": null
                      }
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
<<<<<<< HEAD
=======
=======
              "name": "rowId",
              "description": "Unique ID for the user",
=======
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
<<<<<<< HEAD
                  "name": "PageInfo",
>>>>>>> chore: add basic SelectOperator component
=======
                  "name": "CifUserProjectsByProjectManagerCifUserIdAndProjectIdManyToManyConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
<<<<<<< HEAD
              "name": "projectManagersByUpdatedBy",
              "description": "Reads and enables pagination through a set of `ProjectManager`.",
=======
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
<<<<<<< HEAD
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "updated at timestamp",
              "args": [],
>>>>>>> chore: add basic SelectOperator component
=======
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserCifUsersByChangeStatusDeletedByAndCreatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `ChangeStatus`.",
          "fields": [
            {
              "name": "changeStatusesByCreatedBy",
              "description": "Reads and enables pagination through a set of `ChangeStatus`.",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
              "name": "projectsByProjectManagerCreatedByAndProjectId",
              "description": "Reads and enables pagination through a set of `Project`.",
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                    "name": "ProjectManagerCondition",
=======
<<<<<<< HEAD
                    "name": "ProjectCondition",
=======
                    "name": "ChangeStatusCondition",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
                    "name": "ProjectCondition",
>>>>>>> refactor: update schema & reorder sqitch plan
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                    "name": "ProjectManagerFilter",
=======
<<<<<<< HEAD
                    "name": "ProjectFilter",
=======
                    "name": "ChangeStatusFilter",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
                    "name": "ProjectFilter",
>>>>>>> refactor: update schema & reorder sqitch plan
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
<<<<<<< HEAD
<<<<<<< HEAD
                  "description": "The method to use when ordering `ProjectManager`.",
=======
<<<<<<< HEAD
                  "description": "The method to use when ordering `Project`.",
=======
                  "description": "The method to use when ordering `ChangeStatus`.",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
                  "description": "The method to use when ordering `Project`.",
>>>>>>> refactor: update schema & reorder sqitch plan
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
<<<<<<< HEAD
<<<<<<< HEAD
                        "name": "ProjectManagersOrderBy",
=======
<<<<<<< HEAD
                        "name": "ProjectsOrderBy",
=======
                        "name": "ChangeStatusesOrderBy",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
                        "name": "ProjectsOrderBy",
>>>>>>> refactor: update schema & reorder sqitch plan
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
>>>>>>> refactor: update schema & reorder sqitch plan
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
<<<<<<< HEAD
<<<<<<< HEAD
                  "kind": "OBJECT",
                  "name": "AttachmentsConnection",
=======
                  "kind": "SCALAR",
                  "name": "Datetime",
>>>>>>> chore: add basic SelectOperator component
=======
                  "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                  "name": "ProjectManagersConnection",
=======
<<<<<<< HEAD
                  "name": "CifUserProjectsByProjectManagerDeletedByAndProjectIdManyToManyConnection",
=======
                  "name": "ChangeStatusesConnection",
>>>>>>> chore: add basic SelectOperator component
=======
                  "name": "CifUserProjectsByProjectManagerCreatedByAndProjectIdManyToManyConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
=======
<<<<<<< HEAD
<<<<<<< HEAD
              "name": "projectsByCreatedBy",
              "description": "Reads and enables pagination through a set of `Project`.",
=======
>>>>>>> refactor: update schema & reorder sqitch plan
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
          "name": "CifUserCifUsersByChangeStatusCreatedByAndDeletedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `ChangeStatus`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `ChangeStatus`, and the cursor to aid in pagination.",
=======
<<<<<<< HEAD
          "name": "CifUserCifUsersByAttachmentCreatedByAndDeletedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `Attachment`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `Attachment`, and the cursor to aid in pagination.",
=======
          "name": "CifUserCifUsersByChangeStatusUpdatedByAndCreatedByManyToManyConnection",
=======
          "name": "CifUserCifUsersByChangeStatusDeletedByAndUpdatedByManyToManyConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
          "description": "A connection to a list of `CifUser` values, with data from `ChangeStatus`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `ChangeStatus`, and the cursor to aid in pagination.",
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                      "name": "CifUserCifUsersByChangeStatusCreatedByAndDeletedByManyToManyEdge",
=======
<<<<<<< HEAD
                      "name": "CifUserCifUsersByAttachmentCreatedByAndDeletedByManyToManyEdge",
=======
                      "name": "CifUserCifUsersByChangeStatusUpdatedByAndCreatedByManyToManyEdge",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
                      "ofType": null
>>>>>>> chore: add basic SelectOperator component
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CifUserProjectsByProjectManagerCifUserIdAndProjectIdManyToManyConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "projectsByProjectManagerCreatedByAndProjectId",
              "description": "Reads and enables pagination through a set of `Project`.",
=======
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
          "name": "CifUserCifUsersByChangeStatusCreatedByAndDeletedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `ChangeStatus`.",
          "fields": [
            {
              "name": "changeStatusesByDeletedBy",
              "description": "Reads and enables pagination through a set of `ChangeStatus`.",
=======
<<<<<<< HEAD
          "name": "CifUserCifUsersByAttachmentCreatedByAndDeletedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `Attachment`.",
          "fields": [
            {
              "name": "attachmentsByDeletedBy",
              "description": "Reads and enables pagination through a set of `Attachment`.",
=======
          "name": "CifUserCifUsersByChangeStatusUpdatedByAndCreatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `ChangeStatus`.",
          "fields": [
            {
              "name": "changeStatusesByCreatedBy",
              "description": "Reads and enables pagination through a set of `ChangeStatus`.",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
                      "name": "CifUserCifUsersByChangeStatusDeletedByAndUpdatedByManyToManyEdge",
                      "ofType": null
=======
              "name": "projectsByProjectManagerDeletedByAndProjectId",
              "description": "Reads and enables pagination through a set of `Project`.",
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                    "name": "ChangeStatusCondition",
=======
<<<<<<< HEAD
                    "name": "ProjectCondition",
=======
<<<<<<< HEAD
                    "name": "AttachmentCondition",
=======
                    "name": "ChangeStatusCondition",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
                    "name": "ProjectCondition",
>>>>>>> refactor: update schema & reorder sqitch plan
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                    "name": "ChangeStatusFilter",
=======
<<<<<<< HEAD
                    "name": "ProjectFilter",
=======
<<<<<<< HEAD
                    "name": "AttachmentFilter",
=======
                    "name": "ChangeStatusFilter",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
                    "name": "ProjectFilter",
>>>>>>> refactor: update schema & reorder sqitch plan
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
<<<<<<< HEAD
<<<<<<< HEAD
                  "description": "The method to use when ordering `ChangeStatus`.",
=======
<<<<<<< HEAD
                  "description": "The method to use when ordering `Project`.",
=======
<<<<<<< HEAD
                  "description": "The method to use when ordering `Attachment`.",
=======
                  "description": "The method to use when ordering `ChangeStatus`.",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
                  "description": "The method to use when ordering `Project`.",
>>>>>>> refactor: update schema & reorder sqitch plan
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
<<<<<<< HEAD
<<<<<<< HEAD
                        "name": "ChangeStatusesOrderBy",
=======
<<<<<<< HEAD
                        "name": "ProjectsOrderBy",
=======
<<<<<<< HEAD
                        "name": "AttachmentsOrderBy",
=======
                        "name": "ChangeStatusesOrderBy",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
                        "name": "ProjectsOrderBy",
>>>>>>> refactor: update schema & reorder sqitch plan
                        "ofType": null
                      }
>>>>>>> refactor: update schema & reorder sqitch plan
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                  "name": "ChangeStatusesConnection",
=======
<<<<<<< HEAD
                  "name": "CifUserProjectsByProjectManagerCreatedByAndProjectIdManyToManyConnection",
=======
<<<<<<< HEAD
                  "name": "AttachmentsConnection",
=======
                  "name": "ChangeStatusesConnection",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
                  "name": "PageInfo",
>>>>>>> chore: add basic SelectOperator component
=======
                  "name": "CifUserProjectsByProjectManagerDeletedByAndProjectIdManyToManyConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
<<<<<<< HEAD
              "name": "projectsByProjectManagerDeletedByAndProjectId",
              "description": "Reads and enables pagination through a set of `Project`.",
=======
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
          "name": "CifUserCifUsersByChangeStatusCreatedByAndUpdatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `ChangeStatus`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `ChangeStatus`, and the cursor to aid in pagination.",
=======
<<<<<<< HEAD
          "name": "CifUserCifUsersByAttachmentCreatedByAndUpdatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `Attachment`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `Attachment`, and the cursor to aid in pagination.",
=======
          "name": "CifUserCifUsersByChangeStatusUpdatedByAndDeletedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `ChangeStatus`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `ChangeStatus`, and the cursor to aid in pagination.",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
<<<<<<< HEAD
                      "name": "CifUserCifUsersByChangeStatusCreatedByAndUpdatedByManyToManyEdge",
=======
<<<<<<< HEAD
                      "name": "CifUserCifUsersByAttachmentCreatedByAndUpdatedByManyToManyEdge",
=======
                      "name": "CifUserCifUsersByChangeStatusUpdatedByAndDeletedByManyToManyEdge",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
=======
<<<<<<< HEAD
              "name": "projectsByProjectManagerUpdatedByAndProjectId",
              "description": "Reads and enables pagination through a set of `Project`.",
=======
>>>>>>> refactor: update schema & reorder sqitch plan
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
          "name": "CifUserCifUsersByChangeStatusCreatedByAndUpdatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `ChangeStatus`.",
          "fields": [
            {
              "name": "changeStatusesByUpdatedBy",
              "description": "Reads and enables pagination through a set of `ChangeStatus`.",
=======
<<<<<<< HEAD
          "name": "CifUserCifUsersByAttachmentCreatedByAndUpdatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `Attachment`.",
          "fields": [
            {
              "name": "attachmentsByUpdatedBy",
              "description": "Reads and enables pagination through a set of `Attachment`.",
=======
          "name": "CifUserCifUsersByChangeStatusUpdatedByAndDeletedByManyToManyEdge",
=======
          "name": "CifUserCifUsersByChangeStatusDeletedByAndUpdatedByManyToManyEdge",
>>>>>>> refactor: update schema & reorder sqitch plan
          "description": "A `CifUser` edge in the connection, with data from `ChangeStatus`.",
          "fields": [
            {
              "name": "changeStatusesByUpdatedBy",
              "description": "Reads and enables pagination through a set of `ChangeStatus`.",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
=======
=======
              "name": "projectsByProjectManagerUpdatedByAndProjectId",
              "description": "Reads and enables pagination through a set of `Project`.",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                    "name": "ChangeStatusCondition",
=======
=======
>>>>>>> refactor: update schema & reorder sqitch plan
<<<<<<< HEAD
                    "name": "ProjectCondition",
=======
<<<<<<< HEAD
                    "name": "ProjectCondition",
=======
                    "name": "ChangeStatusCondition",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
=======
=======
                    "name": "ProjectCondition",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                    "name": "ChangeStatusFilter",
=======
=======
>>>>>>> refactor: update schema & reorder sqitch plan
<<<<<<< HEAD
                    "name": "ProjectFilter",
=======
<<<<<<< HEAD
                    "name": "ProjectFilter",
=======
                    "name": "ChangeStatusFilter",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
=======
=======
                    "name": "ProjectFilter",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
<<<<<<< HEAD
<<<<<<< HEAD
                  "description": "The method to use when ordering `ChangeStatus`.",
=======
=======
>>>>>>> refactor: update schema & reorder sqitch plan
<<<<<<< HEAD
                  "description": "The method to use when ordering `Project`.",
=======
<<<<<<< HEAD
                  "description": "The method to use when ordering `Project`.",
=======
                  "description": "The method to use when ordering `ChangeStatus`.",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
=======
=======
                  "description": "The method to use when ordering `Project`.",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
<<<<<<< HEAD
<<<<<<< HEAD
                        "name": "ChangeStatusesOrderBy",
=======
=======
>>>>>>> refactor: update schema & reorder sqitch plan
<<<<<<< HEAD
                        "name": "ProjectsOrderBy",
=======
<<<<<<< HEAD
                        "name": "ProjectsOrderBy",
=======
                        "name": "ChangeStatusesOrderBy",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
=======
=======
                        "name": "ProjectsOrderBy",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                  "name": "ChangeStatusesConnection",
=======
<<<<<<< HEAD
                  "name": "CifUserProjectsByProjectManagerDeletedByAndProjectIdManyToManyConnection",
=======
<<<<<<< HEAD
                  "name": "ProjectsConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
=======
<<<<<<< HEAD
                  "name": "CifUserProjectsByProjectManagerUpdatedByAndProjectIdManyToManyConnection",
=======
                  "name": "ChangeStatusesConnection",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
=======
=======
                  "name": "CifUserProjectsByProjectManagerUpdatedByAndProjectIdManyToManyConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
<<<<<<< HEAD
          "name": "CifUserCifUsersByChangeStatusDeletedByAndCreatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `ChangeStatus`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `ChangeStatus`, and the cursor to aid in pagination.",
=======
<<<<<<< HEAD
          "name": "CifUserCifUsersByAttachmentDeletedByAndCreatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `Attachment`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `Attachment`, and the cursor to aid in pagination.",
=======
<<<<<<< HEAD
              "name": "projectsByDeletedBy",
>>>>>>> refactor: update schema & reorder sqitch plan
=======
              "name": "projectsByUpdatedBy",
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
<<<<<<< HEAD
                      "name": "CifUserCifUsersByChangeStatusDeletedByAndCreatedByManyToManyEdge",
=======
<<<<<<< HEAD
                      "name": "CifUserCifUsersByAttachmentDeletedByAndCreatedByManyToManyEdge",
=======
                      "name": "CifUserCifUsersByCifUserCreatedByAndDeletedByManyToManyEdge",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
                      "ofType": null
=======
              "description": "Reads and enables pagination through a set of `Project`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `Project`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "ProjectsOrderBy",
                        "ofType": null
                      }
>>>>>>> refactor: update schema & reorder sqitch plan
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProjectsConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "projectsByProjectManagerCifUserIdAndProjectId",
              "description": "Reads and enables pagination through a set of `Project`.",
<<<<<<< HEAD
=======
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
          "name": "CifUserCifUsersByChangeStatusDeletedByAndCreatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `ChangeStatus`.",
          "fields": [
            {
              "name": "changeStatusesByCreatedBy",
              "description": "Reads and enables pagination through a set of `ChangeStatus`.",
=======
<<<<<<< HEAD
          "name": "CifUserCifUsersByAttachmentDeletedByAndCreatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `Attachment`.",
          "fields": [
            {
              "name": "attachmentsByCreatedBy",
              "description": "Reads and enables pagination through a set of `Attachment`.",
=======
          "name": "CifUserCifUsersByCifUserCreatedByAndDeletedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `CifUser`.",
          "fields": [
            {
              "name": "cifUsersByDeletedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                    "name": "ChangeStatusCondition",
=======
<<<<<<< HEAD
                    "name": "ProjectCondition",
=======
<<<<<<< HEAD
                    "name": "AttachmentCondition",
=======
                    "name": "CifUserCondition",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
                    "name": "ProjectCondition",
>>>>>>> refactor: update schema & reorder sqitch plan
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                    "name": "ChangeStatusFilter",
=======
<<<<<<< HEAD
                    "name": "ProjectFilter",
=======
<<<<<<< HEAD
                    "name": "AttachmentFilter",
=======
                    "name": "CifUserFilter",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
                    "name": "ProjectFilter",
>>>>>>> refactor: update schema & reorder sqitch plan
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
<<<<<<< HEAD
<<<<<<< HEAD
                  "description": "The method to use when ordering `ChangeStatus`.",
=======
<<<<<<< HEAD
                  "description": "The method to use when ordering `Project`.",
=======
<<<<<<< HEAD
                  "description": "The method to use when ordering `Attachment`.",
=======
                  "description": "The method to use when ordering `CifUser`.",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
                  "description": "The method to use when ordering `Project`.",
>>>>>>> refactor: update schema & reorder sqitch plan
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
<<<<<<< HEAD
<<<<<<< HEAD
                        "name": "ChangeStatusesOrderBy",
=======
<<<<<<< HEAD
                        "name": "ProjectsOrderBy",
=======
<<<<<<< HEAD
                        "name": "AttachmentsOrderBy",
=======
                        "name": "CifUsersOrderBy",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
                        "name": "ProjectsOrderBy",
>>>>>>> refactor: update schema & reorder sqitch plan
                        "ofType": null
                      }
=======
              "name": "rowId",
              "description": "Unique ID for the user",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "updated at timestamp",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
<<<<<<< HEAD
                  "kind": "OBJECT",
<<<<<<< HEAD
                  "name": "ChangeStatusesConnection",
=======
<<<<<<< HEAD
                  "name": "CifUserProjectsByProjectManagerUpdatedByAndProjectIdManyToManyConnection",
=======
<<<<<<< HEAD
                  "name": "AttachmentsConnection",
=======
                  "name": "CifUsersConnection",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
                  "kind": "SCALAR",
                  "name": "Datetime",
>>>>>>> refactor: update schema & reorder sqitch plan
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedBy",
              "description": "updated by user id",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "uuid",
              "description": "Universally Unique ID for the user, defined by the single sign-on provider",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "UUID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
          "name": "CifUserCifUsersByChangeStatusDeletedByAndUpdatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `ChangeStatus`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `ChangeStatus`, and the cursor to aid in pagination.",
=======
<<<<<<< HEAD
          "name": "CifUserCifUsersByAttachmentDeletedByAndUpdatedByManyToManyConnection",
=======
          "name": "CifUserCifUsersByAttachmentCreatedByAndDeletedByManyToManyConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
          "description": "A connection to a list of `CifUser` values, with data from `Attachment`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `Attachment`, and the cursor to aid in pagination.",
=======
          "name": "CifUserCifUsersByChangeStatusUpdatedByAndCreatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `ChangeStatus`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `ChangeStatus`, and the cursor to aid in pagination.",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                      "name": "CifUserCifUsersByChangeStatusDeletedByAndUpdatedByManyToManyEdge",
=======
<<<<<<< HEAD
                      "name": "CifUserCifUsersByAttachmentDeletedByAndUpdatedByManyToManyEdge",
=======
                      "name": "CifUserCifUsersByAttachmentCreatedByAndDeletedByManyToManyEdge",
>>>>>>> refactor: update schema & reorder sqitch plan
=======
                      "name": "CifUserCifUsersByChangeStatusUpdatedByAndCreatedByManyToManyEdge",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
                      "ofType": null
>>>>>>> chore: add basic SelectOperator component
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CifUserProjectsByProjectManagerCifUserIdAndProjectIdManyToManyConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "projectsByProjectManagerCreatedByAndProjectId",
              "description": "Reads and enables pagination through a set of `Project`.",
=======
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
          "name": "CifUserCifUsersByChangeStatusDeletedByAndUpdatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `ChangeStatus`.",
          "fields": [
            {
              "name": "changeStatusesByUpdatedBy",
              "description": "Reads and enables pagination through a set of `ChangeStatus`.",
=======
<<<<<<< HEAD
          "name": "CifUserCifUsersByAttachmentDeletedByAndUpdatedByManyToManyEdge",
=======
          "name": "CifUserCifUsersByAttachmentCreatedByAndDeletedByManyToManyEdge",
>>>>>>> refactor: update schema & reorder sqitch plan
          "description": "A `CifUser` edge in the connection, with data from `Attachment`.",
          "fields": [
            {
              "name": "attachmentsByDeletedBy",
              "description": "Reads and enables pagination through a set of `Attachment`.",
=======
          "name": "CifUserCifUsersByChangeStatusUpdatedByAndCreatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `ChangeStatus`.",
          "fields": [
            {
              "name": "changeStatusesByCreatedBy",
              "description": "Reads and enables pagination through a set of `ChangeStatus`.",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
=======
=======
              "name": "projectsByUpdatedBy",
              "description": "Reads and enables pagination through a set of `Project`.",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                    "name": "ChangeStatusCondition",
=======
=======
>>>>>>> refactor: update schema & reorder sqitch plan
<<<<<<< HEAD
                    "name": "ProjectCondition",
=======
<<<<<<< HEAD
                    "name": "AttachmentCondition",
=======
                    "name": "ChangeStatusCondition",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
=======
=======
                    "name": "ProjectCondition",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                    "name": "ChangeStatusFilter",
=======
=======
>>>>>>> refactor: update schema & reorder sqitch plan
<<<<<<< HEAD
                    "name": "ProjectFilter",
=======
<<<<<<< HEAD
                    "name": "AttachmentFilter",
=======
                    "name": "ChangeStatusFilter",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
=======
=======
                    "name": "ProjectFilter",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
<<<<<<< HEAD
<<<<<<< HEAD
                  "description": "The method to use when ordering `ChangeStatus`.",
=======
=======
>>>>>>> refactor: update schema & reorder sqitch plan
<<<<<<< HEAD
                  "description": "The method to use when ordering `Project`.",
=======
<<<<<<< HEAD
                  "description": "The method to use when ordering `Attachment`.",
=======
                  "description": "The method to use when ordering `ChangeStatus`.",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
=======
=======
                  "description": "The method to use when ordering `Project`.",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
<<<<<<< HEAD
<<<<<<< HEAD
                        "name": "ChangeStatusesOrderBy",
=======
=======
>>>>>>> refactor: update schema & reorder sqitch plan
<<<<<<< HEAD
                        "name": "ProjectsOrderBy",
=======
<<<<<<< HEAD
                        "name": "AttachmentsOrderBy",
=======
                        "name": "ChangeStatusesOrderBy",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
=======
=======
                        "name": "ProjectsOrderBy",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                  "name": "ChangeStatusesConnection",
=======
<<<<<<< HEAD
                  "name": "ProjectsConnection",
=======
<<<<<<< HEAD
                  "name": "CifUserProjectsByProjectManagerCreatedByAndProjectIdManyToManyConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
=======
<<<<<<< HEAD
                  "name": "AttachmentsConnection",
=======
                  "name": "ChangeStatusesConnection",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
=======
=======
                  "name": "ProjectsConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
<<<<<<< HEAD
              "name": "projectsByProjectManagerDeletedByAndProjectId",
              "description": "Reads and enables pagination through a set of `Project`.",
=======
              "name": "cursor",
              "description": "A cursor for use in pagination.",
=======
              "name": "rowId",
              "description": "Unique ID for the user",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "updated at timestamp",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Datetime",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedBy",
              "description": "updated by user id",
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "uuid",
              "description": "Universally Unique ID for the user, defined by the single sign-on provider",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "UUID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
          "name": "CifUserCifUsersByChangeStatusUpdatedByAndCreatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `ChangeStatus`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `ChangeStatus`, and the cursor to aid in pagination.",
=======
<<<<<<< HEAD
          "name": "CifUserCifUsersByAttachmentCreatedByAndDeletedByManyToManyConnection",
=======
=======
>>>>>>> refactor: update schema & reorder sqitch plan
<<<<<<< HEAD
          "name": "CifUserCifUsersByAttachmentCreatedByAndUpdatedByManyToManyConnection",
=======
          "name": "CifUserCifUsersByAttachmentCreatedByAndDeletedByManyToManyConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
          "description": "A connection to a list of `CifUser` values, with data from `Attachment`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `Attachment`, and the cursor to aid in pagination.",
<<<<<<< HEAD
=======
          "name": "CifUserCifUsersByChangeStatusUpdatedByAndDeletedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `ChangeStatus`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `ChangeStatus`, and the cursor to aid in pagination.",
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
=======
=======
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                      "name": "CifUserCifUsersByChangeStatusUpdatedByAndCreatedByManyToManyEdge",
=======
<<<<<<< HEAD
                      "name": "CifUserCifUsersByAttachmentCreatedByAndDeletedByManyToManyEdge",
=======
=======
>>>>>>> refactor: update schema & reorder sqitch plan
<<<<<<< HEAD
                      "name": "CifUserCifUsersByAttachmentCreatedByAndUpdatedByManyToManyEdge",
=======
                      "name": "CifUserCifUsersByChangeStatusUpdatedByAndDeletedByManyToManyEdge",
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
=======
=======
                      "name": "CifUserCifUsersByAttachmentCreatedByAndDeletedByManyToManyEdge",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
          "name": "CifUserCifUsersByChangeStatusUpdatedByAndCreatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `ChangeStatus`.",
          "fields": [
            {
              "name": "changeStatusesByCreatedBy",
              "description": "Reads and enables pagination through a set of `ChangeStatus`.",
=======
<<<<<<< HEAD
          "name": "CifUserCifUsersByAttachmentCreatedByAndDeletedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `Attachment`.",
          "fields": [
            {
              "name": "attachmentsByDeletedBy",
              "description": "Reads and enables pagination through a set of `Attachment`.",
=======
=======
>>>>>>> refactor: update schema & reorder sqitch plan
<<<<<<< HEAD
          "name": "CifUserCifUsersByAttachmentCreatedByAndUpdatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `Attachment`.",
          "fields": [
            {
              "name": "attachmentsByUpdatedBy",
              "description": "Reads and enables pagination through a set of `Attachment`.",
=======
          "name": "CifUserCifUsersByChangeStatusUpdatedByAndDeletedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `ChangeStatus`.",
          "fields": [
            {
              "name": "changeStatusesByDeletedBy",
              "description": "Reads and enables pagination through a set of `ChangeStatus`.",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
=======
=======
          "name": "CifUserCifUsersByAttachmentCreatedByAndDeletedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `Attachment`.",
          "fields": [
            {
              "name": "attachmentsByDeletedBy",
              "description": "Reads and enables pagination through a set of `Attachment`.",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                    "name": "ChangeStatusCondition",
=======
<<<<<<< HEAD
                    "name": "AttachmentCondition",
=======
<<<<<<< HEAD
                    "name": "ProjectCondition",
>>>>>>> refactor: update schema & reorder sqitch plan
=======
<<<<<<< HEAD
                    "name": "AttachmentCondition",
=======
                    "name": "ChangeStatusCondition",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
=======
=======
                    "name": "AttachmentCondition",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                    "name": "ChangeStatusFilter",
=======
<<<<<<< HEAD
                    "name": "AttachmentFilter",
=======
<<<<<<< HEAD
                    "name": "ProjectFilter",
>>>>>>> refactor: update schema & reorder sqitch plan
=======
<<<<<<< HEAD
                    "name": "AttachmentFilter",
=======
                    "name": "ChangeStatusFilter",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
=======
=======
                    "name": "AttachmentFilter",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
<<<<<<< HEAD
<<<<<<< HEAD
                  "description": "The method to use when ordering `ChangeStatus`.",
=======
<<<<<<< HEAD
                  "description": "The method to use when ordering `Attachment`.",
=======
<<<<<<< HEAD
                  "description": "The method to use when ordering `Project`.",
>>>>>>> refactor: update schema & reorder sqitch plan
=======
<<<<<<< HEAD
                  "description": "The method to use when ordering `Attachment`.",
=======
                  "description": "The method to use when ordering `ChangeStatus`.",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
=======
=======
                  "description": "The method to use when ordering `Attachment`.",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
<<<<<<< HEAD
<<<<<<< HEAD
                        "name": "ChangeStatusesOrderBy",
=======
<<<<<<< HEAD
                        "name": "AttachmentsOrderBy",
=======
<<<<<<< HEAD
                        "name": "ProjectsOrderBy",
>>>>>>> refactor: update schema & reorder sqitch plan
=======
<<<<<<< HEAD
                        "name": "AttachmentsOrderBy",
=======
                        "name": "ChangeStatusesOrderBy",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
=======
=======
                        "name": "AttachmentsOrderBy",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                  "name": "ChangeStatusesConnection",
=======
<<<<<<< HEAD
                  "name": "AttachmentsConnection",
=======
<<<<<<< HEAD
                  "name": "CifUserProjectsByProjectManagerDeletedByAndProjectIdManyToManyConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
=======
<<<<<<< HEAD
                  "name": "AttachmentsConnection",
=======
                  "name": "ChangeStatusesConnection",
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
=======
=======
                  "name": "AttachmentsConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
          "name": "CifUserCifUsersByChangeStatusUpdatedByAndDeletedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `ChangeStatus`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `ChangeStatus`, and the cursor to aid in pagination.",
=======
<<<<<<< HEAD
          "name": "CifUserCifUsersByAttachmentCreatedByAndUpdatedByManyToManyConnection",
=======
=======
>>>>>>> refactor: update schema & reorder sqitch plan
<<<<<<< HEAD
          "name": "CifUserCifUsersByAttachmentDeletedByAndCreatedByManyToManyConnection",
=======
          "name": "CifUserCifUsersByAttachmentCreatedByAndUpdatedByManyToManyConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
          "description": "A connection to a list of `CifUser` values, with data from `Attachment`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `Attachment`, and the cursor to aid in pagination.",
<<<<<<< HEAD
=======
          "name": "CifUserCifUsersByCifUserCreatedByAndDeletedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `CifUser`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `CifUser`, and the cursor to aid in pagination.",
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
=======
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                      "name": "CifUserCifUsersByChangeStatusUpdatedByAndDeletedByManyToManyEdge",
=======
<<<<<<< HEAD
                      "name": "CifUserCifUsersByAttachmentCreatedByAndUpdatedByManyToManyEdge",
=======
=======
>>>>>>> refactor: update schema & reorder sqitch plan
<<<<<<< HEAD
                      "name": "CifUserCifUsersByAttachmentDeletedByAndCreatedByManyToManyEdge",
=======
                      "name": "CifUserCifUsersByCifUserCreatedByAndDeletedByManyToManyEdge",
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
=======
=======
                      "name": "CifUserCifUsersByAttachmentCreatedByAndUpdatedByManyToManyEdge",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
>>>>>>> chore: add basic SelectOperator component
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "projectsByProjectManagerUpdatedByAndProjectId",
              "description": "Reads and enables pagination through a set of `Project`.",
=======
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
          "name": "CifUserCifUsersByChangeStatusUpdatedByAndDeletedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `ChangeStatus`.",
          "fields": [
            {
              "name": "changeStatusesByDeletedBy",
              "description": "Reads and enables pagination through a set of `ChangeStatus`.",
=======
<<<<<<< HEAD
          "name": "CifUserCifUsersByAttachmentCreatedByAndUpdatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `Attachment`.",
          "fields": [
            {
              "name": "attachmentsByUpdatedBy",
              "description": "Reads and enables pagination through a set of `Attachment`.",
=======
=======
>>>>>>> refactor: update schema & reorder sqitch plan
<<<<<<< HEAD
          "name": "CifUserCifUsersByAttachmentDeletedByAndCreatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `Attachment`.",
          "fields": [
            {
              "name": "attachmentsByCreatedBy",
              "description": "Reads and enables pagination through a set of `Attachment`.",
=======
          "name": "CifUserCifUsersByCifUserCreatedByAndDeletedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `CifUser`.",
          "fields": [
            {
              "name": "cifUsersByDeletedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
=======
=======
          "name": "CifUserCifUsersByAttachmentCreatedByAndUpdatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `Attachment`.",
          "fields": [
            {
              "name": "attachmentsByUpdatedBy",
              "description": "Reads and enables pagination through a set of `Attachment`.",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                    "name": "ChangeStatusCondition",
=======
<<<<<<< HEAD
                    "name": "AttachmentCondition",
=======
<<<<<<< HEAD
                    "name": "ProjectCondition",
>>>>>>> refactor: update schema & reorder sqitch plan
=======
<<<<<<< HEAD
                    "name": "AttachmentCondition",
=======
                    "name": "CifUserCondition",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
=======
=======
                    "name": "AttachmentCondition",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                    "name": "ChangeStatusFilter",
=======
<<<<<<< HEAD
                    "name": "AttachmentFilter",
=======
<<<<<<< HEAD
                    "name": "ProjectFilter",
>>>>>>> refactor: update schema & reorder sqitch plan
=======
<<<<<<< HEAD
                    "name": "AttachmentFilter",
=======
                    "name": "CifUserFilter",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
=======
=======
                    "name": "AttachmentFilter",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
<<<<<<< HEAD
<<<<<<< HEAD
                  "description": "The method to use when ordering `ChangeStatus`.",
=======
<<<<<<< HEAD
                  "description": "The method to use when ordering `Attachment`.",
=======
<<<<<<< HEAD
                  "description": "The method to use when ordering `Project`.",
>>>>>>> refactor: update schema & reorder sqitch plan
=======
<<<<<<< HEAD
                  "description": "The method to use when ordering `Attachment`.",
=======
                  "description": "The method to use when ordering `CifUser`.",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
=======
=======
                  "description": "The method to use when ordering `Attachment`.",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
<<<<<<< HEAD
<<<<<<< HEAD
                        "name": "ChangeStatusesOrderBy",
=======
<<<<<<< HEAD
                        "name": "AttachmentsOrderBy",
=======
<<<<<<< HEAD
                        "name": "ProjectsOrderBy",
>>>>>>> refactor: update schema & reorder sqitch plan
=======
<<<<<<< HEAD
                        "name": "AttachmentsOrderBy",
=======
                        "name": "CifUsersOrderBy",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
=======
=======
                        "name": "AttachmentsOrderBy",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                  "name": "ChangeStatusesConnection",
=======
<<<<<<< HEAD
                  "name": "AttachmentsConnection",
=======
<<<<<<< HEAD
                  "name": "CifUserProjectsByProjectManagerUpdatedByAndProjectIdManyToManyConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
=======
<<<<<<< HEAD
                  "name": "AttachmentsConnection",
=======
                  "name": "CifUsersConnection",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
=======
=======
                  "name": "AttachmentsConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
<<<<<<< HEAD
              "name": "projectsByUpdatedBy",
              "description": "Reads and enables pagination through a set of `Project`.",
=======
=======
>>>>>>> refactor: update schema & reorder sqitch plan
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
          "name": "CifUserCifUsersByCifUserCreatedByAndDeletedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `CifUser`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `CifUser`, and the cursor to aid in pagination.",
=======
<<<<<<< HEAD
          "name": "CifUserCifUsersByAttachmentDeletedByAndCreatedByManyToManyConnection",
=======
<<<<<<< HEAD
          "name": "CifUserCifUsersByAttachmentDeletedByAndUpdatedByManyToManyConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
          "description": "A connection to a list of `CifUser` values, with data from `Attachment`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `Attachment`, and the cursor to aid in pagination.",
=======
          "name": "CifUserCifUsersByCifUserCreatedByAndUpdatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `CifUser`.",
=======
          "name": "CifUserCifUsersByAttachmentDeletedByAndCreatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `Attachment`.",
>>>>>>> refactor: update schema & reorder sqitch plan
          "fields": [
            {
              "name": "edges",
<<<<<<< HEAD
              "description": "A list of edges which contains the `CifUser`, info from the `CifUser`, and the cursor to aid in pagination.",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
              "description": "A list of edges which contains the `CifUser`, info from the `Attachment`, and the cursor to aid in pagination.",
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                      "name": "CifUserCifUsersByCifUserCreatedByAndDeletedByManyToManyEdge",
=======
<<<<<<< HEAD
                      "name": "CifUserCifUsersByAttachmentDeletedByAndCreatedByManyToManyEdge",
=======
=======
>>>>>>> refactor: update schema & reorder sqitch plan
<<<<<<< HEAD
                      "name": "CifUserCifUsersByAttachmentDeletedByAndUpdatedByManyToManyEdge",
=======
                      "name": "CifUserCifUsersByCifUserCreatedByAndUpdatedByManyToManyEdge",
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
=======
=======
                      "name": "CifUserCifUsersByAttachmentDeletedByAndCreatedByManyToManyEdge",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
          "name": "CifUserCifUsersByCifUserCreatedByAndDeletedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `CifUser`.",
          "fields": [
            {
              "name": "cifUsersByDeletedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
=======
<<<<<<< HEAD
          "name": "CifUserCifUsersByAttachmentDeletedByAndCreatedByManyToManyEdge",
=======
<<<<<<< HEAD
          "name": "CifUserCifUsersByAttachmentDeletedByAndUpdatedByManyToManyEdge",
>>>>>>> refactor: update schema & reorder sqitch plan
          "description": "A `CifUser` edge in the connection, with data from `Attachment`.",
          "fields": [
            {
              "name": "attachmentsByUpdatedBy",
              "description": "Reads and enables pagination through a set of `Attachment`.",
=======
          "name": "CifUserCifUsersByCifUserCreatedByAndUpdatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `CifUser`.",
          "fields": [
            {
              "name": "cifUsersByUpdatedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
=======
=======
          "name": "CifUserCifUsersByAttachmentDeletedByAndCreatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `Attachment`.",
          "fields": [
            {
              "name": "attachmentsByCreatedBy",
              "description": "Reads and enables pagination through a set of `Attachment`.",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                    "name": "CifUserCondition",
=======
<<<<<<< HEAD
                    "name": "AttachmentCondition",
=======
<<<<<<< HEAD
                    "name": "ProjectCondition",
>>>>>>> refactor: update schema & reorder sqitch plan
=======
<<<<<<< HEAD
                    "name": "AttachmentCondition",
=======
                    "name": "CifUserCondition",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
=======
=======
                    "name": "AttachmentCondition",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                    "name": "CifUserFilter",
=======
<<<<<<< HEAD
                    "name": "AttachmentFilter",
=======
<<<<<<< HEAD
                    "name": "ProjectFilter",
>>>>>>> refactor: update schema & reorder sqitch plan
=======
<<<<<<< HEAD
                    "name": "AttachmentFilter",
=======
                    "name": "CifUserFilter",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
=======
=======
                    "name": "AttachmentFilter",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
<<<<<<< HEAD
<<<<<<< HEAD
                  "description": "The method to use when ordering `CifUser`.",
=======
<<<<<<< HEAD
                  "description": "The method to use when ordering `Attachment`.",
=======
<<<<<<< HEAD
                  "description": "The method to use when ordering `Project`.",
>>>>>>> refactor: update schema & reorder sqitch plan
=======
<<<<<<< HEAD
                  "description": "The method to use when ordering `Attachment`.",
=======
                  "description": "The method to use when ordering `CifUser`.",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
=======
=======
                  "description": "The method to use when ordering `Attachment`.",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
<<<<<<< HEAD
<<<<<<< HEAD
                        "name": "CifUsersOrderBy",
=======
<<<<<<< HEAD
                        "name": "AttachmentsOrderBy",
=======
<<<<<<< HEAD
                        "name": "ProjectsOrderBy",
>>>>>>> refactor: update schema & reorder sqitch plan
=======
<<<<<<< HEAD
                        "name": "AttachmentsOrderBy",
=======
                        "name": "CifUsersOrderBy",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
=======
=======
                        "name": "AttachmentsOrderBy",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                  "name": "CifUsersConnection",
=======
<<<<<<< HEAD
                  "name": "AttachmentsConnection",
=======
<<<<<<< HEAD
                  "name": "ProjectsConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
=======
<<<<<<< HEAD
                  "name": "AttachmentsConnection",
=======
                  "name": "CifUsersConnection",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
=======
=======
                  "name": "AttachmentsConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "rowId",
              "description": "Unique ID for the user",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "updated at timestamp",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Datetime",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedBy",
              "description": "updated by user id",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "uuid",
              "description": "Universally Unique ID for the user, defined by the single sign-on provider",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "UUID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
          "name": "CifUserCifUsersByCifUserCreatedByAndUpdatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `CifUser`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `CifUser`, and the cursor to aid in pagination.",
=======
<<<<<<< HEAD
          "name": "CifUserCifUsersByAttachmentDeletedByAndUpdatedByManyToManyConnection",
=======
<<<<<<< HEAD
          "name": "CifUserCifUsersByAttachmentCreatedByAndDeletedByManyToManyConnection",
=======
<<<<<<< HEAD
          "name": "CifUserCifUsersByAttachmentUpdatedByAndCreatedByManyToManyConnection",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> refactor: update schema & reorder sqitch plan
          "description": "A connection to a list of `CifUser` values, with data from `Attachment`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `Attachment`, and the cursor to aid in pagination.",
<<<<<<< HEAD
=======
=======
          "name": "CifUserCifUsersByCifUserDeletedByAndCreatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `CifUser`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `CifUser`, and the cursor to aid in pagination.",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
=======
=======
          "name": "CifUserCifUsersByAttachmentDeletedByAndUpdatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `Attachment`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `Attachment`, and the cursor to aid in pagination.",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                      "name": "CifUserCifUsersByCifUserCreatedByAndUpdatedByManyToManyEdge",
=======
<<<<<<< HEAD
                      "name": "CifUserCifUsersByAttachmentDeletedByAndUpdatedByManyToManyEdge",
=======
<<<<<<< HEAD
                      "name": "CifUserCifUsersByAttachmentCreatedByAndDeletedByManyToManyEdge",
>>>>>>> refactor: update schema & reorder sqitch plan
=======
<<<<<<< HEAD
                      "name": "CifUserCifUsersByAttachmentUpdatedByAndCreatedByManyToManyEdge",
=======
                      "name": "CifUserCifUsersByCifUserDeletedByAndCreatedByManyToManyEdge",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
=======
=======
                      "name": "CifUserCifUsersByAttachmentDeletedByAndUpdatedByManyToManyEdge",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
          "name": "CifUserCifUsersByCifUserCreatedByAndUpdatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `CifUser`.",
          "fields": [
            {
              "name": "cifUsersByUpdatedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
=======
<<<<<<< HEAD
          "name": "CifUserCifUsersByAttachmentDeletedByAndUpdatedByManyToManyEdge",
=======
<<<<<<< HEAD
          "name": "CifUserCifUsersByAttachmentCreatedByAndDeletedByManyToManyEdge",
>>>>>>> refactor: update schema & reorder sqitch plan
          "description": "A `CifUser` edge in the connection, with data from `Attachment`.",
          "fields": [
            {
              "name": "attachmentsByDeletedBy",
              "description": "Reads and enables pagination through a set of `Attachment`.",
=======
<<<<<<< HEAD
          "name": "CifUserCifUsersByAttachmentUpdatedByAndCreatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `Attachment`.",
          "fields": [
            {
              "name": "attachmentsByCreatedBy",
              "description": "Reads and enables pagination through a set of `Attachment`.",
=======
          "name": "CifUserCifUsersByCifUserDeletedByAndCreatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `CifUser`.",
          "fields": [
            {
              "name": "cifUsersByCreatedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
=======
=======
          "name": "CifUserCifUsersByAttachmentDeletedByAndUpdatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `Attachment`.",
          "fields": [
            {
              "name": "attachmentsByUpdatedBy",
              "description": "Reads and enables pagination through a set of `Attachment`.",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                    "name": "CifUserCondition",
=======
=======
>>>>>>> refactor: update schema & reorder sqitch plan
<<<<<<< HEAD
                    "name": "AttachmentCondition",
=======
<<<<<<< HEAD
                    "name": "AttachmentCondition",
=======
                    "name": "CifUserCondition",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
=======
=======
                    "name": "AttachmentCondition",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                    "name": "CifUserFilter",
=======
=======
>>>>>>> refactor: update schema & reorder sqitch plan
<<<<<<< HEAD
                    "name": "AttachmentFilter",
=======
<<<<<<< HEAD
                    "name": "AttachmentFilter",
=======
                    "name": "CifUserFilter",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
=======
=======
                    "name": "AttachmentFilter",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
<<<<<<< HEAD
<<<<<<< HEAD
                  "description": "The method to use when ordering `CifUser`.",
=======
=======
>>>>>>> refactor: update schema & reorder sqitch plan
<<<<<<< HEAD
                  "description": "The method to use when ordering `Attachment`.",
=======
<<<<<<< HEAD
                  "description": "The method to use when ordering `Attachment`.",
=======
                  "description": "The method to use when ordering `CifUser`.",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
=======
=======
                  "description": "The method to use when ordering `Attachment`.",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
<<<<<<< HEAD
<<<<<<< HEAD
                        "name": "CifUsersOrderBy",
=======
=======
>>>>>>> refactor: update schema & reorder sqitch plan
<<<<<<< HEAD
                        "name": "AttachmentsOrderBy",
=======
<<<<<<< HEAD
                        "name": "AttachmentsOrderBy",
=======
                        "name": "CifUsersOrderBy",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
=======
=======
                        "name": "AttachmentsOrderBy",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                  "name": "CifUsersConnection",
=======
=======
>>>>>>> refactor: update schema & reorder sqitch plan
<<<<<<< HEAD
                  "name": "AttachmentsConnection",
=======
<<<<<<< HEAD
                  "name": "AttachmentsConnection",
=======
                  "name": "CifUsersConnection",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
=======
=======
                  "name": "AttachmentsConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
          "name": "CifUserCifUsersByCifUserDeletedByAndCreatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `CifUser`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `CifUser`, and the cursor to aid in pagination.",
=======
<<<<<<< HEAD
=======
<<<<<<< HEAD
          "name": "CifUserCifUsersByAttachmentCreatedByAndUpdatedByManyToManyConnection",
=======
<<<<<<< HEAD
          "name": "CifUserCifUsersByAttachmentUpdatedByAndDeletedByManyToManyConnection",
>>>>>>> chore: add basic SelectOperator component
=======
>>>>>>> refactor: update schema & reorder sqitch plan
          "name": "CifUserCifUsersByAttachmentUpdatedByAndCreatedByManyToManyConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
          "description": "A connection to a list of `CifUser` values, with data from `Attachment`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `Attachment`, and the cursor to aid in pagination.",
<<<<<<< HEAD
<<<<<<< HEAD
=======
=======
          "name": "CifUserCifUsersByCifUserDeletedByAndUpdatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `CifUser`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `CifUser`, and the cursor to aid in pagination.",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
=======
=======
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                      "name": "CifUserCifUsersByCifUserDeletedByAndCreatedByManyToManyEdge",
=======
<<<<<<< HEAD
                      "name": "CifUserCifUsersByAttachmentUpdatedByAndCreatedByManyToManyEdge",
=======
<<<<<<< HEAD
                      "name": "CifUserCifUsersByAttachmentCreatedByAndUpdatedByManyToManyEdge",
>>>>>>> refactor: update schema & reorder sqitch plan
=======
<<<<<<< HEAD
                      "name": "CifUserCifUsersByAttachmentUpdatedByAndDeletedByManyToManyEdge",
=======
                      "name": "CifUserCifUsersByCifUserDeletedByAndUpdatedByManyToManyEdge",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
=======
=======
                      "name": "CifUserCifUsersByAttachmentUpdatedByAndCreatedByManyToManyEdge",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
          "name": "CifUserCifUsersByCifUserDeletedByAndCreatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `CifUser`.",
          "fields": [
            {
              "name": "cifUsersByCreatedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
=======
<<<<<<< HEAD
          "name": "CifUserCifUsersByAttachmentUpdatedByAndCreatedByManyToManyEdge",
=======
<<<<<<< HEAD
          "name": "CifUserCifUsersByAttachmentCreatedByAndUpdatedByManyToManyEdge",
>>>>>>> refactor: update schema & reorder sqitch plan
          "description": "A `CifUser` edge in the connection, with data from `Attachment`.",
          "fields": [
            {
              "name": "attachmentsByUpdatedBy",
              "description": "Reads and enables pagination through a set of `Attachment`.",
=======
<<<<<<< HEAD
          "name": "CifUserCifUsersByAttachmentUpdatedByAndDeletedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `Attachment`.",
          "fields": [
            {
              "name": "attachmentsByDeletedBy",
              "description": "Reads and enables pagination through a set of `Attachment`.",
=======
          "name": "CifUserCifUsersByCifUserDeletedByAndUpdatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `CifUser`.",
          "fields": [
            {
              "name": "cifUsersByUpdatedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
=======
=======
          "name": "CifUserCifUsersByAttachmentUpdatedByAndCreatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `Attachment`.",
          "fields": [
            {
              "name": "attachmentsByCreatedBy",
              "description": "Reads and enables pagination through a set of `Attachment`.",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                    "name": "CifUserCondition",
=======
=======
>>>>>>> refactor: update schema & reorder sqitch plan
<<<<<<< HEAD
                    "name": "AttachmentCondition",
=======
<<<<<<< HEAD
                    "name": "AttachmentCondition",
=======
                    "name": "CifUserCondition",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
=======
=======
                    "name": "AttachmentCondition",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                    "name": "CifUserFilter",
=======
=======
>>>>>>> refactor: update schema & reorder sqitch plan
<<<<<<< HEAD
                    "name": "AttachmentFilter",
=======
<<<<<<< HEAD
                    "name": "AttachmentFilter",
=======
                    "name": "CifUserFilter",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
=======
=======
                    "name": "AttachmentFilter",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
<<<<<<< HEAD
<<<<<<< HEAD
                  "description": "The method to use when ordering `CifUser`.",
=======
=======
>>>>>>> refactor: update schema & reorder sqitch plan
<<<<<<< HEAD
                  "description": "The method to use when ordering `Attachment`.",
=======
<<<<<<< HEAD
                  "description": "The method to use when ordering `Attachment`.",
=======
                  "description": "The method to use when ordering `CifUser`.",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
=======
=======
                  "description": "The method to use when ordering `Attachment`.",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
<<<<<<< HEAD
<<<<<<< HEAD
                        "name": "CifUsersOrderBy",
=======
=======
>>>>>>> refactor: update schema & reorder sqitch plan
<<<<<<< HEAD
                        "name": "AttachmentsOrderBy",
=======
<<<<<<< HEAD
                        "name": "AttachmentsOrderBy",
=======
                        "name": "CifUsersOrderBy",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
=======
=======
                        "name": "AttachmentsOrderBy",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                  "name": "CifUsersConnection",
=======
=======
>>>>>>> refactor: update schema & reorder sqitch plan
<<<<<<< HEAD
                  "name": "AttachmentsConnection",
=======
<<<<<<< HEAD
                  "name": "AttachmentsConnection",
=======
                  "name": "CifUsersConnection",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
=======
=======
                  "name": "AttachmentsConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
<<<<<<< HEAD
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
          "name": "CifUserCifUsersByCifUserDeletedByAndUpdatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `CifUser`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `CifUser`, and the cursor to aid in pagination.",
=======
<<<<<<< HEAD
          "name": "CifUserCifUsersByAttachmentUpdatedByAndDeletedByManyToManyConnection",
=======
<<<<<<< HEAD
          "name": "CifUserCifUsersByAttachmentDeletedByAndCreatedByManyToManyConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
          "description": "A connection to a list of `CifUser` values, with data from `Attachment`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `Attachment`, and the cursor to aid in pagination.",
=======
          "name": "CifUserCifUsersByChangeStatusCreatedByAndDeletedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `ChangeStatus`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `ChangeStatus`, and the cursor to aid in pagination.",
=======
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserCifUsersByCifUserUpdatedByAndCreatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `CifUser`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `CifUser`, and the cursor to aid in pagination.",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
=======
=======
          "name": "CifUserCifUsersByAttachmentUpdatedByAndDeletedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `Attachment`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `Attachment`, and the cursor to aid in pagination.",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                      "name": "CifUserCifUsersByCifUserDeletedByAndUpdatedByManyToManyEdge",
=======
<<<<<<< HEAD
                      "name": "CifUserCifUsersByAttachmentUpdatedByAndDeletedByManyToManyEdge",
=======
<<<<<<< HEAD
                      "name": "CifUserCifUsersByAttachmentDeletedByAndCreatedByManyToManyEdge",
>>>>>>> refactor: update schema & reorder sqitch plan
=======
<<<<<<< HEAD
                      "name": "CifUserCifUsersByChangeStatusCreatedByAndDeletedByManyToManyEdge",
=======
                      "name": "CifUserCifUsersByCifUserUpdatedByAndCreatedByManyToManyEdge",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
=======
=======
                      "name": "CifUserCifUsersByAttachmentUpdatedByAndDeletedByManyToManyEdge",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
          "name": "CifUserCifUsersByCifUserDeletedByAndUpdatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `CifUser`.",
          "fields": [
            {
              "name": "cifUsersByUpdatedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
=======
<<<<<<< HEAD
          "name": "CifUserCifUsersByAttachmentUpdatedByAndDeletedByManyToManyEdge",
=======
<<<<<<< HEAD
          "name": "CifUserCifUsersByAttachmentDeletedByAndCreatedByManyToManyEdge",
>>>>>>> refactor: update schema & reorder sqitch plan
          "description": "A `CifUser` edge in the connection, with data from `Attachment`.",
          "fields": [
            {
              "name": "attachmentsByCreatedBy",
              "description": "Reads and enables pagination through a set of `Attachment`.",
=======
<<<<<<< HEAD
          "name": "CifUserCifUsersByChangeStatusCreatedByAndDeletedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `ChangeStatus`.",
          "fields": [
            {
              "name": "changeStatusesByDeletedBy",
              "description": "Reads and enables pagination through a set of `ChangeStatus`.",
=======
          "name": "CifUserCifUsersByCifUserUpdatedByAndCreatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `CifUser`.",
          "fields": [
            {
              "name": "cifUsersByCreatedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
=======
=======
          "name": "CifUserCifUsersByAttachmentUpdatedByAndDeletedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `Attachment`.",
          "fields": [
            {
              "name": "attachmentsByDeletedBy",
              "description": "Reads and enables pagination through a set of `Attachment`.",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                    "name": "CifUserCondition",
=======
=======
>>>>>>> refactor: update schema & reorder sqitch plan
<<<<<<< HEAD
                    "name": "AttachmentCondition",
=======
<<<<<<< HEAD
                    "name": "ChangeStatusCondition",
=======
                    "name": "CifUserCondition",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
=======
=======
                    "name": "AttachmentCondition",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                    "name": "CifUserFilter",
=======
=======
>>>>>>> refactor: update schema & reorder sqitch plan
<<<<<<< HEAD
                    "name": "AttachmentFilter",
=======
<<<<<<< HEAD
                    "name": "ChangeStatusFilter",
=======
                    "name": "CifUserFilter",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
=======
=======
                    "name": "AttachmentFilter",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
<<<<<<< HEAD
<<<<<<< HEAD
                  "description": "The method to use when ordering `CifUser`.",
=======
=======
>>>>>>> refactor: update schema & reorder sqitch plan
<<<<<<< HEAD
                  "description": "The method to use when ordering `Attachment`.",
=======
<<<<<<< HEAD
                  "description": "The method to use when ordering `ChangeStatus`.",
=======
                  "description": "The method to use when ordering `CifUser`.",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
=======
=======
                  "description": "The method to use when ordering `Attachment`.",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
<<<<<<< HEAD
<<<<<<< HEAD
                        "name": "CifUsersOrderBy",
=======
=======
>>>>>>> refactor: update schema & reorder sqitch plan
<<<<<<< HEAD
                        "name": "AttachmentsOrderBy",
=======
<<<<<<< HEAD
                        "name": "ChangeStatusesOrderBy",
=======
                        "name": "CifUsersOrderBy",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
=======
=======
                        "name": "AttachmentsOrderBy",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                  "name": "CifUsersConnection",
=======
=======
>>>>>>> refactor: update schema & reorder sqitch plan
<<<<<<< HEAD
                  "name": "AttachmentsConnection",
=======
<<<<<<< HEAD
                  "name": "ChangeStatusesConnection",
=======
                  "name": "CifUsersConnection",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
=======
=======
                  "name": "AttachmentsConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
          "name": "CifUserCifUsersByCifUserUpdatedByAndCreatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `CifUser`.",
=======
<<<<<<< HEAD
=======
<<<<<<< HEAD
          "name": "CifUserCifUsersByAttachmentDeletedByAndUpdatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `Attachment`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `Attachment`, and the cursor to aid in pagination.",
=======
<<<<<<< HEAD
          "name": "CifUserCifUsersByChangeStatusCreatedByAndUpdatedByManyToManyConnection",
=======
>>>>>>> refactor: update schema & reorder sqitch plan
          "name": "CifUserCifUsersByChangeStatusCreatedByAndDeletedByManyToManyConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
          "description": "A connection to a list of `CifUser` values, with data from `ChangeStatus`.",
>>>>>>> chore: add basic SelectOperator component
          "fields": [
            {
              "name": "edges",
<<<<<<< HEAD
              "description": "A list of edges which contains the `CifUser`, info from the `CifUser`, and the cursor to aid in pagination.",
=======
              "description": "A list of edges which contains the `CifUser`, info from the `ChangeStatus`, and the cursor to aid in pagination.",
<<<<<<< HEAD
=======
          "name": "CifUserCifUsersByCifUserUpdatedByAndDeletedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `CifUser`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `CifUser`, and the cursor to aid in pagination.",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                      "name": "CifUserCifUsersByCifUserUpdatedByAndCreatedByManyToManyEdge",
=======
                      "name": "CifUserCifUsersByChangeStatusCreatedByAndDeletedByManyToManyEdge",
>>>>>>> chore: add basic SelectOperator component
=======
<<<<<<< HEAD
                      "name": "CifUserCifUsersByAttachmentDeletedByAndUpdatedByManyToManyEdge",
=======
<<<<<<< HEAD
                      "name": "CifUserCifUsersByChangeStatusCreatedByAndUpdatedByManyToManyEdge",
=======
                      "name": "CifUserCifUsersByCifUserUpdatedByAndDeletedByManyToManyEdge",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
                      "name": "CifUserCifUsersByChangeStatusCreatedByAndDeletedByManyToManyEdge",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                      "ofType": null
                    }
                  }
                }
<<<<<<< HEAD
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
=======
>>>>>>> refactor: update schema & reorder sqitch plan
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
=======
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
<<<<<<< HEAD
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
          "name": "CifUserCifUsersByCifUserUpdatedByAndCreatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `CifUser`.",
          "fields": [
            {
              "name": "cifUsersByCreatedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
=======
          "name": "CifUserCifUsersByChangeStatusCreatedByAndDeletedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `ChangeStatus`.",
=======
          "name": "CifUserCifUsersByAttachmentDeletedByAndUpdatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `Attachment`.",
>>>>>>> refactor: update schema & reorder sqitch plan
          "fields": [
            {
              "name": "attachmentsByUpdatedBy",
              "description": "Reads and enables pagination through a set of `Attachment`.",
=======
<<<<<<< HEAD
          "name": "CifUserCifUsersByChangeStatusCreatedByAndUpdatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `ChangeStatus`.",
          "fields": [
            {
              "name": "changeStatusesByUpdatedBy",
              "description": "Reads and enables pagination through a set of `ChangeStatus`.",
=======
          "name": "CifUserCifUsersByCifUserUpdatedByAndDeletedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `CifUser`.",
          "fields": [
            {
              "name": "cifUsersByDeletedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                    "name": "CifUserCondition",
=======
                    "name": "AttachmentCondition",
>>>>>>> refactor: update schema & reorder sqitch plan
=======
<<<<<<< HEAD
                    "name": "ChangeStatusCondition",
=======
                    "name": "CifUserCondition",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                    "name": "CifUserFilter",
=======
<<<<<<< HEAD
                    "name": "ChangeStatusFilter",
=======
                    "name": "OperatorFilter",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
<<<<<<< HEAD
                  "description": "The method to use when ordering `CifUser`.",
=======
<<<<<<< HEAD
                  "description": "The method to use when ordering `ChangeStatus`.",
=======
                  "description": "The method to use when ordering `Operator`.",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
<<<<<<< HEAD
                        "name": "CifUsersOrderBy",
=======
<<<<<<< HEAD
                        "name": "ChangeStatusesOrderBy",
=======
                        "name": "OperatorsOrderBy",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
<<<<<<< HEAD
                  "name": "CifUsersConnection",
=======
<<<<<<< HEAD
                  "name": "ChangeStatusesConnection",
=======
                    "name": "AttachmentFilter",
=======
<<<<<<< HEAD
                    "name": "ChangeStatusFilter",
>>>>>>> refactor: update schema & reorder sqitch plan
=======
                    "name": "CifUserFilter",
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
          "name": "CifUserCifUsersByCifUserUpdatedByAndDeletedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `CifUser`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `CifUser`, and the cursor to aid in pagination.",
=======
<<<<<<< HEAD
          "name": "CifUserCifUsersByChangeStatusCreatedByAndUpdatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `ChangeStatus`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `ChangeStatus`, and the cursor to aid in pagination.",
=======
          "name": "CifUserCifUsersByOperatorCreatedByAndUpdatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `Operator`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `Operator`, and the cursor to aid in pagination.",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
<<<<<<< HEAD
                      "name": "CifUserCifUsersByCifUserUpdatedByAndDeletedByManyToManyEdge",
=======
<<<<<<< HEAD
                      "name": "CifUserCifUsersByChangeStatusCreatedByAndUpdatedByManyToManyEdge",
=======
                      "name": "CifUserCifUsersByOperatorCreatedByAndUpdatedByManyToManyEdge",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
=======
>>>>>>> chore: add basic SelectOperator component
=======
>>>>>>> refactor: update schema & reorder sqitch plan
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
>>>>>>> refactor: update schema & reorder sqitch plan
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
          "name": "CifUserCifUsersByCifUserUpdatedByAndDeletedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `CifUser`.",
          "fields": [
            {
              "name": "cifUsersByDeletedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
=======
<<<<<<< HEAD
          "name": "CifUserCifUsersByChangeStatusCreatedByAndUpdatedByManyToManyEdge",
=======
          "name": "CifUserCifUsersByChangeStatusCreatedByAndDeletedByManyToManyEdge",
>>>>>>> refactor: update schema & reorder sqitch plan
          "description": "A `CifUser` edge in the connection, with data from `ChangeStatus`.",
          "fields": [
            {
              "name": "changeStatusesByDeletedBy",
              "description": "Reads and enables pagination through a set of `ChangeStatus`.",
<<<<<<< HEAD
=======
          "name": "CifUserCifUsersByOperatorCreatedByAndUpdatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `Operator`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "operatorsByUpdatedBy",
              "description": "Reads and enables pagination through a set of `Operator`.",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                    "name": "CifUserCondition",
=======
<<<<<<< HEAD
                    "name": "ChangeStatusCondition",
=======
                    "name": "OperatorCondition",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
                    "name": "ChangeStatusCondition",
>>>>>>> refactor: update schema & reorder sqitch plan
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                    "name": "CifUserFilter",
=======
<<<<<<< HEAD
                    "name": "ChangeStatusFilter",
=======
                    "name": "OperatorFilter",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
                    "name": "ChangeStatusFilter",
>>>>>>> refactor: update schema & reorder sqitch plan
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
<<<<<<< HEAD
<<<<<<< HEAD
                  "description": "The method to use when ordering `CifUser`.",
=======
<<<<<<< HEAD
                  "description": "The method to use when ordering `Attachment`.",
>>>>>>> refactor: update schema & reorder sqitch plan
=======
<<<<<<< HEAD
                  "description": "The method to use when ordering `ChangeStatus`.",
=======
                  "description": "The method to use when ordering `CifUser`.",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
=======
=======
                  "description": "The method to use when ordering `ChangeStatus`.",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
<<<<<<< HEAD
<<<<<<< HEAD
                        "name": "CifUsersOrderBy",
=======
<<<<<<< HEAD
                        "name": "AttachmentsOrderBy",
>>>>>>> refactor: update schema & reorder sqitch plan
=======
<<<<<<< HEAD
                        "name": "ChangeStatusesOrderBy",
=======
                        "name": "CifUsersOrderBy",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
=======
=======
                        "name": "ChangeStatusesOrderBy",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                  "name": "CifUsersConnection",
=======
<<<<<<< HEAD
                  "name": "AttachmentsConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
=======
<<<<<<< HEAD
                  "name": "ChangeStatusesConnection",
=======
                  "name": "CifUsersConnection",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
=======
=======
                  "name": "ChangeStatusesConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> refactor: update schema & reorder sqitch plan
            },
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
          "name": "CifUserCifUsersByFormChangeCreatedByAndDeletedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `FormChange`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `FormChange`, and the cursor to aid in pagination.",
=======
<<<<<<< HEAD
=======
<<<<<<< HEAD
          "name": "CifUserCifUsersByAttachmentUpdatedByAndCreatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `Attachment`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `Attachment`, and the cursor to aid in pagination.",
=======
>>>>>>> refactor: update schema & reorder sqitch plan
          "name": "CifUserCifUsersByChangeStatusDeletedByAndCreatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `ChangeStatus`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `ChangeStatus`, and the cursor to aid in pagination.",
>>>>>>> chore: add basic SelectOperator component
=======
          "name": "CifUserCifUsersByChangeStatusCreatedByAndUpdatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `ChangeStatus`.",
          "fields": [
            {
              "name": "edges",
<<<<<<< HEAD
              "description": "A list of edges which contains the `CifUser`, info from the `Operator`, and the cursor to aid in pagination.",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
              "description": "A list of edges which contains the `CifUser`, info from the `ChangeStatus`, and the cursor to aid in pagination.",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                      "name": "CifUserCifUsersByFormChangeCreatedByAndDeletedByManyToManyEdge",
=======
<<<<<<< HEAD
                      "name": "CifUserCifUsersByChangeStatusDeletedByAndCreatedByManyToManyEdge",
=======
<<<<<<< HEAD
                      "name": "CifUserCifUsersByAttachmentUpdatedByAndCreatedByManyToManyEdge",
>>>>>>> refactor: update schema & reorder sqitch plan
=======
                      "name": "CifUserCifUsersByChangeStatusDeletedByAndCreatedByManyToManyEdge",
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
=======
=======
                      "name": "CifUserCifUsersByChangeStatusCreatedByAndUpdatedByManyToManyEdge",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
          "name": "CifUserCifUsersByFormChangeCreatedByAndDeletedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `FormChange`.",
          "fields": [
            {
=======
<<<<<<< HEAD
=======
<<<<<<< HEAD
          "name": "CifUserCifUsersByAttachmentUpdatedByAndCreatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `Attachment`.",
          "fields": [
            {
              "name": "attachmentsByCreatedBy",
              "description": "Reads and enables pagination through a set of `Attachment`.",
=======
>>>>>>> refactor: update schema & reorder sqitch plan
          "name": "CifUserCifUsersByChangeStatusDeletedByAndCreatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `ChangeStatus`.",
          "fields": [
            {
              "name": "changeStatusesByCreatedBy",
              "description": "Reads and enables pagination through a set of `ChangeStatus`.",
>>>>>>> chore: add basic SelectOperator component
=======
          "name": "CifUserCifUsersByChangeStatusCreatedByAndUpdatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `ChangeStatus`.",
          "fields": [
            {
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "formChangesByDeletedBy",
              "description": "Reads and enables pagination through a set of `FormChange`.",
=======
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "operatorsByCreatedBy",
              "description": "Reads and enables pagination through a set of `Operator`.",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
              "name": "changeStatusesByUpdatedBy",
              "description": "Reads and enables pagination through a set of `ChangeStatus`.",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                    "name": "FormChangeCondition",
=======
<<<<<<< HEAD
                    "name": "ChangeStatusCondition",
=======
<<<<<<< HEAD
                    "name": "AttachmentCondition",
>>>>>>> refactor: update schema & reorder sqitch plan
=======
                    "name": "ChangeStatusCondition",
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
=======
=======
                    "name": "ChangeStatusCondition",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                    "name": "FormChangeFilter",
=======
<<<<<<< HEAD
                    "name": "ChangeStatusFilter",
=======
<<<<<<< HEAD
                    "name": "AttachmentFilter",
>>>>>>> refactor: update schema & reorder sqitch plan
=======
                    "name": "ChangeStatusFilter",
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
=======
=======
                    "name": "ChangeStatusFilter",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
<<<<<<< HEAD
<<<<<<< HEAD
                  "description": "The method to use when ordering `FormChange`.",
=======
<<<<<<< HEAD
                  "description": "The method to use when ordering `ChangeStatus`.",
=======
<<<<<<< HEAD
                  "description": "The method to use when ordering `Attachment`.",
>>>>>>> refactor: update schema & reorder sqitch plan
=======
                  "description": "The method to use when ordering `ChangeStatus`.",
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
=======
=======
                  "description": "The method to use when ordering `ChangeStatus`.",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
<<<<<<< HEAD
<<<<<<< HEAD
                        "name": "FormChangesOrderBy",
=======
<<<<<<< HEAD
                        "name": "ChangeStatusesOrderBy",
=======
<<<<<<< HEAD
                        "name": "AttachmentsOrderBy",
>>>>>>> refactor: update schema & reorder sqitch plan
=======
                        "name": "ChangeStatusesOrderBy",
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
=======
=======
                        "name": "ChangeStatusesOrderBy",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                  "name": "FormChangesConnection",
=======
<<<<<<< HEAD
                  "name": "ChangeStatusesConnection",
=======
<<<<<<< HEAD
                  "name": "AttachmentsConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
=======
                  "name": "ChangeStatusesConnection",
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
=======
=======
                  "name": "ChangeStatusesConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
<<<<<<< HEAD
=======
>>>>>>> chore: add basic SelectOperator component
=======
>>>>>>> refactor: update schema & reorder sqitch plan
            },
            {
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
          "name": "CifUserCifUsersByFormChangeCreatedByAndUpdatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `FormChange`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `FormChange`, and the cursor to aid in pagination.",
=======
<<<<<<< HEAD
          "name": "CifUserCifUsersByChangeStatusDeletedByAndUpdatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `ChangeStatus`.",
=======
<<<<<<< HEAD
          "name": "CifUserCifUsersByAttachmentUpdatedByAndDeletedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `Attachment`.",
>>>>>>> refactor: update schema & reorder sqitch plan
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `Attachment`, and the cursor to aid in pagination.",
=======
<<<<<<< HEAD
          "name": "CifUserCifUsersByChangeStatusDeletedByAndUpdatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `ChangeStatus`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `ChangeStatus`, and the cursor to aid in pagination.",
=======
          "name": "CifUserCifUsersByOperatorCreatedByAndDeletedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `Operator`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `Operator`, and the cursor to aid in pagination.",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
=======
=======
          "name": "CifUserCifUsersByChangeStatusDeletedByAndCreatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `ChangeStatus`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `ChangeStatus`, and the cursor to aid in pagination.",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                      "name": "CifUserCifUsersByFormChangeCreatedByAndUpdatedByManyToManyEdge",
=======
<<<<<<< HEAD
                      "name": "CifUserCifUsersByAttachmentUpdatedByAndDeletedByManyToManyEdge",
>>>>>>> refactor: update schema & reorder sqitch plan
=======
<<<<<<< HEAD
                      "name": "CifUserCifUsersByChangeStatusDeletedByAndUpdatedByManyToManyEdge",
=======
                      "name": "CifUserCifUsersByOperatorCreatedByAndDeletedByManyToManyEdge",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
=======
=======
                      "name": "CifUserCifUsersByChangeStatusDeletedByAndCreatedByManyToManyEdge",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
<<<<<<< HEAD
=======
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
>>>>>>> chore: add basic SelectOperator component
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
<<<<<<< HEAD
                  "kind": "OBJECT",
                  "name": "PageInfo",
=======
                  "kind": "SCALAR",
                  "name": "Int",
>>>>>>> chore: add basic SelectOperator component
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
<<<<<<< HEAD
            },
            {
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
          "name": "CifUserCifUsersByFormChangeCreatedByAndUpdatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `FormChange`.",
          "fields": [
            {
=======
<<<<<<< HEAD
=======
<<<<<<< HEAD
          "name": "CifUserCifUsersByAttachmentUpdatedByAndDeletedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `Attachment`.",
          "fields": [
            {
              "name": "attachmentsByDeletedBy",
              "description": "Reads and enables pagination through a set of `Attachment`.",
=======
>>>>>>> refactor: update schema & reorder sqitch plan
          "name": "CifUserCifUsersByChangeStatusDeletedByAndUpdatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `ChangeStatus`.",
          "fields": [
            {
              "name": "changeStatusesByUpdatedBy",
              "description": "Reads and enables pagination through a set of `ChangeStatus`.",
>>>>>>> chore: add basic SelectOperator component
=======
          "name": "CifUserCifUsersByChangeStatusDeletedByAndCreatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `ChangeStatus`.",
          "fields": [
            {
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "formChangesByUpdatedBy",
              "description": "Reads and enables pagination through a set of `FormChange`.",
=======
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "operatorsByUpdatedBy",
              "description": "Reads and enables pagination through a set of `Operator`.",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
              "name": "changeStatusesByCreatedBy",
              "description": "Reads and enables pagination through a set of `ChangeStatus`.",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                    "name": "FormChangeCondition",
=======
<<<<<<< HEAD
                    "name": "ChangeStatusCondition",
=======
<<<<<<< HEAD
                    "name": "AttachmentCondition",
>>>>>>> refactor: update schema & reorder sqitch plan
=======
                    "name": "ChangeStatusCondition",
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
=======
=======
                    "name": "ChangeStatusCondition",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                    "name": "FormChangeFilter",
=======
<<<<<<< HEAD
                    "name": "ChangeStatusFilter",
=======
<<<<<<< HEAD
                    "name": "AttachmentFilter",
>>>>>>> refactor: update schema & reorder sqitch plan
=======
                    "name": "ChangeStatusFilter",
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
=======
=======
                    "name": "ChangeStatusFilter",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
<<<<<<< HEAD
<<<<<<< HEAD
                  "description": "The method to use when ordering `FormChange`.",
=======
<<<<<<< HEAD
                  "description": "The method to use when ordering `ChangeStatus`.",
=======
<<<<<<< HEAD
                  "description": "The method to use when ordering `Attachment`.",
>>>>>>> refactor: update schema & reorder sqitch plan
=======
                  "description": "The method to use when ordering `ChangeStatus`.",
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
=======
=======
                  "description": "The method to use when ordering `ChangeStatus`.",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
<<<<<<< HEAD
<<<<<<< HEAD
                        "name": "FormChangesOrderBy",
=======
<<<<<<< HEAD
                        "name": "ChangeStatusesOrderBy",
=======
<<<<<<< HEAD
                        "name": "AttachmentsOrderBy",
>>>>>>> refactor: update schema & reorder sqitch plan
=======
                        "name": "ChangeStatusesOrderBy",
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
=======
=======
                        "name": "ChangeStatusesOrderBy",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                  "name": "FormChangesConnection",
=======
<<<<<<< HEAD
                  "name": "ChangeStatusesConnection",
=======
<<<<<<< HEAD
                  "name": "AttachmentsConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
=======
                  "name": "ChangeStatusesConnection",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
                  "ofType": null
                }
=======
=======
                  "name": "ChangeStatusesConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
>>>>>>> refactor: update schema & reorder sqitch plan
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
          "name": "CifUserCifUsersByFormChangeDeletedByAndCreatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `FormChange`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `FormChange`, and the cursor to aid in pagination.",
=======
<<<<<<< HEAD
          "name": "CifUserCifUsersByChangeStatusUpdatedByAndCreatedByManyToManyConnection",
=======
<<<<<<< HEAD
          "name": "CifUserCifUsersByChangeStatusCreatedByAndDeletedByManyToManyConnection",
=======
          "name": "CifUserCifUsersByChangeStatusDeletedByAndUpdatedByManyToManyConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
          "description": "A connection to a list of `CifUser` values, with data from `ChangeStatus`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `ChangeStatus`, and the cursor to aid in pagination.",
<<<<<<< HEAD
=======
          "name": "CifUserCifUsersByOperatorUpdatedByAndCreatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `Operator`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `Operator`, and the cursor to aid in pagination.",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                      "name": "CifUserCifUsersByFormChangeDeletedByAndCreatedByManyToManyEdge",
=======
<<<<<<< HEAD
                      "name": "CifUserCifUsersByChangeStatusUpdatedByAndCreatedByManyToManyEdge",
=======
                      "name": "CifUserCifUsersByOperatorUpdatedByAndCreatedByManyToManyEdge",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
                      "name": "CifUserCifUsersByChangeStatusCreatedByAndDeletedByManyToManyEdge",
=======
                      "name": "CifUserCifUsersByChangeStatusDeletedByAndUpdatedByManyToManyEdge",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
=======
          "name": "CifUserCifUsersByOperatorCreatedByAndDeletedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `Operator`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
>>>>>>> chore: add basic SelectOperator component
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
>>>>>>> chore: add basic SelectOperator component
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
          "name": "CifUserCifUsersByFormChangeDeletedByAndCreatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `FormChange`.",
          "fields": [
            {
=======
<<<<<<< HEAD
          "name": "CifUserCifUsersByChangeStatusUpdatedByAndCreatedByManyToManyEdge",
=======
          "name": "CifUserCifUsersByChangeStatusCreatedByAndDeletedByManyToManyEdge",
>>>>>>> refactor: update schema & reorder sqitch plan
          "description": "A `CifUser` edge in the connection, with data from `ChangeStatus`.",
          "fields": [
            {
              "name": "changeStatusesByDeletedBy",
              "description": "Reads and enables pagination through a set of `ChangeStatus`.",
=======
<<<<<<< HEAD
          "name": "CifUserCifUsersByOperatorUpdatedByAndCreatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `Operator`.",
          "fields": [
            {
>>>>>>> chore: add basic SelectOperator component
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "formChangesByCreatedBy",
              "description": "Reads and enables pagination through a set of `FormChange`.",
=======
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "operatorsByCreatedBy",
              "description": "Reads and enables pagination through a set of `Operator`.",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
<<<<<<< HEAD
=======
              "name": "operatorsByDeletedBy",
              "description": "Reads and enables pagination through a set of `Operator`.",
>>>>>>> chore: add basic SelectOperator component
=======
          "name": "CifUserCifUsersByChangeStatusDeletedByAndUpdatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `ChangeStatus`.",
          "fields": [
            {
              "name": "changeStatusesByUpdatedBy",
              "description": "Reads and enables pagination through a set of `ChangeStatus`.",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                    "name": "FormChangeCondition",
=======
=======
>>>>>>> refactor: update schema & reorder sqitch plan
<<<<<<< HEAD
                    "name": "ChangeStatusCondition",
=======
                    "name": "OperatorCondition",
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
=======
=======
                    "name": "ChangeStatusCondition",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                    "name": "FormChangeFilter",
=======
=======
>>>>>>> refactor: update schema & reorder sqitch plan
<<<<<<< HEAD
                    "name": "ChangeStatusFilter",
=======
                    "name": "OperatorFilter",
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
=======
=======
                    "name": "ChangeStatusFilter",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
<<<<<<< HEAD
<<<<<<< HEAD
                  "description": "The method to use when ordering `FormChange`.",
=======
=======
>>>>>>> refactor: update schema & reorder sqitch plan
<<<<<<< HEAD
                  "description": "The method to use when ordering `ChangeStatus`.",
=======
                  "description": "The method to use when ordering `Operator`.",
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
=======
=======
                  "description": "The method to use when ordering `ChangeStatus`.",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
<<<<<<< HEAD
<<<<<<< HEAD
                        "name": "FormChangesOrderBy",
=======
=======
>>>>>>> refactor: update schema & reorder sqitch plan
<<<<<<< HEAD
                        "name": "ChangeStatusesOrderBy",
=======
                        "name": "OperatorsOrderBy",
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
=======
=======
                        "name": "ChangeStatusesOrderBy",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                  "name": "FormChangesConnection",
=======
=======
>>>>>>> refactor: update schema & reorder sqitch plan
<<<<<<< HEAD
                  "name": "ChangeStatusesConnection",
=======
                  "name": "OperatorsConnection",
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
=======
=======
                  "name": "ChangeStatusesConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
          "name": "CifUserCifUsersByFormChangeDeletedByAndUpdatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `FormChange`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `FormChange`, and the cursor to aid in pagination.",
=======
<<<<<<< HEAD
          "name": "CifUserCifUsersByChangeStatusUpdatedByAndDeletedByManyToManyConnection",
=======
<<<<<<< HEAD
          "name": "CifUserCifUsersByChangeStatusCreatedByAndUpdatedByManyToManyConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
          "description": "A connection to a list of `CifUser` values, with data from `ChangeStatus`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `ChangeStatus`, and the cursor to aid in pagination.",
=======
          "name": "CifUserCifUsersByOperatorCreatedByAndUpdatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `Operator`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `Operator`, and the cursor to aid in pagination.",
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
=======
=======
          "name": "CifUserCifUsersByChangeStatusUpdatedByAndCreatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `ChangeStatus`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `ChangeStatus`, and the cursor to aid in pagination.",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                      "name": "CifUserCifUsersByFormChangeDeletedByAndUpdatedByManyToManyEdge",
=======
<<<<<<< HEAD
                      "name": "CifUserCifUsersByChangeStatusUpdatedByAndDeletedByManyToManyEdge",
=======
<<<<<<< HEAD
                      "name": "CifUserCifUsersByChangeStatusCreatedByAndUpdatedByManyToManyEdge",
>>>>>>> refactor: update schema & reorder sqitch plan
=======
                      "name": "CifUserCifUsersByOperatorCreatedByAndUpdatedByManyToManyEdge",
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
=======
=======
                      "name": "CifUserCifUsersByChangeStatusUpdatedByAndCreatedByManyToManyEdge",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
          "name": "CifUserCifUsersByFormChangeDeletedByAndUpdatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `FormChange`.",
          "fields": [
            {
=======
<<<<<<< HEAD
          "name": "CifUserCifUsersByChangeStatusUpdatedByAndDeletedByManyToManyEdge",
=======
<<<<<<< HEAD
          "name": "CifUserCifUsersByChangeStatusCreatedByAndUpdatedByManyToManyEdge",
>>>>>>> refactor: update schema & reorder sqitch plan
          "description": "A `CifUser` edge in the connection, with data from `ChangeStatus`.",
          "fields": [
            {
              "name": "changeStatusesByUpdatedBy",
              "description": "Reads and enables pagination through a set of `ChangeStatus`.",
=======
          "name": "CifUserCifUsersByOperatorCreatedByAndUpdatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `Operator`.",
          "fields": [
            {
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
>>>>>>> refactor: update schema & reorder sqitch plan
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
<<<<<<< HEAD
<<<<<<< HEAD
=======
<<<<<<< HEAD
=======
=======
>>>>>>> refactor: update schema & reorder sqitch plan
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
>>>>>>> chore: add basic SelectOperator component
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
<<<<<<< HEAD
              "name": "formChangesByUpdatedBy",
              "description": "Reads and enables pagination through a set of `FormChange`.",
=======
              "name": "operatorsByDeletedBy",
              "description": "Reads and enables pagination through a set of `Operator`.",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
              "name": "operatorsByUpdatedBy",
              "description": "Reads and enables pagination through a set of `Operator`.",
>>>>>>> chore: add basic SelectOperator component
=======
          "name": "CifUserCifUsersByChangeStatusUpdatedByAndCreatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `ChangeStatus`.",
          "fields": [
            {
              "name": "changeStatusesByCreatedBy",
              "description": "Reads and enables pagination through a set of `ChangeStatus`.",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                    "name": "FormChangeCondition",
=======
=======
>>>>>>> refactor: update schema & reorder sqitch plan
<<<<<<< HEAD
                    "name": "ChangeStatusCondition",
=======
                    "name": "OperatorCondition",
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
=======
=======
                    "name": "ChangeStatusCondition",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                    "name": "FormChangeFilter",
=======
=======
>>>>>>> refactor: update schema & reorder sqitch plan
<<<<<<< HEAD
                    "name": "ChangeStatusFilter",
=======
                    "name": "OperatorFilter",
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
=======
=======
                    "name": "ChangeStatusFilter",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
<<<<<<< HEAD
<<<<<<< HEAD
                  "description": "The method to use when ordering `FormChange`.",
=======
=======
>>>>>>> refactor: update schema & reorder sqitch plan
<<<<<<< HEAD
                  "description": "The method to use when ordering `ChangeStatus`.",
=======
                  "description": "The method to use when ordering `Operator`.",
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
=======
=======
                  "description": "The method to use when ordering `ChangeStatus`.",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
<<<<<<< HEAD
<<<<<<< HEAD
                        "name": "FormChangesOrderBy",
=======
=======
>>>>>>> refactor: update schema & reorder sqitch plan
<<<<<<< HEAD
                        "name": "ChangeStatusesOrderBy",
=======
                        "name": "OperatorsOrderBy",
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
=======
=======
                        "name": "ChangeStatusesOrderBy",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                  "name": "FormChangesConnection",
=======
=======
>>>>>>> refactor: update schema & reorder sqitch plan
<<<<<<< HEAD
                  "name": "ChangeStatusesConnection",
=======
                  "name": "OperatorsConnection",
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
=======
=======
                  "name": "ChangeStatusesConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
          "name": "CifUserCifUsersByFormChangeUpdatedByAndCreatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `FormChange`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `FormChange`, and the cursor to aid in pagination.",
=======
<<<<<<< HEAD
          "name": "CifUserCifUsersByCifUserCreatedByAndDeletedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `CifUser`.",
=======
<<<<<<< HEAD
          "name": "CifUserCifUsersByChangeStatusDeletedByAndCreatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `ChangeStatus`.",
>>>>>>> refactor: update schema & reorder sqitch plan
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `ChangeStatus`, and the cursor to aid in pagination.",
=======
          "name": "CifUserCifUsersByOperatorDeletedByAndCreatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `Operator`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `Operator`, and the cursor to aid in pagination.",
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
=======
=======
          "name": "CifUserCifUsersByChangeStatusUpdatedByAndDeletedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `ChangeStatus`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `ChangeStatus`, and the cursor to aid in pagination.",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                      "name": "CifUserCifUsersByFormChangeUpdatedByAndCreatedByManyToManyEdge",
=======
<<<<<<< HEAD
                      "name": "CifUserCifUsersByCifUserCreatedByAndDeletedByManyToManyEdge",
=======
<<<<<<< HEAD
                      "name": "CifUserCifUsersByChangeStatusDeletedByAndCreatedByManyToManyEdge",
>>>>>>> refactor: update schema & reorder sqitch plan
=======
                      "name": "CifUserCifUsersByOperatorDeletedByAndCreatedByManyToManyEdge",
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
=======
=======
                      "name": "CifUserCifUsersByChangeStatusUpdatedByAndDeletedByManyToManyEdge",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
          "name": "CifUserCifUsersByFormChangeUpdatedByAndCreatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `FormChange`.",
          "fields": [
            {
=======
<<<<<<< HEAD
          "name": "CifUserCifUsersByCifUserCreatedByAndDeletedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `CifUser`.",
=======
<<<<<<< HEAD
          "name": "CifUserCifUsersByChangeStatusDeletedByAndCreatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `ChangeStatus`.",
>>>>>>> refactor: update schema & reorder sqitch plan
          "fields": [
            {
              "name": "changeStatusesByCreatedBy",
              "description": "Reads and enables pagination through a set of `ChangeStatus`.",
=======
          "name": "CifUserCifUsersByOperatorDeletedByAndCreatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `Operator`.",
          "fields": [
            {
>>>>>>> chore: add basic SelectOperator component
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "formChangesByCreatedBy",
              "description": "Reads and enables pagination through a set of `FormChange`.",
=======
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "operatorsByCreatedBy",
              "description": "Reads and enables pagination through a set of `Operator`.",
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
=======
=======
          "name": "CifUserCifUsersByChangeStatusUpdatedByAndDeletedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `ChangeStatus`.",
          "fields": [
            {
              "name": "changeStatusesByDeletedBy",
              "description": "Reads and enables pagination through a set of `ChangeStatus`.",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                    "name": "FormChangeCondition",
=======
<<<<<<< HEAD
                    "name": "CifUserCondition",
=======
<<<<<<< HEAD
                    "name": "ChangeStatusCondition",
>>>>>>> refactor: update schema & reorder sqitch plan
=======
                    "name": "OperatorCondition",
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
=======
=======
                    "name": "ChangeStatusCondition",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                    "name": "FormChangeFilter",
=======
<<<<<<< HEAD
                    "name": "CifUserFilter",
=======
<<<<<<< HEAD
                    "name": "ChangeStatusFilter",
>>>>>>> refactor: update schema & reorder sqitch plan
=======
                    "name": "OperatorFilter",
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
=======
=======
                    "name": "ChangeStatusFilter",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
<<<<<<< HEAD
<<<<<<< HEAD
                  "description": "The method to use when ordering `FormChange`.",
=======
<<<<<<< HEAD
                  "description": "The method to use when ordering `CifUser`.",
=======
<<<<<<< HEAD
                  "description": "The method to use when ordering `ChangeStatus`.",
>>>>>>> refactor: update schema & reorder sqitch plan
=======
                  "description": "The method to use when ordering `Operator`.",
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
=======
=======
                  "description": "The method to use when ordering `ChangeStatus`.",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
<<<<<<< HEAD
<<<<<<< HEAD
                        "name": "FormChangesOrderBy",
=======
<<<<<<< HEAD
                        "name": "CifUsersOrderBy",
=======
<<<<<<< HEAD
                        "name": "ChangeStatusesOrderBy",
>>>>>>> refactor: update schema & reorder sqitch plan
=======
                        "name": "OperatorsOrderBy",
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
=======
=======
                        "name": "ChangeStatusesOrderBy",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                  "name": "FormChangesConnection",
=======
<<<<<<< HEAD
                  "name": "CifUsersConnection",
=======
                  "name": "ProjectsConnection",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
          "name": "CifUserCifUsersByFormChangeUpdatedByAndDeletedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `FormChange`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `FormChange`, and the cursor to aid in pagination.",
=======
<<<<<<< HEAD
          "name": "CifUserCifUsersByCifUserCreatedByAndUpdatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `CifUser`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `CifUser`, and the cursor to aid in pagination.",
=======
<<<<<<< HEAD
                  "name": "ChangeStatusesConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
=======
                  "name": "OperatorsConnection",
>>>>>>> chore: add basic SelectOperator component
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
<<<<<<< HEAD
                      "name": "CifUserCifUsersByFormChangeUpdatedByAndDeletedByManyToManyEdge",
=======
<<<<<<< HEAD
                      "name": "CifUserCifUsersByCifUserCreatedByAndUpdatedByManyToManyEdge",
=======
                      "name": "CifUserCifUsersByProjectCreatedByAndUpdatedByManyToManyEdge",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
          "name": "CifUserCifUsersByFormChangeUpdatedByAndDeletedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `FormChange`.",
          "fields": [
            {
=======
<<<<<<< HEAD
          "name": "CifUserCifUsersByCifUserCreatedByAndUpdatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `CifUser`.",
          "fields": [
            {
              "name": "cifUsersByUpdatedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
=======
          "name": "CifUserCifUsersByProjectCreatedByAndUpdatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `Project`.",
          "fields": [
            {
>>>>>>> chore: add basic SelectOperator component
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "formChangesByDeletedBy",
              "description": "Reads and enables pagination through a set of `FormChange`.",
=======
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projectsByUpdatedBy",
              "description": "Reads and enables pagination through a set of `Project`.",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
                    "name": "FormChangeCondition",
=======
<<<<<<< HEAD
                    "name": "CifUserCondition",
=======
                    "name": "ProjectCondition",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
                    "name": "FormChangeFilter",
=======
<<<<<<< HEAD
                    "name": "CifUserFilter",
=======
                    "name": "ProjectFilter",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
<<<<<<< HEAD
                  "description": "The method to use when ordering `FormChange`.",
=======
<<<<<<< HEAD
                  "description": "The method to use when ordering `CifUser`.",
=======
                  "description": "The method to use when ordering `Project`.",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
<<<<<<< HEAD
                        "name": "FormChangesOrderBy",
=======
<<<<<<< HEAD
                        "name": "CifUsersOrderBy",
=======
                        "name": "ProjectsOrderBy",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
<<<<<<< HEAD
                  "name": "FormChangesConnection",
=======
<<<<<<< HEAD
                  "name": "CifUsersConnection",
=======
                  "name": "ProjectsConnection",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
=======
                  "name": "ChangeStatusesConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
>>>>>>> refactor: update schema & reorder sqitch plan
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
          "name": "CifUserCifUsersByChangeStatusDeletedByAndUpdatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `ChangeStatus`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `ChangeStatus`, and the cursor to aid in pagination.",
=======
          "name": "CifUserCifUsersByOperatorDeletedByAndUpdatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `Operator`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `Operator`, and the cursor to aid in pagination.",
>>>>>>> chore: add basic SelectOperator component
=======
          "name": "CifUserCifUsersByCifUserCreatedByAndDeletedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `CifUser`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `CifUser`, and the cursor to aid in pagination.",
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                      "name": "CifUserCifUsersByChangeStatusDeletedByAndUpdatedByManyToManyEdge",
=======
                      "name": "CifUserCifUsersByOperatorDeletedByAndUpdatedByManyToManyEdge",
>>>>>>> chore: add basic SelectOperator component
=======
                      "name": "CifUserCifUsersByCifUserCreatedByAndDeletedByManyToManyEdge",
>>>>>>> refactor: update schema & reorder sqitch plan
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
          "name": "CifUserCifUsersByChangeStatusDeletedByAndUpdatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `ChangeStatus`.",
          "fields": [
            {
              "name": "changeStatusesByUpdatedBy",
              "description": "Reads and enables pagination through a set of `ChangeStatus`.",
=======
          "name": "CifUserCifUsersByOperatorDeletedByAndUpdatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `Operator`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "operatorsByUpdatedBy",
              "description": "Reads and enables pagination through a set of `Operator`.",
>>>>>>> chore: add basic SelectOperator component
=======
          "name": "CifUserCifUsersByCifUserCreatedByAndDeletedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `CifUser`.",
          "fields": [
            {
              "name": "cifUsersByDeletedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                    "name": "ChangeStatusCondition",
=======
                    "name": "OperatorCondition",
>>>>>>> chore: add basic SelectOperator component
=======
                    "name": "CifUserCondition",
>>>>>>> refactor: update schema & reorder sqitch plan
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                    "name": "ChangeStatusFilter",
=======
                    "name": "OperatorFilter",
>>>>>>> chore: add basic SelectOperator component
=======
                    "name": "CifUserFilter",
>>>>>>> refactor: update schema & reorder sqitch plan
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
<<<<<<< HEAD
<<<<<<< HEAD
                  "description": "The method to use when ordering `ChangeStatus`.",
=======
                  "description": "The method to use when ordering `Operator`.",
>>>>>>> chore: add basic SelectOperator component
=======
                  "description": "The method to use when ordering `CifUser`.",
>>>>>>> refactor: update schema & reorder sqitch plan
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
<<<<<<< HEAD
<<<<<<< HEAD
                        "name": "ChangeStatusesOrderBy",
=======
                        "name": "OperatorsOrderBy",
>>>>>>> chore: add basic SelectOperator component
=======
                        "name": "CifUsersOrderBy",
>>>>>>> refactor: update schema & reorder sqitch plan
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                  "name": "ChangeStatusesConnection",
=======
                  "name": "OperatorsConnection",
>>>>>>> chore: add basic SelectOperator component
=======
                  "name": "CifUsersConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> refactor: update schema & reorder sqitch plan
            },
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
<<<<<<< HEAD
=======
>>>>>>> chore: add basic SelectOperator component
=======
>>>>>>> refactor: update schema & reorder sqitch plan
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
          "name": "CifUserCifUsersByChangeStatusUpdatedByAndCreatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `ChangeStatus`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `ChangeStatus`, and the cursor to aid in pagination.",
=======
          "name": "CifUserCifUsersByOperatorUpdatedByAndCreatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `Operator`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `Operator`, and the cursor to aid in pagination.",
>>>>>>> chore: add basic SelectOperator component
=======
          "name": "CifUserCifUsersByCifUserCreatedByAndUpdatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `CifUser`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `CifUser`, and the cursor to aid in pagination.",
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                      "name": "CifUserCifUsersByChangeStatusUpdatedByAndCreatedByManyToManyEdge",
=======
                      "name": "CifUserCifUsersByOperatorUpdatedByAndCreatedByManyToManyEdge",
>>>>>>> chore: add basic SelectOperator component
=======
                      "name": "CifUserCifUsersByCifUserCreatedByAndUpdatedByManyToManyEdge",
>>>>>>> refactor: update schema & reorder sqitch plan
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
          "name": "CifUserCifUsersByChangeStatusUpdatedByAndCreatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `ChangeStatus`.",
          "fields": [
            {
              "name": "changeStatusesByCreatedBy",
              "description": "Reads and enables pagination through a set of `ChangeStatus`.",
=======
          "name": "CifUserCifUsersByOperatorUpdatedByAndCreatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `Operator`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "operatorsByCreatedBy",
              "description": "Reads and enables pagination through a set of `Operator`.",
>>>>>>> chore: add basic SelectOperator component
=======
          "name": "CifUserCifUsersByCifUserCreatedByAndUpdatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `CifUser`.",
          "fields": [
            {
              "name": "cifUsersByUpdatedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                    "name": "ChangeStatusCondition",
=======
                    "name": "OperatorCondition",
>>>>>>> chore: add basic SelectOperator component
=======
                    "name": "CifUserCondition",
>>>>>>> refactor: update schema & reorder sqitch plan
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                    "name": "ChangeStatusFilter",
=======
                    "name": "OperatorFilter",
>>>>>>> chore: add basic SelectOperator component
=======
                    "name": "CifUserFilter",
>>>>>>> refactor: update schema & reorder sqitch plan
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
<<<<<<< HEAD
<<<<<<< HEAD
                  "description": "The method to use when ordering `ChangeStatus`.",
=======
                  "description": "The method to use when ordering `Operator`.",
>>>>>>> chore: add basic SelectOperator component
=======
                  "description": "The method to use when ordering `CifUser`.",
>>>>>>> refactor: update schema & reorder sqitch plan
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
<<<<<<< HEAD
<<<<<<< HEAD
                        "name": "ChangeStatusesOrderBy",
=======
                        "name": "OperatorsOrderBy",
>>>>>>> chore: add basic SelectOperator component
=======
                        "name": "CifUsersOrderBy",
>>>>>>> refactor: update schema & reorder sqitch plan
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                  "name": "ChangeStatusesConnection",
=======
                  "name": "OperatorsConnection",
>>>>>>> chore: add basic SelectOperator component
=======
                  "name": "CifUsersConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
          "name": "CifUserCifUsersByChangeStatusUpdatedByAndDeletedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `ChangeStatus`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `ChangeStatus`, and the cursor to aid in pagination.",
=======
          "name": "CifUserCifUsersByOperatorUpdatedByAndDeletedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `Operator`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `Operator`, and the cursor to aid in pagination.",
>>>>>>> chore: add basic SelectOperator component
=======
          "name": "CifUserCifUsersByCifUserDeletedByAndCreatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `CifUser`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `CifUser`, and the cursor to aid in pagination.",
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                      "name": "CifUserCifUsersByChangeStatusUpdatedByAndDeletedByManyToManyEdge",
=======
                      "name": "CifUserCifUsersByOperatorUpdatedByAndDeletedByManyToManyEdge",
>>>>>>> chore: add basic SelectOperator component
=======
                      "name": "CifUserCifUsersByCifUserDeletedByAndCreatedByManyToManyEdge",
>>>>>>> refactor: update schema & reorder sqitch plan
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
          "name": "CifUserCifUsersByChangeStatusUpdatedByAndDeletedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `ChangeStatus`.",
          "fields": [
            {
              "name": "changeStatusesByDeletedBy",
              "description": "Reads and enables pagination through a set of `ChangeStatus`.",
=======
          "name": "CifUserCifUsersByOperatorUpdatedByAndDeletedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `Operator`.",
          "fields": [
            {
>>>>>>> chore: add basic SelectOperator component
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
<<<<<<< HEAD
=======
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "operatorsByDeletedBy",
              "description": "Reads and enables pagination through a set of `Operator`.",
>>>>>>> chore: add basic SelectOperator component
=======
          "name": "CifUserCifUsersByCifUserDeletedByAndCreatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `CifUser`.",
          "fields": [
            {
              "name": "cifUsersByCreatedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                    "name": "ChangeStatusCondition",
=======
                    "name": "OperatorCondition",
>>>>>>> chore: add basic SelectOperator component
=======
                    "name": "CifUserCondition",
>>>>>>> refactor: update schema & reorder sqitch plan
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                    "name": "ChangeStatusFilter",
=======
                    "name": "OperatorFilter",
>>>>>>> chore: add basic SelectOperator component
=======
                    "name": "CifUserFilter",
>>>>>>> refactor: update schema & reorder sqitch plan
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
<<<<<<< HEAD
<<<<<<< HEAD
                  "description": "The method to use when ordering `ChangeStatus`.",
=======
                  "description": "The method to use when ordering `Operator`.",
>>>>>>> chore: add basic SelectOperator component
=======
                  "description": "The method to use when ordering `CifUser`.",
>>>>>>> refactor: update schema & reorder sqitch plan
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
<<<<<<< HEAD
<<<<<<< HEAD
                        "name": "ChangeStatusesOrderBy",
=======
                        "name": "OperatorsOrderBy",
>>>>>>> chore: add basic SelectOperator component
=======
                        "name": "CifUsersOrderBy",
>>>>>>> refactor: update schema & reorder sqitch plan
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                  "name": "ChangeStatusesConnection",
=======
                  "name": "OperatorsConnection",
>>>>>>> chore: add basic SelectOperator component
=======
                  "name": "CifUsersConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
          "name": "CifUserCifUsersByCifUserCreatedByAndDeletedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `CifUser`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `CifUser`, and the cursor to aid in pagination.",
=======
          "name": "CifUserCifUsersByProjectCreatedByAndDeletedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `Project`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `Project`, and the cursor to aid in pagination.",
>>>>>>> chore: add basic SelectOperator component
=======
          "name": "CifUserCifUsersByCifUserDeletedByAndUpdatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `CifUser`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `CifUser`, and the cursor to aid in pagination.",
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                      "name": "CifUserCifUsersByCifUserCreatedByAndDeletedByManyToManyEdge",
=======
                      "name": "CifUserCifUsersByProjectCreatedByAndDeletedByManyToManyEdge",
>>>>>>> chore: add basic SelectOperator component
=======
                      "name": "CifUserCifUsersByCifUserDeletedByAndUpdatedByManyToManyEdge",
>>>>>>> refactor: update schema & reorder sqitch plan
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
          "name": "CifUserCifUsersByCifUserCreatedByAndDeletedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `CifUser`.",
          "fields": [
            {
              "name": "cifUsersByDeletedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
=======
          "name": "CifUserCifUsersByProjectCreatedByAndDeletedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `Project`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projectsByDeletedBy",
              "description": "Reads and enables pagination through a set of `Project`.",
>>>>>>> chore: add basic SelectOperator component
=======
          "name": "CifUserCifUsersByCifUserDeletedByAndUpdatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `CifUser`.",
          "fields": [
            {
              "name": "cifUsersByUpdatedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                    "name": "CifUserCondition",
=======
                    "name": "ProjectCondition",
>>>>>>> chore: add basic SelectOperator component
=======
                    "name": "CifUserCondition",
>>>>>>> refactor: update schema & reorder sqitch plan
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                    "name": "CifUserFilter",
=======
                    "name": "ProjectFilter",
>>>>>>> chore: add basic SelectOperator component
=======
                    "name": "CifUserFilter",
>>>>>>> refactor: update schema & reorder sqitch plan
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
<<<<<<< HEAD
<<<<<<< HEAD
                  "description": "The method to use when ordering `CifUser`.",
=======
                  "description": "The method to use when ordering `Project`.",
>>>>>>> chore: add basic SelectOperator component
=======
                  "description": "The method to use when ordering `CifUser`.",
>>>>>>> refactor: update schema & reorder sqitch plan
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
<<<<<<< HEAD
<<<<<<< HEAD
                        "name": "CifUsersOrderBy",
=======
                        "name": "ProjectsOrderBy",
>>>>>>> chore: add basic SelectOperator component
=======
                        "name": "CifUsersOrderBy",
>>>>>>> refactor: update schema & reorder sqitch plan
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                  "name": "CifUsersConnection",
=======
                  "name": "ProjectsConnection",
>>>>>>> chore: add basic SelectOperator component
=======
                  "name": "CifUsersConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
          "name": "CifUserCifUsersByCifUserCreatedByAndUpdatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `CifUser`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `CifUser`, and the cursor to aid in pagination.",
=======
          "name": "CifUserCifUsersByProjectCreatedByAndUpdatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `Project`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `Project`, and the cursor to aid in pagination.",
>>>>>>> chore: add basic SelectOperator component
=======
          "name": "CifUserCifUsersByCifUserUpdatedByAndCreatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `CifUser`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `CifUser`, and the cursor to aid in pagination.",
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                      "name": "CifUserCifUsersByCifUserCreatedByAndUpdatedByManyToManyEdge",
=======
                      "name": "CifUserCifUsersByProjectCreatedByAndUpdatedByManyToManyEdge",
>>>>>>> chore: add basic SelectOperator component
=======
                      "name": "CifUserCifUsersByCifUserUpdatedByAndCreatedByManyToManyEdge",
>>>>>>> refactor: update schema & reorder sqitch plan
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
          "name": "CifUserCifUsersByCifUserCreatedByAndUpdatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `CifUser`.",
          "fields": [
            {
              "name": "cifUsersByUpdatedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
=======
          "name": "CifUserCifUsersByProjectCreatedByAndUpdatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `Project`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projectsByUpdatedBy",
              "description": "Reads and enables pagination through a set of `Project`.",
>>>>>>> chore: add basic SelectOperator component
=======
          "name": "CifUserCifUsersByCifUserUpdatedByAndCreatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `CifUser`.",
          "fields": [
            {
              "name": "cifUsersByCreatedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                    "name": "CifUserCondition",
=======
                    "name": "ProjectCondition",
>>>>>>> chore: add basic SelectOperator component
=======
                    "name": "CifUserCondition",
>>>>>>> refactor: update schema & reorder sqitch plan
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                    "name": "CifUserFilter",
=======
                    "name": "ProjectFilter",
>>>>>>> chore: add basic SelectOperator component
=======
                    "name": "CifUserFilter",
>>>>>>> refactor: update schema & reorder sqitch plan
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
<<<<<<< HEAD
<<<<<<< HEAD
                  "description": "The method to use when ordering `CifUser`.",
=======
                  "description": "The method to use when ordering `Project`.",
>>>>>>> chore: add basic SelectOperator component
=======
                  "description": "The method to use when ordering `CifUser`.",
>>>>>>> refactor: update schema & reorder sqitch plan
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
<<<<<<< HEAD
<<<<<<< HEAD
                        "name": "CifUsersOrderBy",
=======
                        "name": "ProjectsOrderBy",
>>>>>>> chore: add basic SelectOperator component
=======
                        "name": "CifUsersOrderBy",
>>>>>>> refactor: update schema & reorder sqitch plan
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                  "name": "CifUsersConnection",
=======
                  "name": "ProjectsConnection",
>>>>>>> chore: add basic SelectOperator component
=======
                  "name": "CifUsersConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
          "name": "CifUserCifUsersByCifUserDeletedByAndCreatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `CifUser`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `CifUser`, and the cursor to aid in pagination.",
=======
          "name": "CifUserCifUsersByProjectDeletedByAndCreatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `Project`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `Project`, and the cursor to aid in pagination.",
>>>>>>> chore: add basic SelectOperator component
=======
          "name": "CifUserCifUsersByCifUserUpdatedByAndDeletedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `CifUser`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `CifUser`, and the cursor to aid in pagination.",
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                      "name": "CifUserCifUsersByCifUserDeletedByAndCreatedByManyToManyEdge",
=======
                      "name": "CifUserCifUsersByProjectDeletedByAndCreatedByManyToManyEdge",
>>>>>>> chore: add basic SelectOperator component
=======
                      "name": "CifUserCifUsersByCifUserUpdatedByAndDeletedByManyToManyEdge",
>>>>>>> refactor: update schema & reorder sqitch plan
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
          "name": "CifUserCifUsersByCifUserDeletedByAndCreatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `CifUser`.",
          "fields": [
            {
              "name": "cifUsersByCreatedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
=======
          "name": "CifUserCifUsersByProjectDeletedByAndCreatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `Project`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projectsByCreatedBy",
              "description": "Reads and enables pagination through a set of `Project`.",
>>>>>>> chore: add basic SelectOperator component
=======
          "name": "CifUserCifUsersByCifUserUpdatedByAndDeletedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `CifUser`.",
          "fields": [
            {
              "name": "cifUsersByDeletedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                    "name": "CifUserCondition",
=======
                    "name": "ProjectCondition",
>>>>>>> chore: add basic SelectOperator component
=======
                    "name": "CifUserCondition",
>>>>>>> refactor: update schema & reorder sqitch plan
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                    "name": "CifUserFilter",
=======
                    "name": "ProjectFilter",
>>>>>>> chore: add basic SelectOperator component
=======
                    "name": "CifUserFilter",
>>>>>>> refactor: update schema & reorder sqitch plan
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
<<<<<<< HEAD
<<<<<<< HEAD
                  "description": "The method to use when ordering `CifUser`.",
=======
                  "description": "The method to use when ordering `Project`.",
>>>>>>> chore: add basic SelectOperator component
=======
                  "description": "The method to use when ordering `CifUser`.",
>>>>>>> refactor: update schema & reorder sqitch plan
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
<<<<<<< HEAD
<<<<<<< HEAD
                        "name": "CifUsersOrderBy",
=======
                        "name": "ProjectsOrderBy",
>>>>>>> chore: add basic SelectOperator component
=======
                        "name": "CifUsersOrderBy",
>>>>>>> refactor: update schema & reorder sqitch plan
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                  "name": "CifUsersConnection",
=======
                  "name": "ProjectsConnection",
>>>>>>> chore: add basic SelectOperator component
=======
                  "name": "CifUsersConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
<<<<<<< HEAD
            },
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
=======
            },
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserCifUsersByOperatorCreatedByAndDeletedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `Operator`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `Operator`, and the cursor to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CifUserCifUsersByOperatorCreatedByAndDeletedByManyToManyEdge",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserCifUsersByOperatorCreatedByAndDeletedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `Operator`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
>>>>>>> refactor: update schema & reorder sqitch plan
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
=======
              "name": "operatorsByDeletedBy",
              "description": "Reads and enables pagination through a set of `Operator`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "OperatorCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "OperatorFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `Operator`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "OperatorsOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "OperatorsConnection",
                  "ofType": null
                }
>>>>>>> refactor: update schema & reorder sqitch plan
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
          "name": "CifUserCifUsersByCifUserDeletedByAndUpdatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `CifUser`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `CifUser`, and the cursor to aid in pagination.",
=======
          "name": "CifUserCifUsersByProjectDeletedByAndUpdatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `Project`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `Project`, and the cursor to aid in pagination.",
>>>>>>> chore: add basic SelectOperator component
=======
          "name": "CifUserCifUsersByOperatorCreatedByAndUpdatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `Operator`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `Operator`, and the cursor to aid in pagination.",
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                      "name": "CifUserCifUsersByCifUserDeletedByAndUpdatedByManyToManyEdge",
=======
                      "name": "CifUserCifUsersByProjectDeletedByAndUpdatedByManyToManyEdge",
>>>>>>> chore: add basic SelectOperator component
=======
                      "name": "CifUserCifUsersByOperatorCreatedByAndUpdatedByManyToManyEdge",
>>>>>>> refactor: update schema & reorder sqitch plan
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
<<<<<<< HEAD
            },
            {
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
=======
            },
            {
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserCifUsersByOperatorCreatedByAndUpdatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `Operator`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "operatorsByUpdatedBy",
              "description": "Reads and enables pagination through a set of `Operator`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "OperatorCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "OperatorFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `Operator`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "OperatorsOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
>>>>>>> refactor: update schema & reorder sqitch plan
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
<<<<<<< HEAD
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
=======
                  "kind": "OBJECT",
                  "name": "OperatorsConnection",
                  "ofType": null
>>>>>>> refactor: update schema & reorder sqitch plan
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
<<<<<<< HEAD
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
=======
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserCifUsersByOperatorDeletedByAndCreatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `Operator`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `Operator`, and the cursor to aid in pagination.",
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
<<<<<<< HEAD
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
=======
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CifUserCifUsersByOperatorDeletedByAndCreatedByManyToManyEdge",
                      "ofType": null
                    }
                  }
>>>>>>> refactor: update schema & reorder sqitch plan
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
=======
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
<<<<<<< HEAD
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
=======
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
>>>>>>> refactor: update schema & reorder sqitch plan
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
<<<<<<< HEAD
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
          "name": "CifUserCifUsersByCifUserDeletedByAndUpdatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `CifUser`.",
          "fields": [
            {
              "name": "cifUsersByUpdatedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
=======
          "name": "CifUserCifUsersByProjectDeletedByAndUpdatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `Project`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projectsByUpdatedBy",
              "description": "Reads and enables pagination through a set of `Project`.",
>>>>>>> chore: add basic SelectOperator component
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
                    "name": "CifUserCondition",
=======
                    "name": "ProjectCondition",
>>>>>>> chore: add basic SelectOperator component
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
                    "name": "CifUserFilter",
=======
                    "name": "ProjectFilter",
>>>>>>> chore: add basic SelectOperator component
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
<<<<<<< HEAD
                  "description": "The method to use when ordering `CifUser`.",
=======
                  "description": "The method to use when ordering `Project`.",
>>>>>>> chore: add basic SelectOperator component
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
<<<<<<< HEAD
                        "name": "CifUsersOrderBy",
=======
                        "name": "ProjectsOrderBy",
>>>>>>> chore: add basic SelectOperator component
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
<<<<<<< HEAD
                  "name": "CifUsersConnection",
=======
                  "name": "ProjectsConnection",
>>>>>>> chore: add basic SelectOperator component
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
          "name": "CifUserCifUsersByCifUserUpdatedByAndCreatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `CifUser`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `CifUser`, and the cursor to aid in pagination.",
=======
          "name": "CifUserCifUsersByProjectUpdatedByAndCreatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `Project`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `Project`, and the cursor to aid in pagination.",
>>>>>>> chore: add basic SelectOperator component
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
<<<<<<< HEAD
                      "name": "CifUserCifUsersByCifUserUpdatedByAndCreatedByManyToManyEdge",
=======
                      "name": "CifUserCifUsersByProjectUpdatedByAndCreatedByManyToManyEdge",
>>>>>>> chore: add basic SelectOperator component
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
          "name": "CifUserCifUsersByCifUserUpdatedByAndCreatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `CifUser`.",
          "fields": [
            {
              "name": "cifUsersByCreatedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
=======
          "name": "CifUserCifUsersByProjectUpdatedByAndCreatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `Project`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projectsByCreatedBy",
              "description": "Reads and enables pagination through a set of `Project`.",
>>>>>>> chore: add basic SelectOperator component
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
                    "name": "CifUserCondition",
=======
                    "name": "ProjectCondition",
>>>>>>> chore: add basic SelectOperator component
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
                    "name": "CifUserFilter",
=======
                    "name": "ProjectFilter",
>>>>>>> chore: add basic SelectOperator component
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
<<<<<<< HEAD
                  "description": "The method to use when ordering `CifUser`.",
=======
                  "description": "The method to use when ordering `Project`.",
>>>>>>> chore: add basic SelectOperator component
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
<<<<<<< HEAD
                        "name": "CifUsersOrderBy",
=======
                        "name": "ProjectsOrderBy",
>>>>>>> chore: add basic SelectOperator component
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
<<<<<<< HEAD
                  "name": "CifUsersConnection",
=======
                  "name": "ProjectsConnection",
>>>>>>> chore: add basic SelectOperator component
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
          "name": "CifUserCifUsersByCifUserUpdatedByAndDeletedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `CifUser`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `CifUser`, and the cursor to aid in pagination.",
=======
          "name": "CifUserCifUsersByProjectUpdatedByAndDeletedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `Project`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `Project`, and the cursor to aid in pagination.",
>>>>>>> chore: add basic SelectOperator component
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
<<<<<<< HEAD
                      "name": "CifUserCifUsersByCifUserUpdatedByAndDeletedByManyToManyEdge",
=======
                      "name": "CifUserCifUsersByProjectUpdatedByAndDeletedByManyToManyEdge",
>>>>>>> chore: add basic SelectOperator component
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
          "name": "CifUserCifUsersByCifUserUpdatedByAndDeletedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `CifUser`.",
          "fields": [
            {
              "name": "cifUsersByDeletedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
=======
          "name": "CifUserCifUsersByProjectUpdatedByAndDeletedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `Project`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projectsByDeletedBy",
              "description": "Reads and enables pagination through a set of `Project`.",
>>>>>>> chore: add basic SelectOperator component
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
                    "name": "CifUserCondition",
=======
                    "name": "ProjectCondition",
>>>>>>> chore: add basic SelectOperator component
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
                    "name": "CifUserFilter",
=======
                    "name": "ProjectFilter",
>>>>>>> chore: add basic SelectOperator component
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
<<<<<<< HEAD
                  "description": "The method to use when ordering `CifUser`.",
=======
                  "description": "The method to use when ordering `Project`.",
>>>>>>> chore: add basic SelectOperator component
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
<<<<<<< HEAD
                        "name": "CifUsersOrderBy",
=======
                        "name": "ProjectsOrderBy",
>>>>>>> chore: add basic SelectOperator component
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
<<<<<<< HEAD
                  "name": "CifUsersConnection",
=======
                  "name": "ProjectsConnection",
>>>>>>> chore: add basic SelectOperator component
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
<<<<<<< HEAD
          "kind": "OBJECT",
          "name": "CifUserCifUsersByFundingStreamCreatedByAndDeletedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `FundingStream`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `FundingStream`, and the cursor to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CifUserCifUsersByFundingStreamCreatedByAndDeletedByManyToManyEdge",
                      "ofType": null
                    }
                  }
                }
=======
          "kind": "INPUT_OBJECT",
          "name": "CifUserCondition",
          "description": "A condition to be used against `CifUser` object types. All fields are tested for equality and combined with a logical ‘and.’",
          "fields": null,
          "inputFields": [
            {
              "name": "createdAt",
              "description": "Checks for equality with the object’s `createdAt` field.",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
>>>>>>> chore: add basic SelectOperator component
              },
              "defaultValue": null
            },
            {
              "name": "createdBy",
              "description": "Checks for equality with the object’s `createdBy` field.",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "deletedAt",
              "description": "Checks for equality with the object’s `deletedAt` field.",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "deletedBy",
              "description": "Checks for equality with the object’s `deletedBy` field.",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
<<<<<<< HEAD
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserCifUsersByFundingStreamCreatedByAndDeletedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `FundingStream`.",
          "fields": [
=======
              "defaultValue": null
            },
>>>>>>> chore: add basic SelectOperator component
            {
              "name": "emailAddress",
              "description": "Checks for equality with the object’s `emailAddress` field.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
<<<<<<< HEAD
              "name": "fundingStreamsByDeletedBy",
              "description": "Reads and enables pagination through a set of `FundingStream`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "FundingStreamCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "FundingStreamFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `FundingStream`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "FundingStreamsOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "FundingStreamsConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
=======
              "name": "firstName",
              "description": "Checks for equality with the object’s `firstName` field.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "lastName",
              "description": "Checks for equality with the object’s `lastName` field.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "rowId",
              "description": "Checks for equality with the object’s `rowId` field.",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "updatedAt",
              "description": "Checks for equality with the object’s `updatedAt` field.",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "updatedBy",
              "description": "Checks for equality with the object’s `updatedBy` field.",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "uuid",
              "description": "Checks for equality with the object’s `uuid` field.",
              "type": {
                "kind": "SCALAR",
                "name": "UUID",
                "ofType": null
              },
              "defaultValue": null
>>>>>>> chore: add basic SelectOperator component
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
<<<<<<< HEAD
          "kind": "OBJECT",
          "name": "CifUserCifUsersByFundingStreamCreatedByAndUpdatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `FundingStream`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `FundingStream`, and the cursor to aid in pagination.",
              "args": [],
=======
          "kind": "INPUT_OBJECT",
          "name": "CifUserFilter",
          "description": "A filter to be used against `CifUser` object types. All fields are combined with a logical ‘and.’",
          "fields": null,
          "inputFields": [
            {
              "name": "and",
              "description": "Checks for all expressions in this list.",
>>>>>>> chore: add basic SelectOperator component
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
<<<<<<< HEAD
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CifUserCifUsersByFundingStreamCreatedByAndUpdatedByManyToManyEdge",
                      "ofType": null
                    }
=======
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserFilter",
                    "ofType": null
>>>>>>> chore: add basic SelectOperator component
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "attachmentsByCreatedBy",
              "description": "Filter by the object’s `attachmentsByCreatedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserToManyAttachmentFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "attachmentsByCreatedByExist",
              "description": "Some related `attachmentsByCreatedBy` exist.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "attachmentsByDeletedBy",
              "description": "Filter by the object’s `attachmentsByDeletedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserToManyAttachmentFilter",
                "ofType": null
              },
<<<<<<< HEAD
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserCifUsersByFundingStreamCreatedByAndUpdatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `FundingStream`.",
          "fields": [
=======
              "defaultValue": null
            },
>>>>>>> chore: add basic SelectOperator component
            {
              "name": "attachmentsByDeletedByExist",
              "description": "Some related `attachmentsByDeletedBy` exist.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
<<<<<<< HEAD
              "name": "fundingStreamsByUpdatedBy",
              "description": "Reads and enables pagination through a set of `FundingStream`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "FundingStreamCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "FundingStreamFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `FundingStream`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "FundingStreamsOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "FundingStreamsConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserCifUsersByFundingStreamDeletedByAndCreatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `FundingStream`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `FundingStream`, and the cursor to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CifUserCifUsersByFundingStreamDeletedByAndCreatedByManyToManyEdge",
                      "ofType": null
                    }
                  }
                }
=======
              "name": "attachmentsByUpdatedBy",
              "description": "Filter by the object’s `attachmentsByUpdatedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserToManyAttachmentFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "attachmentsByUpdatedByExist",
              "description": "Some related `attachmentsByUpdatedBy` exist.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "changeStatusesByCreatedBy",
              "description": "Filter by the object’s `changeStatusesByCreatedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserToManyChangeStatusFilter",
                "ofType": null
>>>>>>> chore: add basic SelectOperator component
              },
              "defaultValue": null
            },
            {
              "name": "changeStatusesByCreatedByExist",
              "description": "Some related `changeStatusesByCreatedBy` exist.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "changeStatusesByDeletedBy",
              "description": "Filter by the object’s `changeStatusesByDeletedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserToManyChangeStatusFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "changeStatusesByDeletedByExist",
              "description": "Some related `changeStatusesByDeletedBy` exist.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
<<<<<<< HEAD
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserCifUsersByFundingStreamDeletedByAndCreatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `FundingStream`.",
          "fields": [
=======
              "defaultValue": null
            },
>>>>>>> chore: add basic SelectOperator component
            {
              "name": "changeStatusesByUpdatedBy",
              "description": "Filter by the object’s `changeStatusesByUpdatedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserToManyChangeStatusFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
<<<<<<< HEAD
              "name": "fundingStreamsByCreatedBy",
              "description": "Reads and enables pagination through a set of `FundingStream`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "FundingStreamCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "FundingStreamFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `FundingStream`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "FundingStreamsOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "FundingStreamsConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserCifUsersByFundingStreamDeletedByAndUpdatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `FundingStream`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `FundingStream`, and the cursor to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CifUserCifUsersByFundingStreamDeletedByAndUpdatedByManyToManyEdge",
                      "ofType": null
                    }
                  }
                }
=======
              "name": "changeStatusesByUpdatedByExist",
              "description": "Some related `changeStatusesByUpdatedBy` exist.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "cifUserByCreatedBy",
              "description": "Filter by the object’s `cifUserByCreatedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserFilter",
                "ofType": null
>>>>>>> chore: add basic SelectOperator component
              },
              "defaultValue": null
            },
            {
              "name": "cifUserByCreatedByExists",
              "description": "A related `cifUserByCreatedBy` exists.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "cifUserByDeletedBy",
              "description": "Filter by the object’s `cifUserByDeletedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
<<<<<<< HEAD
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserCifUsersByFundingStreamDeletedByAndUpdatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `FundingStream`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
=======
              "name": "cifUserByDeletedByExists",
              "description": "A related `cifUserByDeletedBy` exists.",
>>>>>>> chore: add basic SelectOperator component
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
<<<<<<< HEAD
              "name": "fundingStreamsByUpdatedBy",
              "description": "Reads and enables pagination through a set of `FundingStream`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "FundingStreamCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "FundingStreamFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `FundingStream`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "FundingStreamsOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "FundingStreamsConnection",
                  "ofType": null
                }
=======
              "name": "cifUserByUpdatedBy",
              "description": "Filter by the object’s `cifUserByUpdatedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "cifUserByUpdatedByExists",
              "description": "A related `cifUserByUpdatedBy` exists.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "cifUsersByCreatedBy",
              "description": "Filter by the object’s `cifUsersByCreatedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserToManyCifUserFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "cifUsersByCreatedByExist",
              "description": "Some related `cifUsersByCreatedBy` exist.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "cifUsersByDeletedBy",
              "description": "Filter by the object’s `cifUsersByDeletedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserToManyCifUserFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "cifUsersByDeletedByExist",
              "description": "Some related `cifUsersByDeletedBy` exist.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "cifUsersByUpdatedBy",
              "description": "Filter by the object’s `cifUsersByUpdatedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserToManyCifUserFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "cifUsersByUpdatedByExist",
              "description": "Some related `cifUsersByUpdatedBy` exist.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "createdAt",
              "description": "Filter by the object’s `createdAt` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DatetimeFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "createdBy",
              "description": "Filter by the object’s `createdBy` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IntFilter",
>>>>>>> chore: add basic SelectOperator component
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
=======
              "name": "deletedAt",
              "description": "Filter by the object’s `deletedAt` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DatetimeFilter",
>>>>>>> chore: add basic SelectOperator component
                "ofType": null
>>>>>>> chore: add basic SelectOperator component
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
          "name": "CifUserCifUsersByFundingStreamUpdatedByAndCreatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `FundingStream`.",
=======
          "name": "CifUserCifUsersByChangeStatusUpdatedByAndCreatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `ChangeStatus`.",
>>>>>>> chore: add basic SelectOperator component
          "fields": [
            {
<<<<<<< HEAD
              "name": "edges",
<<<<<<< HEAD
              "description": "A list of edges which contains the `CifUser`, info from the `FundingStream`, and the cursor to aid in pagination.",
=======
              "description": "A list of edges which contains the `CifUser`, info from the `ChangeStatus`, and the cursor to aid in pagination.",
>>>>>>> chore: add basic SelectOperator component
              "args": [],
=======
              "name": "deletedBy",
              "description": "Filter by the object’s `deletedBy` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IntFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "emailAddress",
              "description": "Filter by the object’s `emailAddress` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "firstName",
              "description": "Filter by the object’s `firstName` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "keycloakJwtsBySub",
              "description": "Filter by the object’s `keycloakJwtsBySub` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserToManyKeycloakJwtFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "keycloakJwtsBySubExist",
              "description": "Some related `keycloakJwtsBySub` exist.",
>>>>>>> chore: add basic SelectOperator component
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
<<<<<<< HEAD
                      "name": "CifUserCifUsersByFundingStreamUpdatedByAndCreatedByManyToManyEdge",
=======
                      "name": "CifUserCifUsersByChangeStatusUpdatedByAndCreatedByManyToManyEdge",
>>>>>>> chore: add basic SelectOperator component
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
=======
              "name": "lastName",
              "description": "Filter by the object’s `lastName` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Negates the expression.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "operatorsByCreatedBy",
              "description": "Filter by the object’s `operatorsByCreatedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserToManyOperatorFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "operatorsByCreatedByExist",
              "description": "Some related `operatorsByCreatedBy` exist.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "operatorsByDeletedBy",
              "description": "Filter by the object’s `operatorsByDeletedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserToManyOperatorFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "operatorsByDeletedByExist",
              "description": "Some related `operatorsByDeletedBy` exist.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "operatorsByUpdatedBy",
              "description": "Filter by the object’s `operatorsByUpdatedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserToManyOperatorFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "operatorsByUpdatedByExist",
              "description": "Some related `operatorsByUpdatedBy` exist.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "or",
              "description": "Checks for any expressions in this list.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserFilter",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "projectsByCreatedBy",
              "description": "Filter by the object’s `projectsByCreatedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserToManyProjectFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "projectsByCreatedByExist",
              "description": "Some related `projectsByCreatedBy` exist.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "projectsByDeletedBy",
              "description": "Filter by the object’s `projectsByDeletedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserToManyProjectFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "projectsByDeletedByExist",
              "description": "Some related `projectsByDeletedBy` exist.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "projectsByUpdatedBy",
              "description": "Filter by the object’s `projectsByUpdatedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserToManyProjectFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "projectsByUpdatedByExist",
              "description": "Some related `projectsByUpdatedBy` exist.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "rowId",
              "description": "Filter by the object’s `rowId` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IntFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "updatedAt",
              "description": "Filter by the object’s `updatedAt` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DatetimeFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "updatedBy",
              "description": "Filter by the object’s `updatedBy` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IntFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "uuid",
              "description": "Filter by the object’s `uuid` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "UUIDFilter",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CifUserInput",
          "description": "An input for mutations affecting `CifUser`",
          "fields": null,
          "inputFields": [
            {
              "name": "createdAt",
              "description": "created at timestamp",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
>>>>>>> chore: add basic SelectOperator component
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
=======
              "name": "createdBy",
              "description": "created by user id",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
>>>>>>> chore: add basic SelectOperator component
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
=======
              "name": "deletedAt",
              "description": "deleted at timestamp",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
>>>>>>> chore: add basic SelectOperator component
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
          "name": "CifUserCifUsersByFundingStreamUpdatedByAndCreatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `FundingStream`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "fundingStreamsByCreatedBy",
              "description": "Reads and enables pagination through a set of `FundingStream`.",
=======
          "name": "CifUserCifUsersByChangeStatusUpdatedByAndCreatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `ChangeStatus`.",
          "fields": [
            {
<<<<<<< HEAD
              "name": "changeStatusesByCreatedBy",
              "description": "Reads and enables pagination through a set of `ChangeStatus`.",
>>>>>>> chore: add basic SelectOperator component
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
                    "name": "FundingStreamCondition",
=======
                    "name": "ChangeStatusCondition",
>>>>>>> chore: add basic SelectOperator component
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
                    "name": "FundingStreamFilter",
=======
                    "name": "ChangeStatusFilter",
>>>>>>> chore: add basic SelectOperator component
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
<<<<<<< HEAD
                  "description": "The method to use when ordering `FundingStream`.",
=======
                  "description": "The method to use when ordering `ChangeStatus`.",
>>>>>>> chore: add basic SelectOperator component
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
<<<<<<< HEAD
                        "name": "FundingStreamsOrderBy",
=======
                        "name": "ChangeStatusesOrderBy",
>>>>>>> chore: add basic SelectOperator component
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
<<<<<<< HEAD
                  "name": "FundingStreamsConnection",
=======
                  "name": "ChangeStatusesConnection",
>>>>>>> chore: add basic SelectOperator component
                  "ofType": null
                }
=======
              "name": "deletedBy",
              "description": "deleted by user id",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
>>>>>>> chore: add basic SelectOperator component
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
=======
              "name": "emailAddress",
              "description": "User's email address",
              "type": {
                "kind": "SCALAR",
                "name": "String",
>>>>>>> chore: add basic SelectOperator component
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
=======
              "name": "firstName",
              "description": "User's first name",
              "type": {
                "kind": "SCALAR",
                "name": "String",
>>>>>>> chore: add basic SelectOperator component
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
          "name": "CifUserCifUsersByFundingStreamUpdatedByAndDeletedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `FundingStream`.",
=======
          "name": "CifUserCifUsersByChangeStatusUpdatedByAndDeletedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `ChangeStatus`.",
>>>>>>> chore: add basic SelectOperator component
          "fields": [
            {
<<<<<<< HEAD
              "name": "edges",
<<<<<<< HEAD
              "description": "A list of edges which contains the `CifUser`, info from the `FundingStream`, and the cursor to aid in pagination.",
=======
              "description": "A list of edges which contains the `CifUser`, info from the `ChangeStatus`, and the cursor to aid in pagination.",
>>>>>>> chore: add basic SelectOperator component
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
<<<<<<< HEAD
                      "name": "CifUserCifUsersByFundingStreamUpdatedByAndDeletedByManyToManyEdge",
=======
                      "name": "CifUserCifUsersByChangeStatusUpdatedByAndDeletedByManyToManyEdge",
>>>>>>> chore: add basic SelectOperator component
                      "ofType": null
                    }
                  }
                }
=======
              "name": "lastName",
              "description": "User's last name",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
>>>>>>> chore: add basic SelectOperator component
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
=======
              "name": "updatedAt",
              "description": "updated at timestamp",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
>>>>>>> chore: add basic SelectOperator component
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
=======
              "name": "updatedBy",
              "description": "updated by user id",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
>>>>>>> chore: add basic SelectOperator component
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
=======
              "name": "uuid",
              "description": "Universally Unique ID for the user, defined by the single sign-on provider",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "UUID",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
<<<<<<< HEAD
          "kind": "OBJECT",
          "name": "CifUserCifUsersByFundingStreamUpdatedByAndDeletedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `FundingStream`.",
          "fields": [
=======
          "kind": "INPUT_OBJECT",
          "name": "CifUserPatch",
          "description": "Represents an update to a `CifUser`. Fields that are set will be updated.",
          "fields": null,
          "inputFields": [
>>>>>>> chore: add basic SelectOperator component
            {
              "name": "createdAt",
              "description": "created at timestamp",
              "type": {
                "kind": "SCALAR",
<<<<<<< HEAD
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "fundingStreamsByDeletedBy",
              "description": "Reads and enables pagination through a set of `FundingStream`.",
=======
                "name": "Datetime",
                "ofType": null
>>>>>>> chore: add basic SelectOperator component
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserCifUsersByChangeStatusUpdatedByAndDeletedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `ChangeStatus`.",
          "fields": [
            {
<<<<<<< HEAD
              "name": "changeStatusesByDeletedBy",
              "description": "Reads and enables pagination through a set of `ChangeStatus`.",
>>>>>>> chore: add basic SelectOperator component
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
                    "name": "FundingStreamCondition",
=======
                    "name": "ChangeStatusCondition",
>>>>>>> chore: add basic SelectOperator component
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
                    "name": "FundingStreamFilter",
=======
                    "name": "ChangeStatusFilter",
>>>>>>> chore: add basic SelectOperator component
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
<<<<<<< HEAD
                  "description": "The method to use when ordering `FundingStream`.",
=======
                  "description": "The method to use when ordering `ChangeStatus`.",
>>>>>>> chore: add basic SelectOperator component
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
<<<<<<< HEAD
                        "name": "FundingStreamsOrderBy",
=======
                        "name": "ChangeStatusesOrderBy",
>>>>>>> chore: add basic SelectOperator component
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
<<<<<<< HEAD
                  "name": "FundingStreamsConnection",
=======
                  "name": "ChangeStatusesConnection",
>>>>>>> chore: add basic SelectOperator component
                  "ofType": null
                }
=======
              "name": "createdBy",
              "description": "created by user id",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
>>>>>>> chore: add basic SelectOperator component
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
=======
              "name": "deletedAt",
              "description": "deleted at timestamp",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
>>>>>>> chore: add basic SelectOperator component
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
=======
              "name": "deletedBy",
              "description": "deleted by user id",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
>>>>>>> chore: add basic SelectOperator component
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
          "name": "CifUserCifUsersByProjectCreatedByAndDeletedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `Project`.",
=======
          "name": "CifUserCifUsersByCifUserCreatedByAndDeletedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `CifUser`.",
>>>>>>> chore: add basic SelectOperator component
          "fields": [
            {
<<<<<<< HEAD
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `CifUser`, and the cursor to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
<<<<<<< HEAD
                      "name": "CifUserCifUsersByProjectCreatedByAndDeletedByManyToManyEdge",
=======
                      "name": "CifUserCifUsersByCifUserCreatedByAndDeletedByManyToManyEdge",
>>>>>>> chore: add basic SelectOperator component
                      "ofType": null
                    }
                  }
                }
=======
              "name": "emailAddress",
              "description": "User's email address",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
>>>>>>> chore: add basic SelectOperator component
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
=======
              "name": "firstName",
              "description": "User's first name",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
>>>>>>> chore: add basic SelectOperator component
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
=======
              "name": "lastName",
              "description": "User's last name",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
>>>>>>> chore: add basic SelectOperator component
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
<<<<<<< HEAD
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserCifUsersByProjectCreatedByAndDeletedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `Project`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
=======
=======
              "name": "updatedAt",
              "description": "updated at timestamp",
>>>>>>> chore: add basic SelectOperator component
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "updatedBy",
              "description": "updated by user id",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
<<<<<<< HEAD
              "name": "projectsByDeletedBy",
              "description": "Reads and enables pagination through a set of `Project`.",
=======
              "name": "uuid",
              "description": "Universally Unique ID for the user, defined by the single sign-on provider",
              "type": {
                "kind": "SCALAR",
                "name": "UUID",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
>>>>>>> chore: add basic SelectOperator component
          "enumValues": null,
          "possibleTypes": null
        },
        {
<<<<<<< HEAD
          "kind": "OBJECT",
          "name": "CifUserCifUsersByCifUserCreatedByAndDeletedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `CifUser`.",
          "fields": [
            {
              "name": "cifUsersByDeletedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
>>>>>>> chore: add basic SelectOperator component
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `CifUser`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "CifUsersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CifUsersConnection",
                  "ofType": null
                }
=======
          "kind": "INPUT_OBJECT",
          "name": "CifUserToManyAttachmentFilter",
          "description": "A filter to be used against many `Attachment` object types. All fields are combined with a logical ‘and.’",
          "fields": null,
          "inputFields": [
            {
              "name": "every",
              "description": "Every related `Attachment` matches the filter criteria. All fields are combined with a logical ‘and.’",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "AttachmentFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "none",
              "description": "No related `Attachment` matches the filter criteria. All fields are combined with a logical ‘and.’",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "AttachmentFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "some",
              "description": "Some related `Attachment` matches the filter criteria. All fields are combined with a logical ‘and.’",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "AttachmentFilter",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CifUserToManyChangeStatusFilter",
          "description": "A filter to be used against many `ChangeStatus` object types. All fields are combined with a logical ‘and.’",
          "fields": null,
          "inputFields": [
            {
              "name": "every",
              "description": "Every related `ChangeStatus` matches the filter criteria. All fields are combined with a logical ‘and.’",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "ChangeStatusFilter",
                "ofType": null
>>>>>>> chore: add basic SelectOperator component
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
=======
              "name": "none",
              "description": "No related `ChangeStatus` matches the filter criteria. All fields are combined with a logical ‘and.’",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "ChangeStatusFilter",
>>>>>>> chore: add basic SelectOperator component
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
=======
              "name": "some",
              "description": "Some related `ChangeStatus` matches the filter criteria. All fields are combined with a logical ‘and.’",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "ChangeStatusFilter",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
>>>>>>> chore: add basic SelectOperator component
          "enumValues": null,
          "possibleTypes": null
        },
        {
<<<<<<< HEAD
          "kind": "OBJECT",
<<<<<<< HEAD
          "name": "CifUserCifUsersByProjectCreatedByAndUpdatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `Project`.",
=======
          "name": "CifUserCifUsersByCifUserCreatedByAndUpdatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `CifUser`.",
>>>>>>> chore: add basic SelectOperator component
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `CifUser`, and the cursor to aid in pagination.",
              "args": [],
=======
          "kind": "INPUT_OBJECT",
          "name": "CifUserToManyCifUserFilter",
          "description": "A filter to be used against many `CifUser` object types. All fields are combined with a logical ‘and.’",
          "fields": null,
          "inputFields": [
            {
              "name": "every",
              "description": "Every related `CifUser` matches the filter criteria. All fields are combined with a logical ‘and.’",
>>>>>>> chore: add basic SelectOperator component
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
<<<<<<< HEAD
                      "name": "CifUserCifUsersByProjectCreatedByAndUpdatedByManyToManyEdge",
=======
                      "name": "CifUserCifUsersByCifUserCreatedByAndUpdatedByManyToManyEdge",
>>>>>>> chore: add basic SelectOperator component
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
=======
              "name": "none",
              "description": "No related `CifUser` matches the filter criteria. All fields are combined with a logical ‘and.’",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserFilter",
                "ofType": null
>>>>>>> chore: add basic SelectOperator component
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
=======
              "name": "some",
              "description": "Some related `CifUser` matches the filter criteria. All fields are combined with a logical ‘and.’",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserFilter",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CifUserToManyKeycloakJwtFilter",
          "description": "A filter to be used against many `KeycloakJwt` object types. All fields are combined with a logical ‘and.’",
          "fields": null,
          "inputFields": [
            {
              "name": "every",
              "description": "Every related `KeycloakJwt` matches the filter criteria. All fields are combined with a logical ‘and.’",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "KeycloakJwtFilter",
                "ofType": null
>>>>>>> chore: add basic SelectOperator component
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
=======
              "name": "none",
              "description": "No related `KeycloakJwt` matches the filter criteria. All fields are combined with a logical ‘and.’",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "KeycloakJwtFilter",
                "ofType": null
>>>>>>> chore: add basic SelectOperator component
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
          "name": "CifUserCifUsersByProjectCreatedByAndUpdatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `Project`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projectsByUpdatedBy",
              "description": "Reads and enables pagination through a set of `Project`.",
=======
          "name": "CifUserCifUsersByCifUserCreatedByAndUpdatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `CifUser`.",
          "fields": [
            {
<<<<<<< HEAD
              "name": "cifUsersByUpdatedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
>>>>>>> chore: add basic SelectOperator component
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `CifUser`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "CifUsersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CifUsersConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
<<<<<<< HEAD
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserCifUsersByProjectDeletedByAndCreatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `Project`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `Project`, and the cursor to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CifUserCifUsersByProjectDeletedByAndCreatedByManyToManyEdge",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserCifUsersByProjectDeletedByAndCreatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `Project`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
=======
            },
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
=======
              "name": "some",
              "description": "Some related `KeycloakJwt` matches the filter criteria. All fields are combined with a logical ‘and.’",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "KeycloakJwtFilter",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CifUserToManyOperatorFilter",
          "description": "A filter to be used against many `Operator` object types. All fields are combined with a logical ‘and.’",
          "fields": null,
          "inputFields": [
            {
              "name": "every",
              "description": "Every related `Operator` matches the filter criteria. All fields are combined with a logical ‘and.’",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "OperatorFilter",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "projectsByCreatedBy",
              "description": "Reads and enables pagination through a set of `Project`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `Project`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "ProjectsOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProjectsConnection",
                  "ofType": null
                }
=======
<<<<<<< HEAD
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
=======
              "name": "none",
              "description": "No related `Operator` matches the filter criteria. All fields are combined with a logical ‘and.’",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "OperatorFilter",
>>>>>>> chore: add basic SelectOperator component
                "ofType": null
>>>>>>> chore: add basic SelectOperator component
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
          "name": "CifUserCifUsersByProjectDeletedByAndUpdatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `Project`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `Project`, and the cursor to aid in pagination.",
=======
          "name": "CifUserCifUsersByCifUserDeletedByAndCreatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `CifUser`.",
          "fields": [
            {
<<<<<<< HEAD
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `CifUser`, and the cursor to aid in pagination.",
>>>>>>> chore: add basic SelectOperator component
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
<<<<<<< HEAD
                      "name": "CifUserCifUsersByProjectDeletedByAndUpdatedByManyToManyEdge",
=======
                      "name": "CifUserCifUsersByCifUserDeletedByAndCreatedByManyToManyEdge",
>>>>>>> chore: add basic SelectOperator component
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
<<<<<<< HEAD
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserCifUsersByProjectDeletedByAndUpdatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `Project`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
=======
=======
              "name": "some",
              "description": "Some related `Operator` matches the filter criteria. All fields are combined with a logical ‘and.’",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "OperatorFilter",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CifUserToManyProjectFilter",
          "description": "A filter to be used against many `Project` object types. All fields are combined with a logical ‘and.’",
          "fields": null,
          "inputFields": [
            {
              "name": "every",
              "description": "Every related `Project` matches the filter criteria. All fields are combined with a logical ‘and.’",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "ProjectFilter",
                "ofType": null
>>>>>>> chore: add basic SelectOperator component
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
=======
              "name": "none",
              "description": "No related `Project` matches the filter criteria. All fields are combined with a logical ‘and.’",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "ProjectFilter",
>>>>>>> chore: add basic SelectOperator component
                "ofType": null
>>>>>>> chore: add basic SelectOperator component
              },
              "isDeprecated": false,
              "deprecationReason": null
<<<<<<< HEAD
            },
            {
              "name": "projectsByUpdatedBy",
              "description": "Reads and enables pagination through a set of `Project`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `Project`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "ProjectsOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProjectsConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserCifUsersByProjectManagerCifUserIdAndCreatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `ProjectManager`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `ProjectManager`, and the cursor to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CifUserCifUsersByProjectManagerCifUserIdAndCreatedByManyToManyEdge",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserCifUsersByProjectManagerCifUserIdAndCreatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `ProjectManager`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projectManagersByCreatedBy",
              "description": "Reads and enables pagination through a set of `ProjectManager`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectManagerCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectManagerFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `ProjectManager`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "ProjectManagersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProjectManagersConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserCifUsersByProjectManagerCifUserIdAndDeletedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `ProjectManager`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `ProjectManager`, and the cursor to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CifUserCifUsersByProjectManagerCifUserIdAndDeletedByManyToManyEdge",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserCifUsersByProjectManagerCifUserIdAndDeletedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `ProjectManager`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projectManagersByDeletedBy",
              "description": "Reads and enables pagination through a set of `ProjectManager`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectManagerCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectManagerFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `ProjectManager`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "ProjectManagersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProjectManagersConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserCifUsersByProjectManagerCifUserIdAndUpdatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `ProjectManager`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `ProjectManager`, and the cursor to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CifUserCifUsersByProjectManagerCifUserIdAndUpdatedByManyToManyEdge",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserCifUsersByProjectManagerCifUserIdAndUpdatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `ProjectManager`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projectManagersByUpdatedBy",
              "description": "Reads and enables pagination through a set of `ProjectManager`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectManagerCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectManagerFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `ProjectManager`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "ProjectManagersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProjectManagersConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserCifUsersByProjectManagerCreatedByAndCifUserIdManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `ProjectManager`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `ProjectManager`, and the cursor to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CifUserCifUsersByProjectManagerCreatedByAndCifUserIdManyToManyEdge",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserCifUsersByProjectManagerCreatedByAndCifUserIdManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `ProjectManager`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projectManagersByCifUserId",
              "description": "Reads and enables pagination through a set of `ProjectManager`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectManagerCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectManagerFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `ProjectManager`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "ProjectManagersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProjectManagersConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserCifUsersByProjectManagerCreatedByAndDeletedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `ProjectManager`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `ProjectManager`, and the cursor to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CifUserCifUsersByProjectManagerCreatedByAndDeletedByManyToManyEdge",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserCifUsersByProjectManagerCreatedByAndDeletedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `ProjectManager`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projectManagersByDeletedBy",
              "description": "Reads and enables pagination through a set of `ProjectManager`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectManagerCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectManagerFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `ProjectManager`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "ProjectManagersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProjectManagersConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserCifUsersByProjectManagerCreatedByAndUpdatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `ProjectManager`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `ProjectManager`, and the cursor to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CifUserCifUsersByProjectManagerCreatedByAndUpdatedByManyToManyEdge",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserCifUsersByProjectManagerCreatedByAndUpdatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `ProjectManager`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projectManagersByUpdatedBy",
              "description": "Reads and enables pagination through a set of `ProjectManager`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectManagerCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectManagerFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `ProjectManager`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "ProjectManagersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProjectManagersConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserCifUsersByProjectManagerDeletedByAndCifUserIdManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `ProjectManager`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `ProjectManager`, and the cursor to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CifUserCifUsersByProjectManagerDeletedByAndCifUserIdManyToManyEdge",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserCifUsersByProjectManagerDeletedByAndCifUserIdManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `ProjectManager`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projectManagersByCifUserId",
              "description": "Reads and enables pagination through a set of `ProjectManager`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectManagerCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectManagerFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `ProjectManager`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "ProjectManagersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProjectManagersConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserCifUsersByProjectManagerDeletedByAndCreatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `ProjectManager`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `ProjectManager`, and the cursor to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CifUserCifUsersByProjectManagerDeletedByAndCreatedByManyToManyEdge",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserCifUsersByProjectManagerDeletedByAndCreatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `ProjectManager`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projectManagersByCreatedBy",
              "description": "Reads and enables pagination through a set of `ProjectManager`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectManagerCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectManagerFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `ProjectManager`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "ProjectManagersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProjectManagersConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserCifUsersByProjectManagerDeletedByAndUpdatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `ProjectManager`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `ProjectManager`, and the cursor to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CifUserCifUsersByProjectManagerDeletedByAndUpdatedByManyToManyEdge",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserCifUsersByProjectManagerDeletedByAndUpdatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `ProjectManager`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projectManagersByUpdatedBy",
              "description": "Reads and enables pagination through a set of `ProjectManager`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectManagerCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectManagerFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `ProjectManager`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "ProjectManagersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProjectManagersConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserCifUsersByProjectManagerUpdatedByAndCifUserIdManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `ProjectManager`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `ProjectManager`, and the cursor to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CifUserCifUsersByProjectManagerUpdatedByAndCifUserIdManyToManyEdge",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserCifUsersByProjectManagerUpdatedByAndCifUserIdManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `ProjectManager`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projectManagersByCifUserId",
              "description": "Reads and enables pagination through a set of `ProjectManager`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectManagerCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectManagerFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `ProjectManager`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "ProjectManagersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProjectManagersConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserCifUsersByProjectManagerUpdatedByAndCreatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `ProjectManager`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `ProjectManager`, and the cursor to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CifUserCifUsersByProjectManagerUpdatedByAndCreatedByManyToManyEdge",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserCifUsersByProjectManagerUpdatedByAndCreatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `ProjectManager`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projectManagersByCreatedBy",
              "description": "Reads and enables pagination through a set of `ProjectManager`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectManagerCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectManagerFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `ProjectManager`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "ProjectManagersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProjectManagersConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserCifUsersByProjectManagerUpdatedByAndDeletedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `ProjectManager`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `ProjectManager`, and the cursor to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CifUserCifUsersByProjectManagerUpdatedByAndDeletedByManyToManyEdge",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserCifUsersByProjectManagerUpdatedByAndDeletedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `ProjectManager`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projectManagersByDeletedBy",
              "description": "Reads and enables pagination through a set of `ProjectManager`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectManagerCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectManagerFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `ProjectManager`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "ProjectManagersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProjectManagersConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserCifUsersByProjectUpdatedByAndCreatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `Project`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `Project`, and the cursor to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CifUserCifUsersByProjectUpdatedByAndCreatedByManyToManyEdge",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserCifUsersByProjectUpdatedByAndCreatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `Project`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projectsByCreatedBy",
              "description": "Reads and enables pagination through a set of `Project`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `Project`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "ProjectsOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProjectsConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserCifUsersByProjectUpdatedByAndDeletedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `Project`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `Project`, and the cursor to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CifUserCifUsersByProjectUpdatedByAndDeletedByManyToManyEdge",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserCifUsersByProjectUpdatedByAndDeletedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `Project`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projectsByDeletedBy",
              "description": "Reads and enables pagination through a set of `Project`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `Project`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "ProjectsOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProjectsConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CifUserCondition",
          "description": "A condition to be used against `CifUser` object types. All fields are tested for equality and combined with a logical ‘and.’",
          "fields": null,
          "inputFields": [
            {
              "name": "createdAt",
              "description": "Checks for equality with the object’s `createdAt` field.",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "createdBy",
              "description": "Checks for equality with the object’s `createdBy` field.",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "deletedAt",
              "description": "Checks for equality with the object’s `deletedAt` field.",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "deletedBy",
              "description": "Checks for equality with the object’s `deletedBy` field.",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "emailAddress",
              "description": "Checks for equality with the object’s `emailAddress` field.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "firstName",
              "description": "Checks for equality with the object’s `firstName` field.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "lastName",
              "description": "Checks for equality with the object’s `lastName` field.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "rowId",
              "description": "Checks for equality with the object’s `rowId` field.",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "updatedAt",
              "description": "Checks for equality with the object’s `updatedAt` field.",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "updatedBy",
              "description": "Checks for equality with the object’s `updatedBy` field.",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "uuid",
              "description": "Checks for equality with the object’s `uuid` field.",
              "type": {
                "kind": "SCALAR",
                "name": "UUID",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CifUserFilter",
          "description": "A filter to be used against `CifUser` object types. All fields are combined with a logical ‘and.’",
          "fields": null,
          "inputFields": [
            {
              "name": "and",
              "description": "Checks for all expressions in this list.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserFilter",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "attachmentsByCreatedBy",
              "description": "Filter by the object’s `attachmentsByCreatedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserToManyAttachmentFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "attachmentsByCreatedByExist",
              "description": "Some related `attachmentsByCreatedBy` exist.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "attachmentsByDeletedBy",
              "description": "Filter by the object’s `attachmentsByDeletedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserToManyAttachmentFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "attachmentsByDeletedByExist",
              "description": "Some related `attachmentsByDeletedBy` exist.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "attachmentsByUpdatedBy",
              "description": "Filter by the object’s `attachmentsByUpdatedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserToManyAttachmentFilter",
                "ofType": null
              },
              "defaultValue": null
=======
>>>>>>> chore: add basic SelectOperator component
            },
            {
<<<<<<< HEAD
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
              "type": {
<<<<<<< HEAD
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "changeStatusesByCreatedBy",
              "description": "Filter by the object’s `changeStatusesByCreatedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserToManyChangeStatusFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "changeStatusesByCreatedByExist",
              "description": "Some related `changeStatusesByCreatedBy` exist.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "changeStatusesByDeletedBy",
              "description": "Filter by the object’s `changeStatusesByDeletedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserToManyChangeStatusFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "changeStatusesByDeletedByExist",
              "description": "Some related `changeStatusesByDeletedBy` exist.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "changeStatusesByUpdatedBy",
              "description": "Filter by the object’s `changeStatusesByUpdatedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserToManyChangeStatusFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "changeStatusesByUpdatedByExist",
              "description": "Some related `changeStatusesByUpdatedBy` exist.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "cifUserByCreatedBy",
              "description": "Filter by the object’s `cifUserByCreatedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "cifUserByCreatedByExists",
              "description": "A related `cifUserByCreatedBy` exists.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "cifUserByDeletedBy",
              "description": "Filter by the object’s `cifUserByDeletedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "cifUserByDeletedByExists",
              "description": "A related `cifUserByDeletedBy` exists.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "cifUserByUpdatedBy",
              "description": "Filter by the object’s `cifUserByUpdatedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "cifUserByUpdatedByExists",
              "description": "A related `cifUserByUpdatedBy` exists.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "cifUsersByCreatedBy",
              "description": "Filter by the object’s `cifUsersByCreatedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserToManyCifUserFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "cifUsersByCreatedByExist",
              "description": "Some related `cifUsersByCreatedBy` exist.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "cifUsersByDeletedBy",
              "description": "Filter by the object’s `cifUsersByDeletedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserToManyCifUserFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "cifUsersByDeletedByExist",
              "description": "Some related `cifUsersByDeletedBy` exist.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "cifUsersByUpdatedBy",
              "description": "Filter by the object’s `cifUsersByUpdatedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserToManyCifUserFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "cifUsersByUpdatedByExist",
              "description": "Some related `cifUsersByUpdatedBy` exist.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "createdAt",
              "description": "Filter by the object’s `createdAt` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DatetimeFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "createdBy",
              "description": "Filter by the object’s `createdBy` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IntFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "deletedAt",
              "description": "Filter by the object’s `deletedAt` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DatetimeFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "deletedBy",
              "description": "Filter by the object’s `deletedBy` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IntFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "emailAddress",
              "description": "Filter by the object’s `emailAddress` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "firstName",
              "description": "Filter by the object’s `firstName` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "fundingStreamsByCreatedBy",
              "description": "Filter by the object’s `fundingStreamsByCreatedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserToManyFundingStreamFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "fundingStreamsByCreatedByExist",
              "description": "Some related `fundingStreamsByCreatedBy` exist.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "fundingStreamsByDeletedBy",
              "description": "Filter by the object’s `fundingStreamsByDeletedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserToManyFundingStreamFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "fundingStreamsByDeletedByExist",
              "description": "Some related `fundingStreamsByDeletedBy` exist.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "fundingStreamsByUpdatedBy",
              "description": "Filter by the object’s `fundingStreamsByUpdatedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserToManyFundingStreamFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "fundingStreamsByUpdatedByExist",
              "description": "Some related `fundingStreamsByUpdatedBy` exist.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "keycloakJwtsBySub",
              "description": "Filter by the object’s `keycloakJwtsBySub` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserToManyKeycloakJwtFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "keycloakJwtsBySubExist",
              "description": "Some related `keycloakJwtsBySub` exist.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "lastName",
              "description": "Filter by the object’s `lastName` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Negates the expression.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "or",
              "description": "Checks for any expressions in this list.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserFilter",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "projectManagersByCifUserId",
              "description": "Filter by the object’s `projectManagersByCifUserId` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserToManyProjectManagerFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "projectManagersByCifUserIdExist",
              "description": "Some related `projectManagersByCifUserId` exist.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "projectManagersByCreatedBy",
              "description": "Filter by the object’s `projectManagersByCreatedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserToManyProjectManagerFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "projectManagersByCreatedByExist",
              "description": "Some related `projectManagersByCreatedBy` exist.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "projectManagersByDeletedBy",
              "description": "Filter by the object’s `projectManagersByDeletedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserToManyProjectManagerFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "projectManagersByDeletedByExist",
              "description": "Some related `projectManagersByDeletedBy` exist.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "projectManagersByUpdatedBy",
              "description": "Filter by the object’s `projectManagersByUpdatedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserToManyProjectManagerFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "projectManagersByUpdatedByExist",
              "description": "Some related `projectManagersByUpdatedBy` exist.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "projectsByCreatedBy",
              "description": "Filter by the object’s `projectsByCreatedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserToManyProjectFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "projectsByCreatedByExist",
              "description": "Some related `projectsByCreatedBy` exist.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "projectsByDeletedBy",
              "description": "Filter by the object’s `projectsByDeletedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserToManyProjectFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "projectsByDeletedByExist",
              "description": "Some related `projectsByDeletedBy` exist.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "projectsByUpdatedBy",
              "description": "Filter by the object’s `projectsByUpdatedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserToManyProjectFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "projectsByUpdatedByExist",
              "description": "Some related `projectsByUpdatedBy` exist.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "rowId",
              "description": "Filter by the object’s `rowId` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IntFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "updatedAt",
              "description": "Filter by the object’s `updatedAt` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DatetimeFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "updatedBy",
              "description": "Filter by the object’s `updatedBy` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IntFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "uuid",
              "description": "Filter by the object’s `uuid` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "UUIDFilter",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserFundingStreamsByProjectCreatedByAndFundingStreamIdManyToManyConnection",
          "description": "A connection to a list of `FundingStream` values, with data from `Project`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `FundingStream`, info from the `Project`, and the cursor to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CifUserFundingStreamsByProjectCreatedByAndFundingStreamIdManyToManyEdge",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of `FundingStream` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "FundingStream",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "The count of *all* `FundingStream` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserFundingStreamsByProjectCreatedByAndFundingStreamIdManyToManyEdge",
          "description": "A `FundingStream` edge in the connection, with data from `Project`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `FundingStream` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "FundingStream",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projectsByFundingStreamId",
              "description": "Reads and enables pagination through a set of `Project`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `Project`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "ProjectsOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProjectsConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserFundingStreamsByProjectDeletedByAndFundingStreamIdManyToManyConnection",
          "description": "A connection to a list of `FundingStream` values, with data from `Project`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `FundingStream`, info from the `Project`, and the cursor to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CifUserFundingStreamsByProjectDeletedByAndFundingStreamIdManyToManyEdge",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of `FundingStream` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "FundingStream",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "The count of *all* `FundingStream` you could get from the connection.",
              "args": [],
              "type": {
=======
>>>>>>> chore: add basic SelectOperator component
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
<<<<<<< HEAD
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserFundingStreamsByProjectDeletedByAndFundingStreamIdManyToManyEdge",
          "description": "A `FundingStream` edge in the connection, with data from `Project`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `FundingStream` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "FundingStream",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projectsByFundingStreamId",
              "description": "Reads and enables pagination through a set of `Project`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `Project`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "ProjectsOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProjectsConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserFundingStreamsByProjectUpdatedByAndFundingStreamIdManyToManyConnection",
          "description": "A connection to a list of `FundingStream` values, with data from `Project`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `FundingStream`, info from the `Project`, and the cursor to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CifUserFundingStreamsByProjectUpdatedByAndFundingStreamIdManyToManyEdge",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of `FundingStream` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "FundingStream",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "The count of *all* `FundingStream` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserFundingStreamsByProjectUpdatedByAndFundingStreamIdManyToManyEdge",
          "description": "A `FundingStream` edge in the connection, with data from `Project`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `FundingStream` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "FundingStream",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projectsByFundingStreamId",
              "description": "Reads and enables pagination through a set of `Project`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `Project`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "ProjectsOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProjectsConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CifUserInput",
          "description": "An input for mutations affecting `CifUser`",
          "fields": null,
          "inputFields": [
            {
              "name": "createdAt",
              "description": "created at timestamp",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "createdBy",
              "description": "created by user id",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "deletedAt",
              "description": "deleted at timestamp",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "deletedBy",
              "description": "deleted by user id",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "emailAddress",
              "description": "User's email address",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "firstName",
              "description": "User's first name",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "lastName",
              "description": "User's last name",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "updatedAt",
              "description": "updated at timestamp",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "updatedBy",
              "description": "updated by user id",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "uuid",
              "description": "Universally Unique ID for the user, defined by the single sign-on provider",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "UUID",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CifUserPatch",
          "description": "Represents an update to a `CifUser`. Fields that are set will be updated.",
          "fields": null,
          "inputFields": [
            {
              "name": "createdAt",
              "description": "created at timestamp",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "createdBy",
              "description": "created by user id",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "deletedAt",
              "description": "deleted at timestamp",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "deletedBy",
              "description": "deleted by user id",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "emailAddress",
              "description": "User's email address",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "firstName",
              "description": "User's first name",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "lastName",
              "description": "User's last name",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "updatedAt",
              "description": "updated at timestamp",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "updatedBy",
              "description": "updated by user id",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "uuid",
              "description": "Universally Unique ID for the user, defined by the single sign-on provider",
              "type": {
                "kind": "SCALAR",
                "name": "UUID",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserProjectsByProjectManagerCifUserIdAndProjectIdManyToManyConnection",
          "description": "A connection to a list of `Project` values, with data from `ProjectManager`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `Project`, info from the `ProjectManager`, and the cursor to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CifUserProjectsByProjectManagerCifUserIdAndProjectIdManyToManyEdge",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of `Project` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "Project",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "The count of *all* `Project` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserProjectsByProjectManagerCifUserIdAndProjectIdManyToManyEdge",
          "description": "A `Project` edge in the connection, with data from `ProjectManager`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `Project` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Project",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projectManagersByProjectId",
              "description": "Reads and enables pagination through a set of `ProjectManager`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectManagerCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectManagerFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `ProjectManager`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "ProjectManagersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProjectManagersConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserProjectsByProjectManagerCreatedByAndProjectIdManyToManyConnection",
          "description": "A connection to a list of `Project` values, with data from `ProjectManager`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `Project`, info from the `ProjectManager`, and the cursor to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CifUserProjectsByProjectManagerCreatedByAndProjectIdManyToManyEdge",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of `Project` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "Project",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "The count of *all* `Project` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserProjectsByProjectManagerCreatedByAndProjectIdManyToManyEdge",
          "description": "A `Project` edge in the connection, with data from `ProjectManager`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `Project` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Project",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projectManagersByProjectId",
              "description": "Reads and enables pagination through a set of `ProjectManager`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectManagerCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectManagerFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `ProjectManager`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "ProjectManagersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProjectManagersConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserProjectsByProjectManagerDeletedByAndProjectIdManyToManyConnection",
          "description": "A connection to a list of `Project` values, with data from `ProjectManager`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `Project`, info from the `ProjectManager`, and the cursor to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CifUserProjectsByProjectManagerDeletedByAndProjectIdManyToManyEdge",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of `Project` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "Project",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "The count of *all* `Project` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserProjectsByProjectManagerDeletedByAndProjectIdManyToManyEdge",
          "description": "A `Project` edge in the connection, with data from `ProjectManager`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `Project` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Project",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projectManagersByProjectId",
              "description": "Reads and enables pagination through a set of `ProjectManager`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectManagerCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectManagerFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `ProjectManager`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "ProjectManagersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProjectManagersConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserProjectsByProjectManagerUpdatedByAndProjectIdManyToManyConnection",
          "description": "A connection to a list of `Project` values, with data from `ProjectManager`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `Project`, info from the `ProjectManager`, and the cursor to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CifUserProjectsByProjectManagerUpdatedByAndProjectIdManyToManyEdge",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of `Project` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "Project",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "The count of *all* `Project` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserProjectsByProjectManagerUpdatedByAndProjectIdManyToManyEdge",
          "description": "A `Project` edge in the connection, with data from `ProjectManager`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `Project` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Project",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projectManagersByProjectId",
              "description": "Reads and enables pagination through a set of `ProjectManager`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectManagerCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectManagerFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `ProjectManager`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "ProjectManagersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProjectManagersConnection",
                  "ofType": null
                }
=======
=======
              "name": "some",
              "description": "Some related `Project` matches the filter criteria. All fields are combined with a logical ‘and.’",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "ProjectFilter",
                "ofType": null
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
<<<<<<< HEAD
          "kind": "INPUT_OBJECT",
          "name": "CifUserToManyAttachmentFilter",
          "description": "A filter to be used against many `Attachment` object types. All fields are combined with a logical ‘and.’",
          "fields": null,
          "inputFields": [
            {
              "name": "every",
              "description": "Every related `Attachment` matches the filter criteria. All fields are combined with a logical ‘and.’",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "AttachmentFilter",
                "ofType": null
=======
          "kind": "OBJECT",
<<<<<<< HEAD
          "name": "CifUserCifUsersByCifUserDeletedByAndCreatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `CifUser`.",
          "fields": [
            {
              "name": "cifUsersByCreatedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `CifUser`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "CifUsersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
=======
          "name": "CifUsersConnection",
          "description": "A connection to a list of `CifUser` values.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser` and cursor to aid in pagination.",
              "args": [],
>>>>>>> chore: add basic SelectOperator component
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
<<<<<<< HEAD
                  "kind": "OBJECT",
                  "name": "CifUsersConnection",
                  "ofType": null
=======
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CifUsersEdge",
                      "ofType": null
                    }
                  }
>>>>>>> chore: add basic SelectOperator component
                }
>>>>>>> chore: add basic SelectOperator component
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "none",
              "description": "No related `Attachment` matches the filter criteria. All fields are combined with a logical ‘and.’",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "AttachmentFilter",
                "ofType": null
=======
<<<<<<< HEAD
=======
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
>>>>>>> chore: add basic SelectOperator component
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "some",
              "description": "Some related `Attachment` matches the filter criteria. All fields are combined with a logical ‘and.’",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "AttachmentFilter",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
=======
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
>>>>>>> chore: add basic SelectOperator component
          "enumValues": null,
          "possibleTypes": null
        },
        {
<<<<<<< HEAD
          "kind": "INPUT_OBJECT",
          "name": "CifUserToManyChangeStatusFilter",
          "description": "A filter to be used against many `ChangeStatus` object types. All fields are combined with a logical ‘and.’",
          "fields": null,
          "inputFields": [
            {
              "name": "every",
              "description": "Every related `ChangeStatus` matches the filter criteria. All fields are combined with a logical ‘and.’",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "ChangeStatusFilter",
=======
          "kind": "OBJECT",
          "name": "CifUsersEdge",
          "description": "A `CifUser` edge in the connection.",
          "fields": [
            {
>>>>>>> chore: add basic SelectOperator component
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
>>>>>>> chore: add basic SelectOperator component
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "none",
              "description": "No related `ChangeStatus` matches the filter criteria. All fields are combined with a logical ‘and.’",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "ChangeStatusFilter",
=======
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
>>>>>>> chore: add basic SelectOperator component
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
<<<<<<< HEAD
          "kind": "OBJECT",
          "name": "CifUserCifUsersByCifUserDeletedByAndUpdatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `CifUser`.",
          "fields": [
            {
<<<<<<< HEAD
              "name": "some",
              "description": "Some related `ChangeStatus` matches the filter criteria. All fields are combined with a logical ‘and.’",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "ChangeStatusFilter",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CifUserToManyCifUserFilter",
          "description": "A filter to be used against many `CifUser` object types. All fields are combined with a logical ‘and.’",
          "fields": null,
          "inputFields": [
            {
              "name": "every",
              "description": "Every related `CifUser` matches the filter criteria. All fields are combined with a logical ‘and.’",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "none",
              "description": "No related `CifUser` matches the filter criteria. All fields are combined with a logical ‘and.’",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "some",
              "description": "Some related `CifUser` matches the filter criteria. All fields are combined with a logical ‘and.’",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserFilter",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CifUserToManyFundingStreamFilter",
          "description": "A filter to be used against many `FundingStream` object types. All fields are combined with a logical ‘and.’",
          "fields": null,
          "inputFields": [
            {
              "name": "every",
              "description": "Every related `FundingStream` matches the filter criteria. All fields are combined with a logical ‘and.’",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "FundingStreamFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "none",
              "description": "No related `FundingStream` matches the filter criteria. All fields are combined with a logical ‘and.’",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "FundingStreamFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "some",
              "description": "Some related `FundingStream` matches the filter criteria. All fields are combined with a logical ‘and.’",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "FundingStreamFilter",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CifUserToManyKeycloakJwtFilter",
          "description": "A filter to be used against many `KeycloakJwt` object types. All fields are combined with a logical ‘and.’",
          "fields": null,
          "inputFields": [
            {
              "name": "every",
              "description": "Every related `KeycloakJwt` matches the filter criteria. All fields are combined with a logical ‘and.’",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "KeycloakJwtFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "none",
              "description": "No related `KeycloakJwt` matches the filter criteria. All fields are combined with a logical ‘and.’",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "KeycloakJwtFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "some",
              "description": "Some related `KeycloakJwt` matches the filter criteria. All fields are combined with a logical ‘and.’",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "KeycloakJwtFilter",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CifUserToManyProjectFilter",
          "description": "A filter to be used against many `Project` object types. All fields are combined with a logical ‘and.’",
          "fields": null,
          "inputFields": [
            {
              "name": "every",
              "description": "Every related `Project` matches the filter criteria. All fields are combined with a logical ‘and.’",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "ProjectFilter",
                "ofType": null
=======
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `CifUser`, and the cursor to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CifUserCifUsersByCifUserDeletedByAndUpdatedByManyToManyEdge",
                      "ofType": null
                    }
                  }
                }
              },
=======
          "kind": "ENUM",
          "name": "CifUsersOrderBy",
          "description": "Methods to use when ordering `CifUser`.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "CREATED_AT_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CREATED_AT_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CREATED_BY_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CREATED_BY_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DELETED_AT_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DELETED_AT_DESC",
              "description": null,
>>>>>>> chore: add basic SelectOperator component
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
              },
=======
              "name": "DELETED_BY_ASC",
              "description": null,
>>>>>>> chore: add basic SelectOperator component
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
>>>>>>> chore: add basic SelectOperator component
              },
=======
              "name": "DELETED_BY_DESC",
              "description": null,
>>>>>>> chore: add basic SelectOperator component
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "none",
              "description": "No related `Project` matches the filter criteria. All fields are combined with a logical ‘and.’",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "ProjectFilter",
                "ofType": null
=======
<<<<<<< HEAD
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
>>>>>>> chore: add basic SelectOperator component
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserCifUsersByCifUserDeletedByAndUpdatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `CifUser`.",
          "fields": [
            {
<<<<<<< HEAD
              "name": "some",
              "description": "Some related `Project` matches the filter criteria. All fields are combined with a logical ‘and.’",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "ProjectFilter",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CifUserToManyProjectManagerFilter",
          "description": "A filter to be used against many `ProjectManager` object types. All fields are combined with a logical ‘and.’",
          "fields": null,
          "inputFields": [
            {
              "name": "every",
              "description": "Every related `ProjectManager` matches the filter criteria. All fields are combined with a logical ‘and.’",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "ProjectManagerFilter",
                "ofType": null
=======
              "name": "cifUsersByUpdatedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `CifUser`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "CifUsersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CifUsersConnection",
                  "ofType": null
                }
>>>>>>> chore: add basic SelectOperator component
              },
=======
              "name": "EMAIL_ADDRESS_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "none",
              "description": "No related `ProjectManager` matches the filter criteria. All fields are combined with a logical ‘and.’",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "ProjectManagerFilter",
=======
              "name": "EMAIL_ADDRESS_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FIRST_NAME_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FIRST_NAME_DESC",
              "description": null,
>>>>>>> chore: add basic SelectOperator component
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
>>>>>>> chore: add basic SelectOperator component
                "ofType": null
              },
=======
              "name": "ID_ASC",
              "description": null,
>>>>>>> chore: add basic SelectOperator component
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "some",
              "description": "Some related `ProjectManager` matches the filter criteria. All fields are combined with a logical ‘and.’",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "ProjectManagerFilter",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
=======
<<<<<<< HEAD
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
>>>>>>> chore: add basic SelectOperator component
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
          "name": "CifUsersConnection",
          "description": "A connection to a list of `CifUser` values.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser` and cursor to aid in pagination.",
=======
          "name": "CifUserCifUsersByCifUserUpdatedByAndCreatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `CifUser`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `CifUser`, and the cursor to aid in pagination.",
>>>>>>> chore: add basic SelectOperator component
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
<<<<<<< HEAD
                      "name": "CifUsersEdge",
=======
                      "name": "CifUserCifUsersByCifUserUpdatedByAndCreatedByManyToManyEdge",
>>>>>>> chore: add basic SelectOperator component
                      "ofType": null
                    }
                  }
                }
              },
<<<<<<< HEAD
=======
=======
              "name": "ID_DESC",
              "description": null,
>>>>>>> chore: add basic SelectOperator component
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
              },
=======
              "name": "LAST_NAME_ASC",
              "description": null,
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
=======
<<<<<<< HEAD
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
>>>>>>> chore: add basic SelectOperator component
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
<<<<<<< HEAD
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
=======
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
              },
=======
              "name": "LAST_NAME_DESC",
              "description": null,
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
=======
<<<<<<< HEAD
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
>>>>>>> chore: add basic SelectOperator component
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
<<<<<<< HEAD
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUsersEdge",
          "description": "A `CifUser` edge in the connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
=======
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
=======
              "name": "NATURAL",
              "description": null,
>>>>>>> chore: add basic SelectOperator component
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
>>>>>>> chore: add basic SelectOperator component
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
<<<<<<< HEAD
          "kind": "ENUM",
          "name": "CifUsersOrderBy",
          "description": "Methods to use when ordering `CifUser`.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "CREATED_AT_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CREATED_AT_DESC",
=======
          "kind": "OBJECT",
          "name": "CifUserCifUsersByCifUserUpdatedByAndCreatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `CifUser`.",
          "fields": [
            {
              "name": "cifUsersByCreatedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `CifUser`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "CifUsersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CifUsersConnection",
                  "ofType": null
                }
              },
=======
              "name": "PRIMARY_KEY_ASC",
>>>>>>> chore: add basic SelectOperator component
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "CREATED_BY_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CREATED_BY_DESC",
              "description": null,
=======
              "name": "PRIMARY_KEY_DESC",
              "description": null,
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "DELETED_AT_ASC",
              "description": null,
=======
<<<<<<< HEAD
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
=======
              "name": "UPDATED_AT_ASC",
              "description": null,
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserCifUsersByOperatorDeletedByAndCreatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `Operator`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
>>>>>>> refactor: update schema & reorder sqitch plan
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
<<<<<<< HEAD
              "name": "DELETED_AT_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DELETED_BY_ASC",
=======
<<<<<<< HEAD
=======
>>>>>>> refactor: update schema & reorder sqitch plan
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
<<<<<<< HEAD
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserCifUsersByCifUserUpdatedByAndDeletedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `CifUser`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `CifUser`, and the cursor to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CifUserCifUsersByCifUserUpdatedByAndDeletedByManyToManyEdge",
                      "ofType": null
                    }
                  }
                }
              },
=======
              "name": "UPDATED_AT_DESC",
>>>>>>> chore: add basic SelectOperator component
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "DELETED_BY_DESC",
              "description": null,
=======
              "name": "UPDATED_BY_ASC",
              "description": null,
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "EMAIL_ADDRESS_ASC",
=======
<<<<<<< HEAD
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
=======
            },
            {
              "name": "operatorsByCreatedBy",
              "description": "Reads and enables pagination through a set of `Operator`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "OperatorCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "OperatorFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `Operator`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "OperatorsOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
>>>>>>> refactor: update schema & reorder sqitch plan
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
<<<<<<< HEAD
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
              },
=======
              "name": "UPDATED_BY_DESC",
>>>>>>> chore: add basic SelectOperator component
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "EMAIL_ADDRESS_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FIRST_NAME_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FIRST_NAME_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ID_ASC",
              "description": null,
=======
              "name": "UUID_ASC",
              "description": null,
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "ID_DESC",
              "description": null,
=======
<<<<<<< HEAD
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
=======
                  "kind": "OBJECT",
                  "name": "OperatorsConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserCifUsersByOperatorDeletedByAndUpdatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `Operator`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `Operator`, and the cursor to aid in pagination.",
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
<<<<<<< HEAD
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
>>>>>>> chore: add basic SelectOperator component
=======
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CifUserCifUsersByOperatorDeletedByAndUpdatedByManyToManyEdge",
                      "ofType": null
                    }
                  }
                }
              },
>>>>>>> refactor: update schema & reorder sqitch plan
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
<<<<<<< HEAD
              "name": "LAST_NAME_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LAST_NAME_DESC",
              "description": null,
=======
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
=======
              "name": "UUID_DESC",
              "description": null,
>>>>>>> chore: add basic SelectOperator component
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
<<<<<<< HEAD
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserCifUsersByCifUserUpdatedByAndDeletedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `CifUser`.",
          "fields": [
            {
              "name": "cifUsersByDeletedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `CifUser`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "CifUsersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CifUsersConnection",
                  "ofType": null
                }
              },
>>>>>>> chore: add basic SelectOperator component
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "NATURAL",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PRIMARY_KEY_ASC",
              "description": null,
=======
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
=======
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CreateAttachmentInput",
          "description": "All input for the create `Attachment` mutation.",
          "fields": null,
          "inputFields": [
            {
              "name": "attachment",
              "description": "The `Attachment` to be created by this mutation.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "AttachmentInput",
                  "ofType": null
                }
>>>>>>> chore: add basic SelectOperator component
              },
>>>>>>> chore: add basic SelectOperator component
=======
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
              },
>>>>>>> refactor: update schema & reorder sqitch plan
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
<<<<<<< HEAD
              "name": "PRIMARY_KEY_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UPDATED_AT_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UPDATED_AT_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UPDATED_BY_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UPDATED_BY_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UUID_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UUID_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CreateAttachmentInput",
          "description": "All input for the create `Attachment` mutation.",
          "fields": null,
          "inputFields": [
            {
              "name": "attachment",
              "description": "The `Attachment` to be created by this mutation.",
=======
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
>>>>>>> refactor: update schema & reorder sqitch plan
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
<<<<<<< HEAD
                  "kind": "INPUT_OBJECT",
                  "name": "AttachmentInput",
=======
                  "kind": "OBJECT",
                  "name": "PageInfo",
>>>>>>> refactor: update schema & reorder sqitch plan
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "clientMutationId",
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CreateAttachmentPayload",
          "description": "The output of our create `Attachment` mutation.",
          "fields": [
            {
              "name": "attachment",
              "description": "The `Attachment` that was created by this mutation.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Attachment",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "attachmentEdge",
              "description": "An edge for our `Attachment`. May be used by Relay 1.",
              "args": [
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `Attachment`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "AttachmentsOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "AttachmentsEdge",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUserByCreatedBy",
              "description": "Reads a single `CifUser` that is related to this `Attachment`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUserByDeletedBy",
              "description": "Reads a single `CifUser` that is related to this `Attachment`.",
=======
<<<<<<< HEAD
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
>>>>>>> chore: add basic SelectOperator component
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
<<<<<<< HEAD
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUserByUpdatedBy",
              "description": "Reads a single `CifUser` that is related to this `Attachment`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "clientMutationId",
              "description": "The exact same `clientMutationId` that was provided in the mutation input,\nunchanged and unused. May be used by a client to track mutations.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
=======
=======
              "name": "clientMutationId",
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserCifUsersByOperatorDeletedByAndUpdatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `Operator`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
>>>>>>> refactor: update schema & reorder sqitch plan
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
<<<<<<< HEAD
            },
            {
<<<<<<< HEAD
              "name": "query",
              "description": "Our root query field type. Allows us to run any query from our mutation payload.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Query",
=======
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
>>>>>>> refactor: update schema & reorder sqitch plan
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "operatorsByUpdatedBy",
              "description": "Reads and enables pagination through a set of `Operator`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "OperatorCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "OperatorFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `Operator`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "OperatorsOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "OperatorsConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
<<<<<<< HEAD
          "kind": "INPUT_OBJECT",
          "name": "CreateChangeStatusInput",
          "description": "All input for the create `ChangeStatus` mutation.",
          "fields": null,
          "inputFields": [
            {
              "name": "changeStatus",
              "description": "The `ChangeStatus` to be created by this mutation.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "ChangeStatusInput",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "clientMutationId",
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
=======
>>>>>>> chore: add basic SelectOperator component
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
          "name": "CreateChangeStatusPayload",
          "description": "The output of our create `ChangeStatus` mutation.",
          "fields": [
            {
              "name": "changeStatus",
              "description": "The `ChangeStatus` that was created by this mutation.",
=======
<<<<<<< HEAD
          "name": "CifUserCifUsersByProjectCreatedByAndDeletedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `Project`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `Project`, and the cursor to aid in pagination.",
>>>>>>> chore: add basic SelectOperator component
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "ChangeStatus",
=======
          "kind": "OBJECT",
          "name": "CifUserCifUsersByOperatorUpdatedByAndCreatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `Operator`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `Operator`, and the cursor to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CifUserCifUsersByOperatorUpdatedByAndCreatedByManyToManyEdge",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserCifUsersByOperatorUpdatedByAndCreatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `Operator`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
>>>>>>> refactor: update schema & reorder sqitch plan
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "changeStatusEdge",
              "description": "An edge for our `ChangeStatus`. May be used by Relay 1.",
              "args": [
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `ChangeStatus`.",
                  "type": {
                    "kind": "LIST",
=======
              "name": "operatorsByCreatedBy",
              "description": "Reads and enables pagination through a set of `Operator`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "OperatorCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "OperatorFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `Operator`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "OperatorsOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "OperatorsConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserCifUsersByOperatorUpdatedByAndDeletedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `Operator`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `Operator`, and the cursor to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
>>>>>>> refactor: update schema & reorder sqitch plan
                    "name": null,
                    "ofType": {
<<<<<<< HEAD
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "ChangeStatusesOrderBy",
                        "ofType": null
                      }
=======
                      "kind": "OBJECT",
<<<<<<< HEAD
                      "name": "CifUserCifUsersByProjectCreatedByAndDeletedByManyToManyEdge",
=======
                      "name": "CifUserCifUsersByOperatorUpdatedByAndDeletedByManyToManyEdge",
>>>>>>> refactor: update schema & reorder sqitch plan
                      "ofType": null
>>>>>>> chore: add basic SelectOperator component
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
<<<<<<< HEAD
<<<<<<< HEAD
              ],
              "type": {
                "kind": "OBJECT",
                "name": "ChangeStatusesEdge",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUserByCreatedBy",
              "description": "Reads a single `CifUser` that is related to this `ChangeStatus`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUserByDeletedBy",
              "description": "Reads a single `CifUser` that is related to this `ChangeStatus`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
=======
=======
          "name": "CreateAttachmentPayload",
          "description": "The output of our create `Attachment` mutation.",
          "fields": [
            {
              "name": "attachment",
              "description": "The `Attachment` that was created by this mutation.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Attachment",
                "ofType": null
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "cifUserByUpdatedBy",
              "description": "Reads a single `CifUser` that is related to this `ChangeStatus`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
=======
<<<<<<< HEAD
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
=======
              "name": "attachmentEdge",
              "description": "An edge for our `Attachment`. May be used by Relay 1.",
              "args": [
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `Attachment`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "AttachmentsOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "AttachmentsEdge",
                "ofType": null
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "clientMutationId",
              "description": "The exact same `clientMutationId` that was provided in the mutation input,\nunchanged and unused. May be used by a client to track mutations.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
=======
<<<<<<< HEAD
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
=======
              "name": "cifUserByCreatedBy",
              "description": "Reads a single `CifUser` that is related to this `Attachment`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
<<<<<<< HEAD
            {
<<<<<<< HEAD
              "name": "query",
              "description": "Our root query field type. Allows us to run any query from our mutation payload.",
=======
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
>>>>>>> chore: add basic SelectOperator component
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Query",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CreateCifUserInput",
          "description": "All input for the create `CifUser` mutation.",
          "fields": null,
          "inputFields": [
            {
              "name": "cifUser",
              "description": "The `CifUser` to be created by this mutation.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "CifUserInput",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "clientMutationId",
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
=======
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
>>>>>>> refactor: update schema & reorder sqitch plan
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
          "name": "CreateCifUserPayload",
          "description": "The output of our create `CifUser` mutation.",
=======
          "name": "CifUserCifUsersByProjectCreatedByAndDeletedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `Project`.",
>>>>>>> chore: add basic SelectOperator component
          "fields": [
            {
              "name": "cifUser",
              "description": "The `CifUser` that was created by this mutation.",
              "args": [],
              "type": {
<<<<<<< HEAD
                "kind": "OBJECT",
                "name": "CifUser",
=======
                "kind": "SCALAR",
                "name": "Cursor",
=======
            {
              "name": "cifUserByDeletedBy",
              "description": "Reads a single `CifUser` that is related to this `Attachment`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "cifUserByCreatedBy",
              "description": "Reads a single `CifUser` that is related to this `CifUser`.",
=======
<<<<<<< HEAD
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
>>>>>>> chore: add basic SelectOperator component
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
<<<<<<< HEAD
=======
                "ofType": null
=======
              "name": "cifUserByUpdatedBy",
              "description": "Reads a single `CifUser` that is related to this `Attachment`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
>>>>>>> chore: add basic SelectOperator component
                "ofType": null
=======
          "name": "CifUserCifUsersByOperatorUpdatedByAndDeletedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `Operator`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
>>>>>>> refactor: update schema & reorder sqitch plan
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
<<<<<<< HEAD
              "name": "cifUserByDeletedBy",
              "description": "Reads a single `CifUser` that is related to this `CifUser`.",
=======
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
<<<<<<< HEAD
=======
              "name": "clientMutationId",
              "description": "The exact same `clientMutationId` that was provided in the mutation input,\nunchanged and unused. May be used by a client to track mutations.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
>>>>>>> chore: add basic SelectOperator component
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "cifUserByUpdatedBy",
              "description": "Reads a single `CifUser` that is related to this `CifUser`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
=======
              "name": "query",
              "description": "Our root query field type. Allows us to run any query from our mutation payload.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Query",
>>>>>>> chore: add basic SelectOperator component
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
<<<<<<< HEAD
            },
            {
              "name": "cifUserEdge",
              "description": "An edge for our `CifUser`. May be used by Relay 1.",
              "args": [
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `CifUser`.",
=======
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CreateChangeStatusInput",
          "description": "All input for the create `ChangeStatus` mutation.",
          "fields": null,
          "inputFields": [
            {
              "name": "changeStatus",
              "description": "The `ChangeStatus` to be created by this mutation.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "ChangeStatusInput",
                  "ofType": null
                }
>>>>>>> chore: add basic SelectOperator component
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "projectsByDeletedBy",
              "description": "Reads and enables pagination through a set of `Project`.",
=======
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "operatorsByDeletedBy",
              "description": "Reads and enables pagination through a set of `Operator`.",
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
                    "name": "ProjectCondition",
=======
                    "name": "OperatorCondition",
>>>>>>> refactor: update schema & reorder sqitch plan
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
                    "name": "ProjectFilter",
=======
                    "name": "OperatorFilter",
>>>>>>> refactor: update schema & reorder sqitch plan
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
<<<<<<< HEAD
                  "description": "The method to use when ordering `Project`.",
>>>>>>> chore: add basic SelectOperator component
=======
                  "description": "The method to use when ordering `Operator`.",
>>>>>>> refactor: update schema & reorder sqitch plan
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
<<<<<<< HEAD
<<<<<<< HEAD
                        "name": "CifUsersOrderBy",
=======
                        "name": "ProjectsOrderBy",
>>>>>>> chore: add basic SelectOperator component
=======
                        "name": "OperatorsOrderBy",
>>>>>>> refactor: update schema & reorder sqitch plan
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "CifUsersEdge",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "clientMutationId",
              "description": "The exact same `clientMutationId` that was provided in the mutation input,\nunchanged and unused. May be used by a client to track mutations.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "query",
              "description": "Our root query field type. Allows us to run any query from our mutation payload.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Query",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CreateFormChangeInput",
          "description": "All input for the create `FormChange` mutation.",
          "fields": null,
          "inputFields": [
            {
              "name": "clientMutationId",
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "formChange",
              "description": "The `FormChange` to be created by this mutation.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
<<<<<<< HEAD
                  "kind": "INPUT_OBJECT",
                  "name": "FormChangeInput",
=======
                  "kind": "OBJECT",
<<<<<<< HEAD
                  "name": "ProjectsConnection",
>>>>>>> chore: add basic SelectOperator component
                  "ofType": null
                }
=======
              "name": "clientMutationId",
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
>>>>>>> chore: add basic SelectOperator component
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
          "name": "CreateFormChangePayload",
          "description": "The output of our create `FormChange` mutation.",
          "fields": [
            {
              "name": "changeStatusByChangeStatus",
              "description": "Reads a single `ChangeStatus` that is related to this `FormChange`.",
=======
<<<<<<< HEAD
          "name": "CifUserCifUsersByProjectCreatedByAndUpdatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `Project`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `Project`, and the cursor to aid in pagination.",
=======
          "name": "CreateChangeStatusPayload",
          "description": "The output of our create `ChangeStatus` mutation.",
          "fields": [
            {
              "name": "changeStatus",
              "description": "The `ChangeStatus` that was created by this mutation.",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "ChangeStatus",
                "ofType": null
<<<<<<< HEAD
=======
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "changeStatusEdge",
              "description": "An edge for our `ChangeStatus`. May be used by Relay 1.",
              "args": [
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `ChangeStatus`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
<<<<<<< HEAD
                      "kind": "OBJECT",
                      "name": "CifUserCifUsersByProjectCreatedByAndUpdatedByManyToManyEdge",
                      "ofType": null
=======
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "ChangeStatusesOrderBy",
                        "ofType": null
                      }
>>>>>>> chore: add basic SelectOperator component
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "ChangeStatusesEdge",
                "ofType": null
>>>>>>> chore: add basic SelectOperator component
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "clientMutationId",
              "description": "The exact same `clientMutationId` that was provided in the mutation input,\nunchanged and unused. May be used by a client to track mutations.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
=======
              "name": "cifUserByCreatedBy",
              "description": "Reads a single `CifUser` that is related to this `ChangeStatus`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
>>>>>>> chore: add basic SelectOperator component
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "formChange",
              "description": "The `FormChange` that was created by this mutation.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "FormChange",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "formChangeEdge",
              "description": "An edge for our `FormChange`. May be used by Relay 1.",
              "args": [
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `FormChange`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "FormChangesOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "FormChangesEdge",
=======
              "name": "cifUserByDeletedBy",
              "description": "Reads a single `CifUser` that is related to this `ChangeStatus`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
>>>>>>> chore: add basic SelectOperator component
                "ofType": null
=======
                  "name": "OperatorsConnection",
                  "ofType": null
                }
>>>>>>> refactor: update schema & reorder sqitch plan
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "query",
              "description": "Our root query field type. Allows us to run any query from our mutation payload.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Query",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
<<<<<<< HEAD
          "kind": "INPUT_OBJECT",
          "name": "CreateFundingStreamInput",
          "description": "All input for the create `FundingStream` mutation.",
          "fields": null,
          "inputFields": [
            {
              "name": "clientMutationId",
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "fundingStream",
              "description": "The `FundingStream` to be created by this mutation.",
=======
          "kind": "OBJECT",
          "name": "CifUserCifUsersByProjectCreatedByAndDeletedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `Project`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `Project`, and the cursor to aid in pagination.",
              "args": [],
>>>>>>> refactor: update schema & reorder sqitch plan
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
<<<<<<< HEAD
                  "kind": "INPUT_OBJECT",
                  "name": "FundingStreamInput",
                  "ofType": null
                }
              },
              "defaultValue": null
=======
              "name": "cifUserByUpdatedBy",
              "description": "Reads a single `CifUser` that is related to this `ChangeStatus`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
          "name": "CreateFundingStreamPayload",
          "description": "The output of our create `FundingStream` mutation.",
=======
          "name": "CifUserCifUsersByProjectCreatedByAndUpdatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `Project`.",
>>>>>>> chore: add basic SelectOperator component
          "fields": [
=======
            },
>>>>>>> chore: add basic SelectOperator component
            {
<<<<<<< HEAD
              "name": "cifUserByCreatedBy",
              "description": "Reads a single `CifUser` that is related to this `FundingStream`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
=======
              "name": "clientMutationId",
              "description": "The exact same `clientMutationId` that was provided in the mutation input,\nunchanged and unused. May be used by a client to track mutations.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
>>>>>>> chore: add basic SelectOperator component
                "ofType": null
=======
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CifUserCifUsersByProjectCreatedByAndDeletedByManyToManyEdge",
                      "ofType": null
                    }
                  }
                }
>>>>>>> refactor: update schema & reorder sqitch plan
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
<<<<<<< HEAD
              "name": "cifUserByDeletedBy",
              "description": "Reads a single `CifUser` that is related to this `FundingStream`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
=======
              "name": "query",
              "description": "Our root query field type. Allows us to run any query from our mutation payload.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Query",
>>>>>>> chore: add basic SelectOperator component
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
<<<<<<< HEAD
            },
            {
<<<<<<< HEAD
              "name": "cifUserByUpdatedBy",
              "description": "Reads a single `CifUser` that is related to this `FundingStream`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
=======
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
>>>>>>> refactor: update schema & reorder sqitch plan
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "clientMutationId",
              "description": "The exact same `clientMutationId` that was provided in the mutation input,\nunchanged and unused. May be used by a client to track mutations.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
=======
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
>>>>>>> refactor: update schema & reorder sqitch plan
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "fundingStream",
              "description": "The `FundingStream` that was created by this mutation.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "FundingStream",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "fundingStreamEdge",
              "description": "An edge for our `FundingStream`. May be used by Relay 1.",
              "args": [
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `FundingStream`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "FundingStreamsOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "FundingStreamsEdge",
=======
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserCifUsersByProjectCreatedByAndDeletedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `Project`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
>>>>>>> refactor: update schema & reorder sqitch plan
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "query",
              "description": "Our root query field type. Allows us to run any query from our mutation payload.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Query",
                "ofType": null
=======
              "name": "projectsByUpdatedBy",
=======
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projectsByDeletedBy",
>>>>>>> refactor: update schema & reorder sqitch plan
              "description": "Reads and enables pagination through a set of `Project`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `Project`.",
<<<<<<< HEAD
=======
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CreateCifUserInput",
          "description": "All input for the create `CifUser` mutation.",
          "fields": null,
          "inputFields": [
            {
              "name": "cifUser",
              "description": "The `CifUser` to be created by this mutation.",
=======
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "ProjectsOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
>>>>>>> refactor: update schema & reorder sqitch plan
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
<<<<<<< HEAD
                  "kind": "INPUT_OBJECT",
                  "name": "CifUserInput",
                  "ofType": null
                }
>>>>>>> chore: add basic SelectOperator component
              },
              "defaultValue": null
            },
            {
              "name": "clientMutationId",
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
<<<<<<< HEAD
          "kind": "INPUT_OBJECT",
          "name": "CreateProjectInput",
          "description": "All input for the `createProject` mutation.",
          "fields": null,
          "inputFields": [
            {
              "name": "clientMutationId",
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CreateProjectManagerInput",
          "description": "All input for the create `ProjectManager` mutation.",
          "fields": null,
          "inputFields": [
            {
              "name": "clientMutationId",
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
=======
                  "kind": "OBJECT",
                  "name": "ProjectsConnection",
                  "ofType": null
                }
>>>>>>> refactor: update schema & reorder sqitch plan
              },
              "defaultValue": null
            },
            {
              "name": "projectManager",
              "description": "The `ProjectManager` to be created by this mutation.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "ProjectManagerInput",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
          "name": "CreateProjectManagerPayload",
          "description": "The output of our create `ProjectManager` mutation.",
          "fields": [
            {
              "name": "cifUserByCifUserId",
              "description": "Reads a single `CifUser` that is related to this `ProjectManager`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUserByCreatedBy",
              "description": "Reads a single `CifUser` that is related to this `ProjectManager`.",
=======
          "kind": "OBJECT",
          "name": "CreateCifUserPayload",
          "description": "The output of our create `CifUser` mutation.",
          "fields": [
            {
              "name": "cifUser",
              "description": "The `CifUser` that was created by this mutation.",
>>>>>>> chore: add basic SelectOperator component
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
=======
          "name": "CifUserCifUsersByProjectCreatedByAndUpdatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `Project`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `Project`, and the cursor to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CifUserCifUsersByProjectCreatedByAndUpdatedByManyToManyEdge",
                      "ofType": null
                    }
                  }
                }
>>>>>>> refactor: update schema & reorder sqitch plan
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
<<<<<<< HEAD
              "name": "cifUserByDeletedBy",
              "description": "Reads a single `CifUser` that is related to this `ProjectManager`.",
=======
              "name": "cifUserByCreatedBy",
              "description": "Reads a single `CifUser` that is related to this `CifUser`.",
>>>>>>> chore: add basic SelectOperator component
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
=======
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
>>>>>>> refactor: update schema & reorder sqitch plan
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
<<<<<<< HEAD
              "name": "cifUserByUpdatedBy",
              "description": "Reads a single `CifUser` that is related to this `ProjectManager`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "clientMutationId",
              "description": "The exact same `clientMutationId` that was provided in the mutation input,\nunchanged and unused. May be used by a client to track mutations.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
=======
              "name": "cifUserByDeletedBy",
              "description": "Reads a single `CifUser` that is related to this `CifUser`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
>>>>>>> chore: add basic SelectOperator component
                "ofType": null
=======
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
>>>>>>> refactor: update schema & reorder sqitch plan
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
<<<<<<< HEAD
              "name": "projectByProjectId",
              "description": "Reads a single `Project` that is related to this `ProjectManager`.",
=======
              "name": "cifUserByUpdatedBy",
              "description": "Reads a single `CifUser` that is related to this `CifUser`.",
>>>>>>> chore: add basic SelectOperator component
=======
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
<<<<<<< HEAD
            },
            {
<<<<<<< HEAD
              "name": "projectManager",
              "description": "The `ProjectManager` that was created by this mutation.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "ProjectManager",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projectManagerEdge",
              "description": "An edge for our `ProjectManager`. May be used by Relay 1.",
=======
              "name": "cifUserEdge",
              "description": "An edge for our `CifUser`. May be used by Relay 1.",
>>>>>>> chore: add basic SelectOperator component
              "args": [
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `CifUser`.",
>>>>>>> chore: add basic SelectOperator component
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
<<<<<<< HEAD
                        "name": "ProjectsOrderBy",
=======
                        "name": "CifUsersOrderBy",
>>>>>>> chore: add basic SelectOperator component
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
<<<<<<< HEAD
                "kind": "OBJECT",
                "name": "ProjectManagersEdge",
=======
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserCifUsersByProjectCreatedByAndUpdatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `Project`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
>>>>>>> refactor: update schema & reorder sqitch plan
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "query",
              "description": "Our root query field type. Allows us to run any query from our mutation payload.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Query",
=======
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
>>>>>>> refactor: update schema & reorder sqitch plan
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
<<<<<<< HEAD
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CreateProjectPayload",
          "description": "The output of our `createProject` mutation.",
          "fields": [
            {
              "name": "changeStatusByChangeStatus",
              "description": "Reads a single `ChangeStatus` that is related to this `FormChange`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "ChangeStatus",
=======
<<<<<<< HEAD
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProjectsConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
=======
                "kind": "OBJECT",
                "name": "CifUsersEdge",
>>>>>>> chore: add basic SelectOperator component
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "clientMutationId",
              "description": "The exact same `clientMutationId` that was provided in the mutation input,\nunchanged and unused. May be used by a client to track mutations.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "formChange",
              "description": null,
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "FormChange",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "formChangeEdge",
              "description": "An edge for our `FormChange`. May be used by Relay 1.",
              "args": [
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `FormChange`.",
=======
            },
            {
              "name": "projectsByUpdatedBy",
              "description": "Reads and enables pagination through a set of `Project`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `Project`.",
>>>>>>> refactor: update schema & reorder sqitch plan
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
<<<<<<< HEAD
                        "name": "FormChangesOrderBy",
=======
                        "name": "ProjectsOrderBy",
>>>>>>> refactor: update schema & reorder sqitch plan
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
<<<<<<< HEAD
                "kind": "OBJECT",
                "name": "FormChangesEdge",
=======
              "name": "query",
              "description": "Our root query field type. Allows us to run any query from our mutation payload.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Query",
>>>>>>> chore: add basic SelectOperator component
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
<<<<<<< HEAD
            },
            {
              "name": "query",
              "description": "Our root query field type. Allows us to run any query from our mutation payload.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Query",
                "ofType": null
=======
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CreateFormChangeInput",
          "description": "All input for the create `FormChange` mutation.",
          "fields": null,
          "inputFields": [
            {
              "name": "clientMutationId",
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "formChange",
              "description": "The `FormChange` to be created by this mutation.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "FormChangeInput",
                  "ofType": null
                }
>>>>>>> chore: add basic SelectOperator component
=======
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProjectsConnection",
                  "ofType": null
                }
>>>>>>> refactor: update schema & reorder sqitch plan
              },
              "defaultValue": null
            }
          ],
<<<<<<< HEAD
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CreateUserFromSessionInput",
          "description": "All input for the `createUserFromSession` mutation.",
          "fields": null,
          "inputFields": [
            {
              "name": "clientMutationId",
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
=======
          "inputFields": null,
          "interfaces": [],
>>>>>>> refactor: update schema & reorder sqitch plan
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
          "name": "CreateUserFromSessionPayload",
          "description": "The output of our `createUserFromSession` mutation.",
          "fields": [
            {
              "name": "cifUser",
              "description": null,
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
=======
          "name": "CreateFormChangePayload",
          "description": "The output of our create `FormChange` mutation.",
          "fields": [
            {
              "name": "changeStatusByChangeStatus",
              "description": "Reads a single `ChangeStatus` that is related to this `FormChange`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "ChangeStatus",
                "ofType": null
=======
          "name": "CifUserCifUsersByProjectDeletedByAndCreatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `Project`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `Project`, and the cursor to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CifUserCifUsersByProjectDeletedByAndCreatedByManyToManyEdge",
                      "ofType": null
                    }
                  }
                }
>>>>>>> refactor: update schema & reorder sqitch plan
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "clientMutationId",
              "description": "The exact same `clientMutationId` that was provided in the mutation input,\nunchanged and unused. May be used by a client to track mutations.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
>>>>>>> chore: add basic SelectOperator component
                "ofType": null
=======
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
>>>>>>> refactor: update schema & reorder sqitch plan
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
<<<<<<< HEAD
              "name": "cifUserByCreatedBy",
              "description": "Reads a single `CifUser` that is related to this `CifUser`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
=======
              "name": "formChange",
              "description": "The `FormChange` that was created by this mutation.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "FormChange",
>>>>>>> chore: add basic SelectOperator component
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "cifUserByDeletedBy",
              "description": "Reads a single `CifUser` that is related to this `CifUser`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
=======
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
>>>>>>> refactor: update schema & reorder sqitch plan
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "cifUserByUpdatedBy",
              "description": "Reads a single `CifUser` that is related to this `CifUser`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUserEdge",
              "description": "An edge for our `CifUser`. May be used by Relay 1.",
              "args": [
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `CifUser`.",
=======
              "name": "formChangeEdge",
              "description": "An edge for our `FormChange`. May be used by Relay 1.",
              "args": [
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `FormChange`.",
>>>>>>> chore: add basic SelectOperator component
=======
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserCifUsersByProjectDeletedByAndCreatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `Project`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projectsByCreatedBy",
              "description": "Reads and enables pagination through a set of `Project`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `Project`.",
>>>>>>> refactor: update schema & reorder sqitch plan
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
<<<<<<< HEAD
<<<<<<< HEAD
                        "name": "CifUsersOrderBy",
=======
                        "name": "FormChangesOrderBy",
>>>>>>> chore: add basic SelectOperator component
=======
                        "name": "ProjectsOrderBy",
>>>>>>> refactor: update schema & reorder sqitch plan
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
<<<<<<< HEAD
                "kind": "OBJECT",
<<<<<<< HEAD
                "name": "CifUsersEdge",
=======
                "name": "FormChangesEdge",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "query",
              "description": "Our root query field type. Allows us to run any query from our mutation payload.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Query",
>>>>>>> chore: add basic SelectOperator component
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
<<<<<<< HEAD
            },
            {
              "name": "clientMutationId",
              "description": "The exact same `clientMutationId` that was provided in the mutation input,\nunchanged and unused. May be used by a client to track mutations.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "query",
              "description": "Our root query field type. Allows us to run any query from our mutation payload.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Query",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
=======
=======
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProjectsConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
>>>>>>> refactor: update schema & reorder sqitch plan
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
<<<<<<< HEAD
          "kind": "INPUT_OBJECT",
          "name": "CreateProjectInput",
          "description": "All input for the `createProject` mutation.",
          "fields": null,
          "inputFields": [
            {
              "name": "clientMutationId",
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
            }
          ],
          "inputFields": null,
          "interfaces": [],
<<<<<<< HEAD
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "SCALAR",
          "name": "Cursor",
          "description": "A location in a connection that can be used for resuming pagination.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
=======
>>>>>>> chore: add basic SelectOperator component
          "enumValues": null,
          "possibleTypes": null
        },
        {
<<<<<<< HEAD
          "kind": "SCALAR",
          "name": "Datetime",
          "description": "A point in time as described by the [ISO\n8601](https://en.wikipedia.org/wiki/ISO_8601) standard. May or may not include a timezone.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "DatetimeFilter",
          "description": "A filter to be used against Datetime fields. All fields are combined with a logical ‘and.’",
          "fields": null,
          "inputFields": [
            {
              "name": "distinctFrom",
              "description": "Not equal to the specified value, treating null like an ordinary value.",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "equalTo",
              "description": "Equal to the specified value.",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "greaterThan",
              "description": "Greater than the specified value.",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
=======
          "kind": "OBJECT",
<<<<<<< HEAD
          "name": "CifUserCifUsersByProjectDeletedByAndCreatedByManyToManyConnection",
=======
          "kind": "OBJECT",
          "name": "CifUserCifUsersByProjectDeletedByAndUpdatedByManyToManyConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
          "description": "A connection to a list of `CifUser` values, with data from `Project`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `Project`, and the cursor to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
<<<<<<< HEAD
                      "name": "CifUserCifUsersByProjectDeletedByAndCreatedByManyToManyEdge",
                      "ofType": null
=======
          "name": "CreateProjectPayload",
          "description": "The output of our `createProject` mutation.",
          "fields": [
            {
              "name": "changeStatusByChangeStatus",
              "description": "Reads a single `ChangeStatus` that is related to this `FormChange`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "ChangeStatus",
                "ofType": null
=======
                      "name": "CifUserCifUsersByProjectDeletedByAndUpdatedByManyToManyEdge",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
>>>>>>> refactor: update schema & reorder sqitch plan
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "clientMutationId",
              "description": "The exact same `clientMutationId` that was provided in the mutation input,\nunchanged and unused. May be used by a client to track mutations.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
=======
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
>>>>>>> refactor: update schema & reorder sqitch plan
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "formChange",
              "description": null,
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "FormChange",
>>>>>>> chore: add basic SelectOperator component
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "greaterThanOrEqualTo",
              "description": "Greater than or equal to the specified value.",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
=======
              "name": "formChangeEdge",
              "description": "An edge for our `FormChange`. May be used by Relay 1.",
              "args": [
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `FormChange`.",
=======
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserCifUsersByProjectDeletedByAndUpdatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `Project`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projectsByUpdatedBy",
              "description": "Reads and enables pagination through a set of `Project`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `Project`.",
>>>>>>> refactor: update schema & reorder sqitch plan
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
<<<<<<< HEAD
                        "name": "FormChangesOrderBy",
=======
                        "name": "ProjectsOrderBy",
>>>>>>> refactor: update schema & reorder sqitch plan
                        "ofType": null
                      }
>>>>>>> chore: add basic SelectOperator component
                    }
                  }
                }
<<<<<<< HEAD
<<<<<<< HEAD
=======
              ],
              "type": {
                "kind": "OBJECT",
                "name": "FormChangesEdge",
>>>>>>> chore: add basic SelectOperator component
                "ofType": null
=======
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProjectsConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserCifUsersByProjectManagerCifUserIdAndCreatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `ProjectManager`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `ProjectManager`, and the cursor to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CifUserCifUsersByProjectManagerCifUserIdAndCreatedByManyToManyEdge",
                      "ofType": null
                    }
                  }
                }
>>>>>>> refactor: update schema & reorder sqitch plan
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
<<<<<<< HEAD
              "name": "in",
              "description": "Included in the specified list.",
=======
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
>>>>>>> refactor: update schema & reorder sqitch plan
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "Datetime",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "isNull",
              "description": "Is null (if `true` is specified) or is not null (if `false` is specified).",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "lessThan",
              "description": "Less than the specified value.",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "lessThanOrEqualTo",
              "description": "Less than or equal to the specified value.",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
=======
              "name": "query",
              "description": "Our root query field type. Allows us to run any query from our mutation payload.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Query",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
<<<<<<< HEAD
          "kind": "INPUT_OBJECT",
          "name": "CreateUserFromSessionInput",
          "description": "All input for the `createUserFromSession` mutation.",
          "fields": null,
          "inputFields": [
            {
              "name": "clientMutationId",
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
=======
          "kind": "OBJECT",
          "name": "CifUserCifUsersByProjectManagerCifUserIdAndCreatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `ProjectManager`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
>>>>>>> refactor: update schema & reorder sqitch plan
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
<<<<<<< HEAD
              "defaultValue": null
=======
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projectManagersByCreatedBy",
              "description": "Reads and enables pagination through a set of `ProjectManager`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectManagerCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectManagerFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `ProjectManager`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "ProjectManagersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProjectManagersConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
>>>>>>> refactor: update schema & reorder sqitch plan
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
          "name": "CreateUserFromSessionPayload",
          "description": "The output of our `createUserFromSession` mutation.",
          "fields": [
            {
              "name": "cifUser",
              "description": null,
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
>>>>>>> chore: add basic SelectOperator component
                "ofType": null
>>>>>>> chore: add basic SelectOperator component
=======
          "name": "CifUserCifUsersByProjectManagerCifUserIdAndDeletedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `ProjectManager`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `ProjectManager`, and the cursor to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CifUserCifUsersByProjectManagerCifUserIdAndDeletedByManyToManyEdge",
                      "ofType": null
                    }
                  }
                }
>>>>>>> refactor: update schema & reorder sqitch plan
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
<<<<<<< HEAD
              "name": "notDistinctFrom",
              "description": "Equal to the specified value, treating null like an ordinary value.",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
=======
<<<<<<< HEAD
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
=======
              "name": "cifUserByCreatedBy",
              "description": "Reads a single `CifUser` that is related to this `CifUser`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
>>>>>>> chore: add basic SelectOperator component
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "notEqualTo",
              "description": "Not equal to the specified value.",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "notIn",
              "description": "Not included in the specified list.",
=======
              "name": "cifUserByDeletedBy",
              "description": "Reads a single `CifUser` that is related to this `CifUser`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUserByUpdatedBy",
              "description": "Reads a single `CifUser` that is related to this `CifUser`.",
>>>>>>> chore: add basic SelectOperator component
              "args": [],
>>>>>>> chore: add basic SelectOperator component
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "Datetime",
=======
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
>>>>>>> refactor: update schema & reorder sqitch plan
                    "ofType": null
                  }
                }
              },
<<<<<<< HEAD
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "DeleteAttachmentByRowIdInput",
          "description": "All input for the `deleteAttachmentByRowId` mutation.",
          "fields": null,
          "inputFields": [
            {
<<<<<<< HEAD
              "name": "clientMutationId",
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
=======
<<<<<<< HEAD
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
=======
              "name": "cifUserEdge",
              "description": "An edge for our `CifUser`. May be used by Relay 1.",
              "args": [
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `CifUser`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "CifUsersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "CifUsersEdge",
                "ofType": null
              },
=======
>>>>>>> refactor: update schema & reorder sqitch plan
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "clientMutationId",
              "description": "The exact same `clientMutationId` that was provided in the mutation input,\nunchanged and unused. May be used by a client to track mutations.",
>>>>>>> chore: add basic SelectOperator component
=======
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
>>>>>>> chore: add basic SelectOperator component
              },
              "defaultValue": null
            },
            {
              "name": "rowId",
              "description": "Unique ID for the attachment",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
<<<<<<< HEAD
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
<<<<<<< HEAD
          "kind": "INPUT_OBJECT",
          "name": "DeleteAttachmentInput",
          "description": "All input for the `deleteAttachment` mutation.",
          "fields": null,
          "inputFields": [
=======
<<<<<<< HEAD
          "kind": "OBJECT",
          "name": "CifUserCifUsersByProjectDeletedByAndCreatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `Project`.",
          "fields": [
>>>>>>> chore: add basic SelectOperator component
            {
              "name": "clientMutationId",
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
              "type": {
                "kind": "SCALAR",
<<<<<<< HEAD
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "id",
              "description": "The globally unique `ID` which will identify a single `Attachment` to be deleted.",
=======
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
>>>>>>> refactor: update schema & reorder sqitch plan
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
          "name": "DeleteAttachmentPayload",
          "description": "The output of our delete `Attachment` mutation.",
          "fields": [
            {
              "name": "attachment",
              "description": "The `Attachment` that was deleted by this mutation.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Attachment",
=======
          "name": "CifUserCifUsersByProjectManagerCifUserIdAndDeletedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `ProjectManager`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
>>>>>>> refactor: update schema & reorder sqitch plan
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "attachmentEdge",
              "description": "An edge for our `Attachment`. May be used by Relay 1.",
              "args": [
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `Attachment`.",
=======
              "name": "projectManagersByDeletedBy",
              "description": "Reads and enables pagination through a set of `ProjectManager`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectManagerCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectManagerFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `ProjectManager`.",
>>>>>>> refactor: update schema & reorder sqitch plan
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
<<<<<<< HEAD
                        "name": "AttachmentsOrderBy",
=======
                        "name": "ProjectManagersOrderBy",
>>>>>>> refactor: update schema & reorder sqitch plan
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
<<<<<<< HEAD
                "kind": "OBJECT",
                "name": "AttachmentsEdge",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUserByCreatedBy",
              "description": "Reads a single `CifUser` that is related to this `Attachment`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
=======
                "name": "Cursor",
>>>>>>> chore: add basic SelectOperator component
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "cifUserByDeletedBy",
              "description": "Reads a single `CifUser` that is related to this `Attachment`.",
=======
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
>>>>>>> chore: add basic SelectOperator component
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
<<<<<<< HEAD
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUserByUpdatedBy",
              "description": "Reads a single `CifUser` that is related to this `Attachment`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "clientMutationId",
              "description": "The exact same `clientMutationId` that was provided in the mutation input,\nunchanged and unused. May be used by a client to track mutations.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "deletedAttachmentId",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "query",
              "description": "Our root query field type. Allows us to run any query from our mutation payload.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Query",
                "ofType": null
              },
=======
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProjectManagersConnection",
                  "ofType": null
                }
              },
>>>>>>> refactor: update schema & reorder sqitch plan
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
=======
=======
          "kind": "SCALAR",
          "name": "Cursor",
          "description": "A location in a connection that can be used for resuming pagination.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
<<<<<<< HEAD
          "kind": "SCALAR",
          "name": "Datetime",
          "description": "A point in time as described by the [ISO\n8601](https://en.wikipedia.org/wiki/ISO_8601) standard. May or may not include a timezone.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
>>>>>>> chore: add basic SelectOperator component
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
<<<<<<< HEAD
          "name": "DeleteChangeStatusByStatusInput",
          "description": "All input for the `deleteChangeStatusByStatus` mutation.",
          "fields": null,
          "inputFields": [
            {
              "name": "clientMutationId",
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "status",
              "description": "The name of the status, e.g. \"pending\", \"committed\", ...",
=======
          "kind": "OBJECT",
          "name": "CifUserCifUsersByProjectManagerCifUserIdAndUpdatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `ProjectManager`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `ProjectManager`, and the cursor to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CifUserCifUsersByProjectManagerCifUserIdAndUpdatedByManyToManyEdge",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
>>>>>>> refactor: update schema & reorder sqitch plan
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
<<<<<<< HEAD
=======
          "name": "DatetimeFilter",
          "description": "A filter to be used against Datetime fields. All fields are combined with a logical ‘and.’",
          "fields": null,
          "inputFields": [
            {
              "name": "distinctFrom",
              "description": "Not equal to the specified value, treating null like an ordinary value.",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
>>>>>>> chore: add basic SelectOperator component
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "DeleteChangeStatusInput",
          "description": "All input for the `deleteChangeStatus` mutation.",
          "fields": null,
          "inputFields": [
            {
              "name": "equalTo",
              "description": "Equal to the specified value.",
=======
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
>>>>>>> refactor: update schema & reorder sqitch plan
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
<<<<<<< HEAD
              "defaultValue": null
            },
<<<<<<< HEAD
            {
              "name": "id",
              "description": "The globally unique `ID` which will identify a single `ChangeStatus` to be deleted.",
=======
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
>>>>>>> refactor: update schema & reorder sqitch plan
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
          "name": "DeleteChangeStatusPayload",
          "description": "The output of our delete `ChangeStatus` mutation.",
          "fields": [
            {
              "name": "changeStatus",
              "description": "The `ChangeStatus` that was deleted by this mutation.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "ChangeStatus",
=======
            {
              "name": "greaterThan",
              "description": "Greater than the specified value.",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
                "ofType": null
              },
              "defaultValue": null
            },
            {
<<<<<<< HEAD
              "name": "changeStatusEdge",
              "description": "An edge for our `ChangeStatus`. May be used by Relay 1.",
              "args": [
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `ChangeStatus`.",
                  "type": {
=======
<<<<<<< HEAD
              "name": "projectsByCreatedBy",
              "description": "Reads and enables pagination through a set of `Project`.",
=======
          "name": "CifUserCifUsersByProjectManagerCifUserIdAndUpdatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `ProjectManager`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projectManagersByUpdatedBy",
              "description": "Reads and enables pagination through a set of `ProjectManager`.",
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
                    "name": "ProjectCondition",
=======
                    "name": "ProjectManagerCondition",
>>>>>>> refactor: update schema & reorder sqitch plan
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
                    "name": "ProjectFilter",
=======
                    "name": "ProjectManagerFilter",
>>>>>>> refactor: update schema & reorder sqitch plan
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
<<<<<<< HEAD
                  "description": "The method to use when ordering `Project`.",
=======
                  "description": "The method to use when ordering `ProjectManager`.",
>>>>>>> refactor: update schema & reorder sqitch plan
                  "type": {
>>>>>>> chore: add basic SelectOperator component
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
<<<<<<< HEAD
<<<<<<< HEAD
                        "name": "ChangeStatusesOrderBy",
=======
                        "name": "ProjectsOrderBy",
>>>>>>> chore: add basic SelectOperator component
=======
                        "name": "ProjectManagersOrderBy",
>>>>>>> refactor: update schema & reorder sqitch plan
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
<<<<<<< HEAD
                "kind": "OBJECT",
                "name": "ChangeStatusesEdge",
                "ofType": null
=======
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
<<<<<<< HEAD
                  "name": "ProjectsConnection",
                  "ofType": null
                }
>>>>>>> chore: add basic SelectOperator component
=======
                  "name": "ProjectManagersConnection",
                  "ofType": null
                }
>>>>>>> refactor: update schema & reorder sqitch plan
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
          "name": "CifUserCifUsersByProjectDeletedByAndUpdatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `Project`.",
=======
          "name": "CifUserCifUsersByProjectManagerCreatedByAndCifUserIdManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `ProjectManager`.",
>>>>>>> refactor: update schema & reorder sqitch plan
          "fields": [
            {
<<<<<<< HEAD
              "name": "cifUserByCreatedBy",
              "description": "Reads a single `CifUser` that is related to this `ChangeStatus`.",
=======
              "name": "edges",
<<<<<<< HEAD
              "description": "A list of edges which contains the `CifUser`, info from the `Project`, and the cursor to aid in pagination.",
>>>>>>> chore: add basic SelectOperator component
=======
              "description": "A list of edges which contains the `CifUser`, info from the `ProjectManager`, and the cursor to aid in pagination.",
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
<<<<<<< HEAD
                      "name": "CifUserCifUsersByProjectDeletedByAndUpdatedByManyToManyEdge",
=======
                      "name": "CifUserCifUsersByProjectManagerCreatedByAndCifUserIdManyToManyEdge",
>>>>>>> refactor: update schema & reorder sqitch plan
                      "ofType": null
                    }
                  }
                }
=======
              "name": "greaterThanOrEqualTo",
              "description": "Greater than or equal to the specified value.",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
<<<<<<< HEAD
              "defaultValue": null
            },
            {
<<<<<<< HEAD
              "name": "cifUserByDeletedBy",
              "description": "Reads a single `CifUser` that is related to this `ChangeStatus`.",
              "args": [],
=======
              "name": "in",
              "description": "Included in the specified list.",
>>>>>>> chore: add basic SelectOperator component
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "Datetime",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
<<<<<<< HEAD
              "name": "cifUserByUpdatedBy",
              "description": "Reads a single `CifUser` that is related to this `ChangeStatus`.",
              "args": [],
=======
              "name": "isNull",
              "description": "Is null (if `true` is specified) or is not null (if `false` is specified).",
>>>>>>> chore: add basic SelectOperator component
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
>>>>>>> chore: add basic SelectOperator component
              },
              "defaultValue": null
=======
              "isDeprecated": false,
              "deprecationReason": null
>>>>>>> refactor: update schema & reorder sqitch plan
            },
            {
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
<<<<<<< HEAD
=======
              "name": "lessThan",
              "description": "Less than the specified value.",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
<<<<<<< HEAD
              "name": "deletedChangeStatusId",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "query",
              "description": "Our root query field type. Allows us to run any query from our mutation payload.",
              "args": [],
=======
              "name": "lessThanOrEqualTo",
              "description": "Less than or equal to the specified value.",
>>>>>>> chore: add basic SelectOperator component
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
>>>>>>> chore: add basic SelectOperator component
              },
<<<<<<< HEAD
=======
              },
>>>>>>> refactor: update schema & reorder sqitch plan
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "DeleteCifUserByRowIdInput",
          "description": "All input for the `deleteCifUserByRowId` mutation.",
          "fields": null,
          "inputFields": [
            {
              "name": "clientMutationId",
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "rowId",
              "description": "Unique ID for the user",
=======
              "defaultValue": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
>>>>>>> chore: add basic SelectOperator component
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
<<<<<<< HEAD
                  "kind": "SCALAR",
                  "name": "Int",
=======
                  "kind": "OBJECT",
                  "name": "PageInfo",
>>>>>>> chore: add basic SelectOperator component
                  "ofType": null
                }
=======
              "name": "notDistinctFrom",
              "description": "Equal to the specified value, treating null like an ordinary value.",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
>>>>>>> chore: add basic SelectOperator component
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "DeleteCifUserInput",
          "description": "All input for the `deleteCifUser` mutation.",
          "fields": null,
          "inputFields": [
            {
<<<<<<< HEAD
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
              "type": {
=======
              "name": "notEqualTo",
              "description": "Not equal to the specified value.",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "defaultValue": null
            },
<<<<<<< HEAD
            {
              "name": "id",
              "description": "The globally unique `ID` which will identify a single `CifUser` to be deleted.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "DeleteCifUserPayload",
          "description": "The output of our delete `CifUser` mutation.",
          "fields": [
            {
              "name": "cifUser",
              "description": "The `CifUser` that was deleted by this mutation.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
=======
            {
              "name": "notIn",
              "description": "Not included in the specified list.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "Datetime",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "DeleteAttachmentByRowIdInput",
          "description": "All input for the `deleteAttachmentByRowId` mutation.",
          "fields": null,
          "inputFields": [
            {
              "name": "clientMutationId",
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "rowId",
              "description": "Unique ID for the attachment",
              "type": {
>>>>>>> chore: add basic SelectOperator component
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
<<<<<<< HEAD
              "isDeprecated": false,
              "deprecationReason": null
=======
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "DeleteAttachmentInput",
          "description": "All input for the `deleteAttachment` mutation.",
          "fields": null,
          "inputFields": [
            {
              "name": "clientMutationId",
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "id",
              "description": "The globally unique `ID` which will identify a single `Attachment` to be deleted.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "defaultValue": null
>>>>>>> chore: add basic SelectOperator component
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
          "name": "CifUserCifUsersByProjectDeletedByAndUpdatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `Project`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
=======
          "name": "DeleteAttachmentPayload",
          "description": "The output of our delete `Attachment` mutation.",
          "fields": [
            {
              "name": "attachment",
              "description": "The `Attachment` that was deleted by this mutation.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Attachment",
>>>>>>> chore: add basic SelectOperator component
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "cifUserByCreatedBy",
              "description": "Reads a single `CifUser` that is related to this `CifUser`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
=======
              "name": "attachmentEdge",
              "description": "An edge for our `Attachment`. May be used by Relay 1.",
              "args": [
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `Attachment`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "AttachmentsOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "AttachmentsEdge",
>>>>>>> chore: add basic SelectOperator component
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "cifUserByDeletedBy",
              "description": "Reads a single `CifUser` that is related to this `CifUser`.",
=======
              "name": "cifUserByCreatedBy",
              "description": "Reads a single `CifUser` that is related to this `Attachment`.",
>>>>>>> chore: add basic SelectOperator component
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "cifUserByUpdatedBy",
              "description": "Reads a single `CifUser` that is related to this `CifUser`.",
=======
              "name": "cifUserByDeletedBy",
              "description": "Reads a single `CifUser` that is related to this `Attachment`.",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "cifUserEdge",
              "description": "An edge for our `CifUser`. May be used by Relay 1.",
              "args": [
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `CifUser`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "CifUsersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
=======
<<<<<<< HEAD
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
=======
              "name": "cifUserByUpdatedBy",
              "description": "Reads a single `CifUser` that is related to this `Attachment`.",
>>>>>>> chore: add basic SelectOperator component
              "args": [],
>>>>>>> chore: add basic SelectOperator component
              "type": {
                "kind": "OBJECT",
                "name": "CifUsersEdge",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
<<<<<<< HEAD
            },
            {
<<<<<<< HEAD
              "name": "projectsByUpdatedBy",
              "description": "Reads and enables pagination through a set of `Project`.",
=======
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserCifUsersByProjectManagerCreatedByAndCifUserIdManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `ProjectManager`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projectManagersByCifUserId",
              "description": "Reads and enables pagination through a set of `ProjectManager`.",
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
                    "name": "ProjectCondition",
=======
                    "name": "ProjectManagerCondition",
>>>>>>> refactor: update schema & reorder sqitch plan
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
                    "name": "ProjectFilter",
=======
                    "name": "ProjectManagerFilter",
>>>>>>> refactor: update schema & reorder sqitch plan
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
<<<<<<< HEAD
                  "description": "The method to use when ordering `Project`.",
=======
                  "description": "The method to use when ordering `ProjectManager`.",
>>>>>>> refactor: update schema & reorder sqitch plan
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
<<<<<<< HEAD
                        "name": "ProjectsOrderBy",
=======
                        "name": "ProjectManagersOrderBy",
>>>>>>> refactor: update schema & reorder sqitch plan
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
<<<<<<< HEAD
                  "name": "ProjectsConnection",
                  "ofType": null
                }
=======
              "name": "clientMutationId",
              "description": "The exact same `clientMutationId` that was provided in the mutation input,\nunchanged and unused. May be used by a client to track mutations.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "deletedCifUserId",
=======
              "name": "deletedAttachmentId",
>>>>>>> chore: add basic SelectOperator component
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "query",
              "description": "Our root query field type. Allows us to run any query from our mutation payload.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Query",
                "ofType": null
>>>>>>> chore: add basic SelectOperator component
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
<<<<<<< HEAD
          "kind": "INPUT_OBJECT",
          "name": "DeleteFormChangeByRowIdInput",
          "description": "All input for the `deleteFormChangeByRowId` mutation.",
          "fields": null,
          "inputFields": [
            {
              "name": "clientMutationId",
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "rowId",
              "description": null,
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "DeleteFormChangeInput",
          "description": "All input for the `deleteFormChange` mutation.",
=======
<<<<<<< HEAD
          "kind": "OBJECT",
          "name": "CifUserCifUsersByProjectManagerCifUserIdAndCreatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `ProjectManager`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `ProjectManager`, and the cursor to aid in pagination.",
              "args": [],
=======
          "kind": "INPUT_OBJECT",
          "name": "DeleteChangeStatusByStatusInput",
          "description": "All input for the `deleteChangeStatusByStatus` mutation.",
>>>>>>> chore: add basic SelectOperator component
          "fields": null,
          "inputFields": [
            {
              "name": "clientMutationId",
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
=======
                  "name": "ProjectManagersConnection",
                  "ofType": null
                }
>>>>>>> refactor: update schema & reorder sqitch plan
              },
              "defaultValue": null
<<<<<<< HEAD
            },
            {
              "name": "id",
              "description": "The globally unique `ID` which will identify a single `FormChange` to be deleted.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
          "name": "DeleteFormChangePayload",
          "description": "The output of our delete `FormChange` mutation.",
          "fields": [
            {
              "name": "changeStatusByChangeStatus",
              "description": "Reads a single `ChangeStatus` that is related to this `FormChange`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "ChangeStatus",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "clientMutationId",
              "description": "The exact same `clientMutationId` that was provided in the mutation input,\nunchanged and unused. May be used by a client to track mutations.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "deletedFormChangeId",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "formChange",
              "description": "The `FormChange` that was deleted by this mutation.",
=======
          "name": "CifUserCifUsersByProjectManagerCreatedByAndDeletedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `ProjectManager`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `ProjectManager`, and the cursor to aid in pagination.",
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "FormChange",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "formChangeEdge",
              "description": "An edge for our `FormChange`. May be used by Relay 1.",
              "args": [
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `FormChange`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "FormChangesOrderBy",
                        "ofType": null
                      }
=======
            },
            {
              "name": "status",
              "description": "The name of the status, e.g. \"pending\", \"committed\", ...",
>>>>>>> chore: add basic SelectOperator component
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
<<<<<<< HEAD
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
<<<<<<< HEAD
                      "name": "CifUserCifUsersByProjectManagerCifUserIdAndCreatedByManyToManyEdge",
=======
                      "name": "CifUserCifUsersByProjectManagerCreatedByAndDeletedByManyToManyEdge",
>>>>>>> refactor: update schema & reorder sqitch plan
                      "ofType": null
>>>>>>> chore: add basic SelectOperator component
                    }
                  }
                }
<<<<<<< HEAD
<<<<<<< HEAD
              ],
              "type": {
                "kind": "OBJECT",
                "name": "FormChangesEdge",
                "ofType": null
=======
>>>>>>> chore: add basic SelectOperator component
=======
>>>>>>> refactor: update schema & reorder sqitch plan
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
<<<<<<< HEAD
              "name": "query",
              "description": "Our root query field type. Allows us to run any query from our mutation payload.",
=======
=======
>>>>>>> refactor: update schema & reorder sqitch plan
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
>>>>>>> chore: add basic SelectOperator component
              "args": [],
=======
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
<<<<<<< HEAD
          "name": "DeleteFundingStreamByRowIdInput",
          "description": "All input for the `deleteFundingStreamByRowId` mutation.",
=======
          "name": "DeleteChangeStatusInput",
          "description": "All input for the `deleteChangeStatus` mutation.",
>>>>>>> chore: add basic SelectOperator component
          "fields": null,
          "inputFields": [
            {
              "name": "clientMutationId",
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
>>>>>>> chore: add basic SelectOperator component
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
<<<<<<< HEAD
<<<<<<< HEAD
              "name": "rowId",
              "description": "Unique ID for the funding_stream",
=======
<<<<<<< HEAD
=======
>>>>>>> refactor: update schema & reorder sqitch plan
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
>>>>>>> chore: add basic SelectOperator component
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
<<<<<<< HEAD
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
<<<<<<< HEAD
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "DeleteFundingStreamInput",
          "description": "All input for the `deleteFundingStream` mutation.",
          "fields": null,
          "inputFields": [
            {
              "name": "clientMutationId",
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
=======
>>>>>>> refactor: update schema & reorder sqitch plan
              },
              "defaultValue": null
            },
            {
              "name": "id",
              "description": "The globally unique `ID` which will identify a single `FundingStream` to be deleted.",
=======
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
=======
              "name": "id",
              "description": "The globally unique `ID` which will identify a single `ChangeStatus` to be deleted.",
>>>>>>> chore: add basic SelectOperator component
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
          "name": "DeleteFundingStreamPayload",
          "description": "The output of our delete `FundingStream` mutation.",
          "fields": [
            {
              "name": "cifUserByCreatedBy",
              "description": "Reads a single `CifUser` that is related to this `FundingStream`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
=======
          "name": "CifUserCifUsersByProjectManagerCreatedByAndDeletedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `ProjectManager`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
>>>>>>> refactor: update schema & reorder sqitch plan
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "cifUserByDeletedBy",
              "description": "Reads a single `CifUser` that is related to this `FundingStream`.",
=======
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
<<<<<<< HEAD
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUserByUpdatedBy",
              "description": "Reads a single `CifUser` that is related to this `FundingStream`.",
=======
          "name": "DeleteChangeStatusPayload",
          "description": "The output of our delete `ChangeStatus` mutation.",
          "fields": [
            {
              "name": "changeStatus",
              "description": "The `ChangeStatus` that was deleted by this mutation.",
>>>>>>> chore: add basic SelectOperator component
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "clientMutationId",
              "description": "The exact same `clientMutationId` that was provided in the mutation input,\nunchanged and unused. May be used by a client to track mutations.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "deletedFundingStreamId",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "fundingStream",
              "description": "The `FundingStream` that was deleted by this mutation.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "FundingStream",
                "ofType": null
=======
>>>>>>> refactor: update schema & reorder sqitch plan
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "fundingStreamEdge",
              "description": "An edge for our `FundingStream`. May be used by Relay 1.",
              "args": [
=======
              "name": "projectManagersByDeletedBy",
              "description": "Reads and enables pagination through a set of `ProjectManager`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectManagerCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectManagerFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
>>>>>>> refactor: update schema & reorder sqitch plan
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `FundingStream`.",
=======
              "name": "changeStatusEdge",
              "description": "An edge for our `ChangeStatus`. May be used by Relay 1.",
              "args": [
                {
                  "name": "orderBy",
<<<<<<< HEAD
                  "description": "The method to use when ordering `ChangeStatus`.",
>>>>>>> chore: add basic SelectOperator component
=======
                  "description": "The method to use when ordering `ProjectManager`.",
>>>>>>> refactor: update schema & reorder sqitch plan
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
<<<<<<< HEAD
<<<<<<< HEAD
                        "name": "FundingStreamsOrderBy",
=======
                        "name": "ChangeStatusesOrderBy",
>>>>>>> chore: add basic SelectOperator component
=======
                        "name": "ProjectManagersOrderBy",
>>>>>>> refactor: update schema & reorder sqitch plan
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "OBJECT",
<<<<<<< HEAD
                "name": "FundingStreamsEdge",
=======
                "name": "ChangeStatusesEdge",
>>>>>>> chore: add basic SelectOperator component
                "ofType": null
>>>>>>> chore: add basic SelectOperator component
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
<<<<<<< HEAD
                  "kind": "SCALAR",
                  "name": "Int",
=======
                  "kind": "OBJECT",
                  "name": "ProjectManagersConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
<<<<<<< HEAD
<<<<<<< HEAD
          "kind": "INPUT_OBJECT",
          "name": "DeleteProjectManagerByRowIdInput",
          "description": "All input for the `deleteProjectManagerByRowId` mutation.",
          "fields": null,
          "inputFields": [
=======
          "kind": "OBJECT",
          "name": "CifUserCifUsersByProjectManagerCifUserIdAndCreatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `ProjectManager`.",
          "fields": [
>>>>>>> chore: add basic SelectOperator component
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
<<<<<<< HEAD
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "rowId",
              "description": "Unique ID for the project manager record",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "DeleteProjectManagerInput",
          "description": "All input for the `deleteProjectManager` mutation.",
          "fields": null,
          "inputFields": [
            {
              "name": "clientMutationId",
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
=======
          "kind": "OBJECT",
          "name": "CifUserCifUsersByProjectManagerCreatedByAndUpdatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `ProjectManager`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `ProjectManager`, and the cursor to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CifUserCifUsersByProjectManagerCreatedByAndUpdatedByManyToManyEdge",
                      "ofType": null
                    }
                  }
                }
>>>>>>> refactor: update schema & reorder sqitch plan
              },
              "defaultValue": null
            },
            {
<<<<<<< HEAD
              "name": "id",
              "description": "The globally unique `ID` which will identify a single `ProjectManager` to be deleted.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "DeleteProjectManagerPayload",
          "description": "The output of our delete `ProjectManager` mutation.",
          "fields": [
            {
              "name": "cifUserByCifUserId",
              "description": "Reads a single `CifUser` that is related to this `ProjectManager`.",
=======
                "name": "Cursor",
=======
              "name": "cifUserByCreatedBy",
              "description": "Reads a single `CifUser` that is related to this `ChangeStatus`.",
>>>>>>> chore: add basic SelectOperator component
=======
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
              "type": {
<<<<<<< HEAD
                "kind": "OBJECT",
                "name": "CifUser",
>>>>>>> chore: add basic SelectOperator component
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
=======
              "name": "clientMutationId",
              "description": "The exact same `clientMutationId` that was provided in the mutation input,\nunchanged and unused. May be used by a client to track mutations.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
>>>>>>> chore: add basic SelectOperator component
=======
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserCifUsersByProjectManagerCreatedByAndUpdatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `ProjectManager`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
>>>>>>> refactor: update schema & reorder sqitch plan
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
<<<<<<< HEAD
              "name": "deletedProjectManagerId",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projectByProjectId",
              "description": "Reads a single `Project` that is related to this `ProjectManager`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Project",
=======
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
>>>>>>> refactor: update schema & reorder sqitch plan
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "projectManager",
              "description": "The `ProjectManager` that was deleted by this mutation.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "ProjectManager",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projectManagerEdge",
              "description": "An edge for our `ProjectManager`. May be used by Relay 1.",
=======
<<<<<<< HEAD
              "name": "projectManagersByCreatedBy",
              "description": "Reads and enables pagination through a set of `ProjectManager`.",
>>>>>>> chore: add basic SelectOperator component
=======
              "name": "projectManagersByUpdatedBy",
              "description": "Reads and enables pagination through a set of `ProjectManager`.",
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectManagerCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectManagerFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `ProjectManager`.",
<<<<<<< HEAD
=======
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "ProjectManagersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProjectManagersConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserCifUsersByProjectManagerDeletedByAndCifUserIdManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `ProjectManager`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `ProjectManager`, and the cursor to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CifUserCifUsersByProjectManagerDeletedByAndCifUserIdManyToManyEdge",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserCifUsersByProjectManagerDeletedByAndCifUserIdManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `ProjectManager`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projectManagersByCifUserId",
              "description": "Reads and enables pagination through a set of `ProjectManager`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
>>>>>>> refactor: update schema & reorder sqitch plan
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectManagerCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectManagerFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `ProjectManager`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "ProjectManagersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProjectManagersConnection",
                  "ofType": null
                }
<<<<<<< HEAD
=======
              "name": "deletedChangeStatusId",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
=======
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserCifUsersByProjectManagerDeletedByAndCreatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `ProjectManager`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `ProjectManager`, and the cursor to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CifUserCifUsersByProjectManagerDeletedByAndCreatedByManyToManyEdge",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
>>>>>>> refactor: update schema & reorder sqitch plan
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
<<<<<<< HEAD
                "kind": "OBJECT",
                "name": "Query",
                "ofType": null
>>>>>>> chore: add basic SelectOperator component
              },
              "isDeprecated": false,
              "deprecationReason": null
=======
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
>>>>>>> refactor: update schema & reorder sqitch plan
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
<<<<<<< HEAD
<<<<<<< HEAD
          "kind": "OBJECT",
<<<<<<< HEAD
          "name": "FormChange",
          "description": null,
          "fields": [
            {
              "name": "changeReason",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "changeStatus",
              "description": null,
=======
          "kind": "OBJECT",
          "name": "CifUserCifUsersByProjectManagerDeletedByAndCreatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `ProjectManager`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "changeStatusByChangeStatus",
              "description": "Reads a single `ChangeStatus` that is related to this `FormChange`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "ChangeStatus",
=======
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
>>>>>>> refactor: update schema & reorder sqitch plan
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "formDataRecordId",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "formDataSchemaName",
              "description": null,
              "args": [],
=======
          "name": "CifUserCifUsersByProjectManagerCifUserIdAndDeletedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `ProjectManager`.",
          "fields": [
=======
          "kind": "INPUT_OBJECT",
          "name": "DeleteCifUserByRowIdInput",
          "description": "All input for the `deleteCifUserByRowId` mutation.",
          "fields": null,
          "inputFields": [
            {
              "name": "clientMutationId",
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
>>>>>>> chore: add basic SelectOperator component
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
<<<<<<< HEAD
              "name": "formDataTableName",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
=======
              "name": "rowId",
              "description": "Unique ID for the user",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "defaultValue": null
=======
              "name": "projectManagersByCreatedBy",
              "description": "Reads and enables pagination through a set of `ProjectManager`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectManagerCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectManagerFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `ProjectManager`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "ProjectManagersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProjectManagersConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
>>>>>>> refactor: update schema & reorder sqitch plan
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
<<<<<<< HEAD
          "kind": "INPUT_OBJECT",
          "name": "DeleteCifUserInput",
          "description": "All input for the `deleteCifUser` mutation.",
          "fields": null,
          "inputFields": [
>>>>>>> chore: add basic SelectOperator component
=======
          "kind": "OBJECT",
          "name": "CifUserCifUsersByProjectManagerDeletedByAndUpdatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `ProjectManager`.",
          "fields": [
>>>>>>> refactor: update schema & reorder sqitch plan
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `ProjectManager`, and the cursor to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
<<<<<<< HEAD
                      "name": "CifUserCifUsersByProjectManagerCifUserIdAndDeletedByManyToManyEdge",
=======
                      "name": "CifUserCifUsersByProjectManagerDeletedByAndUpdatedByManyToManyEdge",
>>>>>>> refactor: update schema & reorder sqitch plan
                      "ofType": null
                    }
                  }
                }
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
=======
>>>>>>> refactor: update schema & reorder sqitch plan
              },
<<<<<<< HEAD
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
<<<<<<< HEAD
              "name": "id",
              "description": "A globally unique identifier. Can be used in various places throughout the system to identify this single value.",
=======
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
<<<<<<< HEAD
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
=======
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
>>>>>>> refactor: update schema & reorder sqitch plan
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "newFormData",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "JSON",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "operation",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
=======
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
>>>>>>> refactor: update schema & reorder sqitch plan
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "rowId",
              "description": null,
=======
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
<<<<<<< HEAD
          "kind": "INPUT_OBJECT",
          "name": "FormChangeCondition",
          "description": "A condition to be used against `FormChange` object types. All fields are tested\nfor equality and combined with a logical ‘and.’",
          "fields": null,
          "inputFields": [
            {
              "name": "changeReason",
              "description": "Checks for equality with the object’s `changeReason` field.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "changeStatus",
              "description": "Checks for equality with the object’s `changeStatus` field.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "formDataRecordId",
              "description": "Checks for equality with the object’s `formDataRecordId` field.",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "formDataSchemaName",
              "description": "Checks for equality with the object’s `formDataSchemaName` field.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "formDataTableName",
              "description": "Checks for equality with the object’s `formDataTableName` field.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "newFormData",
              "description": "Checks for equality with the object’s `newFormData` field.",
              "type": {
                "kind": "SCALAR",
                "name": "JSON",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "operation",
              "description": "Checks for equality with the object’s `operation` field.",
=======
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
=======
              "defaultValue": null
            },
            {
              "name": "id",
              "description": "The globally unique `ID` which will identify a single `CifUser` to be deleted.",
>>>>>>> chore: add basic SelectOperator component
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
=======
          "kind": "OBJECT",
          "name": "CifUserCifUsersByProjectManagerDeletedByAndUpdatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `ProjectManager`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
>>>>>>> refactor: update schema & reorder sqitch plan
              },
              "defaultValue": null
            },
            {
<<<<<<< HEAD
              "name": "rowId",
              "description": "Checks for equality with the object’s `rowId` field.",
=======
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
>>>>>>> refactor: update schema & reorder sqitch plan
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
<<<<<<< HEAD
          "kind": "INPUT_OBJECT",
          "name": "FormChangeFilter",
          "description": "A filter to be used against `FormChange` object types. All fields are combined with a logical ‘and.’",
          "fields": null,
          "inputFields": [
            {
<<<<<<< HEAD
              "name": "and",
              "description": "Checks for all expressions in this list.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "FormChangeFilter",
=======
          "kind": "OBJECT",
          "name": "DeleteCifUserPayload",
          "description": "The output of our delete `CifUser` mutation.",
          "fields": [
            {
              "name": "cifUser",
              "description": "The `CifUser` that was deleted by this mutation.",
>>>>>>> chore: add basic SelectOperator component
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
>>>>>>> chore: add basic SelectOperator component
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
<<<<<<< HEAD
              "name": "changeReason",
              "description": "Filter by the object’s `changeReason` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilter",
                "ofType": null
=======
=======
              "name": "projectManagersByUpdatedBy",
              "description": "Reads and enables pagination through a set of `ProjectManager`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectManagerCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectManagerFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `ProjectManager`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "ProjectManagersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProjectManagersConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserCifUsersByProjectManagerUpdatedByAndCifUserIdManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `ProjectManager`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `ProjectManager`, and the cursor to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CifUserCifUsersByProjectManagerUpdatedByAndCifUserIdManyToManyEdge",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
>>>>>>> refactor: update schema & reorder sqitch plan
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
>>>>>>> chore: add basic SelectOperator component
              },
              "defaultValue": null
            },
            {
<<<<<<< HEAD
              "name": "changeStatus",
              "description": "Filter by the object’s `changeStatus` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilter",
=======
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
          "name": "CifUserCifUsersByProjectManagerCifUserIdAndDeletedByManyToManyEdge",
=======
          "name": "CifUserCifUsersByProjectManagerUpdatedByAndCifUserIdManyToManyEdge",
>>>>>>> refactor: update schema & reorder sqitch plan
          "description": "A `CifUser` edge in the connection, with data from `ProjectManager`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
>>>>>>> chore: add basic SelectOperator component
                "ofType": null
              },
              "defaultValue": null
            },
            {
<<<<<<< HEAD
              "name": "changeStatusByChangeStatus",
              "description": "Filter by the object’s `changeStatusByChangeStatus` relation.",
=======
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
>>>>>>> chore: add basic SelectOperator component
              "type": {
<<<<<<< HEAD
                "kind": "INPUT_OBJECT",
                "name": "ChangeStatusFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
<<<<<<< HEAD
              "name": "changeStatusByChangeStatusExists",
              "description": "A related `changeStatusByChangeStatus` exists.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "formDataRecordId",
              "description": "Filter by the object’s `formDataRecordId` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IntFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "formDataSchemaName",
              "description": "Filter by the object’s `formDataSchemaName` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilter",
=======
                "kind": "OBJECT",
                "name": "CifUser",
>>>>>>> refactor: update schema & reorder sqitch plan
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "formDataTableName",
              "description": "Filter by the object’s `formDataTableName` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "newFormData",
              "description": "Filter by the object’s `newFormData` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "JSONFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Negates the expression.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "FormChangeFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "operation",
              "description": "Filter by the object’s `operation` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "or",
              "description": "Checks for any expressions in this list.",
=======
              "name": "projectManagersByDeletedBy",
=======
              "name": "projectManagersByCifUserId",
>>>>>>> refactor: update schema & reorder sqitch plan
              "description": "Reads and enables pagination through a set of `ProjectManager`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectManagerCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectManagerFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `ProjectManager`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "ProjectManagersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProjectManagersConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
          "name": "CifUserCifUsersByProjectManagerCifUserIdAndUpdatedByManyToManyConnection",
=======
          "name": "CifUserCifUsersByProjectManagerUpdatedByAndCreatedByManyToManyConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
          "description": "A connection to a list of `CifUser` values, with data from `ProjectManager`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `ProjectManager`, and the cursor to aid in pagination.",
              "args": [],
>>>>>>> chore: add basic SelectOperator component
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
<<<<<<< HEAD
<<<<<<< HEAD
                    "kind": "INPUT_OBJECT",
                    "name": "FormChangeFilter",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "rowId",
              "description": "Filter by the object’s `rowId` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IntFilter",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "FormChangeInput",
          "description": "An input for mutations affecting `FormChange`",
          "fields": null,
          "inputFields": [
            {
              "name": "changeReason",
              "description": null,
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "changeStatus",
              "description": null,
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "formDataRecordId",
              "description": null,
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "formDataSchemaName",
              "description": null,
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
=======
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CifUserCifUsersByProjectManagerUpdatedByAndCreatedByManyToManyEdge",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
>>>>>>> refactor: update schema & reorder sqitch plan
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "formDataTableName",
              "description": null,
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
=======
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
>>>>>>> refactor: update schema & reorder sqitch plan
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "newFormData",
              "description": null,
              "type": {
                "kind": "SCALAR",
                "name": "JSON",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "operation",
              "description": null,
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "FormChangePatch",
          "description": "Represents an update to a `FormChange`. Fields that are set will be updated.",
          "fields": null,
          "inputFields": [
            {
              "name": "changeReason",
              "description": null,
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "changeStatus",
              "description": null,
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "formDataRecordId",
              "description": null,
              "type": {
                "kind": "SCALAR",
                "name": "Int",
=======
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CifUserCifUsersByProjectManagerCifUserIdAndUpdatedByManyToManyEdge",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
=======
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
<<<<<<< HEAD
            },
            {
<<<<<<< HEAD
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
=======
>>>>>>> refactor: update schema & reorder sqitch plan
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
          "name": "CifUserCifUsersByProjectManagerCifUserIdAndUpdatedByManyToManyEdge",
=======
          "name": "CifUserCifUsersByProjectManagerUpdatedByAndCreatedByManyToManyEdge",
>>>>>>> refactor: update schema & reorder sqitch plan
          "description": "A `CifUser` edge in the connection, with data from `ProjectManager`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
<<<<<<< HEAD
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
>>>>>>> chore: add basic SelectOperator component
                "ofType": null
              },
              "defaultValue": null
            },
            {
<<<<<<< HEAD
              "name": "formDataSchemaName",
              "description": null,
=======
>>>>>>> refactor: update schema & reorder sqitch plan
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
<<<<<<< HEAD
              "name": "formDataTableName",
              "description": null,
=======
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
>>>>>>> refactor: update schema & reorder sqitch plan
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
<<<<<<< HEAD
=======
              "name": "projectManagersByUpdatedBy",
=======
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projectManagersByCreatedBy",
>>>>>>> refactor: update schema & reorder sqitch plan
              "description": "Reads and enables pagination through a set of `ProjectManager`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectManagerCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectManagerFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `ProjectManager`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "ProjectManagersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProjectManagersConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
          "name": "CifUserCifUsersByProjectManagerCreatedByAndCifUserIdManyToManyConnection",
=======
          "name": "CifUserCifUsersByProjectManagerUpdatedByAndDeletedByManyToManyConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
          "description": "A connection to a list of `CifUser` values, with data from `ProjectManager`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `ProjectManager`, and the cursor to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
<<<<<<< HEAD
                      "name": "CifUserCifUsersByProjectManagerCreatedByAndCifUserIdManyToManyEdge",
=======
                      "name": "CifUserCifUsersByProjectManagerUpdatedByAndDeletedByManyToManyEdge",
>>>>>>> refactor: update schema & reorder sqitch plan
                      "ofType": null
                    }
                  }
                }
>>>>>>> chore: add basic SelectOperator component
              },
              "defaultValue": null
            },
            {
<<<<<<< HEAD
              "name": "newFormData",
              "description": null,
              "type": {
                "kind": "SCALAR",
                "name": "JSON",
                "ofType": null
=======
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
>>>>>>> chore: add basic SelectOperator component
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
<<<<<<< HEAD
              "name": "operation",
              "description": null,
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
=======
=======
>>>>>>> refactor: update schema & reorder sqitch plan
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "FormChangesConnection",
          "description": "A connection to a list of `FormChange` values.",
          "fields": [
            {
<<<<<<< HEAD
              "name": "edges",
              "description": "A list of edges which contains the `FormChange` and cursor to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "FormChangesEdge",
                      "ofType": null
                    }
                  }
                }
=======
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserCifUsersByProjectManagerCreatedByAndCifUserIdManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `ProjectManager`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
>>>>>>> chore: add basic SelectOperator component
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "nodes",
              "description": "A list of `FormChange` objects.",
=======
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
=======
              "name": "deletedCifUserId",
              "description": null,
>>>>>>> chore: add basic SelectOperator component
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "FormChange",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
<<<<<<< HEAD
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
=======
>>>>>>> refactor: update schema & reorder sqitch plan
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "The count of *all* `FormChange` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
          "name": "FormChangesEdge",
          "description": "A `FormChange` edge in the connection.",
=======
          "name": "CifUserCifUsersByProjectManagerUpdatedByAndDeletedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `ProjectManager`.",
>>>>>>> refactor: update schema & reorder sqitch plan
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
<<<<<<< HEAD
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `FormChange` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "FormChange",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
=======
                "kind": "OBJECT",
                "name": "Query",
>>>>>>> chore: add basic SelectOperator component
=======
>>>>>>> refactor: update schema & reorder sqitch plan
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
<<<<<<< HEAD
<<<<<<< HEAD
            },
            {
              "name": "projectManagersByCifUserId",
=======
            },
            {
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projectManagersByDeletedBy",
>>>>>>> refactor: update schema & reorder sqitch plan
              "description": "Reads and enables pagination through a set of `ProjectManager`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectManagerCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectManagerFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `ProjectManager`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "ProjectManagersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProjectManagersConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
<<<<<<< HEAD
=======
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
>>>>>>> refactor: update schema & reorder sqitch plan
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
<<<<<<< HEAD
<<<<<<< HEAD
          "kind": "ENUM",
          "name": "FormChangesOrderBy",
          "description": "Methods to use when ordering `FormChange`.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "CHANGE_REASON_ASC",
              "description": null,
=======
<<<<<<< HEAD
          "kind": "OBJECT",
          "name": "CifUserCifUsersByProjectManagerCreatedByAndDeletedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `ProjectManager`.",
          "fields": [
=======
          "kind": "INPUT_OBJECT",
          "name": "DeleteFormChangeByRowIdInput",
          "description": "All input for the `deleteFormChangeByRowId` mutation.",
          "fields": null,
          "inputFields": [
>>>>>>> chore: add basic SelectOperator component
=======
          "kind": "OBJECT",
          "name": "CifUserCifUsersByProjectUpdatedByAndCreatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `Project`.",
          "fields": [
>>>>>>> refactor: update schema & reorder sqitch plan
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `Project`, and the cursor to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
<<<<<<< HEAD
                      "name": "CifUserCifUsersByProjectManagerCreatedByAndDeletedByManyToManyEdge",
=======
                      "name": "CifUserCifUsersByProjectUpdatedByAndCreatedByManyToManyEdge",
>>>>>>> refactor: update schema & reorder sqitch plan
                      "ofType": null
                    }
                  }
                }
              },
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
=======
>>>>>>> refactor: update schema & reorder sqitch plan
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "CHANGE_REASON_DESC",
              "description": null,
=======
<<<<<<< HEAD
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
<<<<<<< HEAD
=======
              "name": "rowId",
              "description": null,
>>>>>>> chore: add basic SelectOperator component
=======
>>>>>>> refactor: update schema & reorder sqitch plan
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
              },
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
              "isDeprecated": false,
              "deprecationReason": null
            },
=======
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "DeleteFormChangeInput",
          "description": "All input for the `deleteFormChange` mutation.",
          "fields": null,
          "inputFields": [
>>>>>>> chore: add basic SelectOperator component
            {
<<<<<<< HEAD
              "name": "CHANGE_STATUS_ASC",
              "description": null,
=======
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
>>>>>>> chore: add basic SelectOperator component
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "CHANGE_STATUS_DESC",
              "description": null,
=======
<<<<<<< HEAD
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
=======
              "name": "id",
              "description": "The globally unique `ID` which will identify a single `FormChange` to be deleted.",
>>>>>>> chore: add basic SelectOperator component
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
          "name": "CifUserCifUsersByProjectManagerCreatedByAndDeletedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `ProjectManager`.",
=======
          "name": "CifUserCifUsersByProjectUpdatedByAndCreatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `Project`.",
>>>>>>> refactor: update schema & reorder sqitch plan
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
>>>>>>> chore: add basic SelectOperator component
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "FORM_DATA_RECORD_ID_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FORM_DATA_RECORD_ID_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FORM_DATA_SCHEMA_NAME_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FORM_DATA_SCHEMA_NAME_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FORM_DATA_TABLE_NAME_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FORM_DATA_TABLE_NAME_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ID_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ID_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NATURAL",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NEW_FORM_DATA_ASC",
              "description": null,
=======
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
=======
          "name": "DeleteFormChangePayload",
          "description": "The output of our delete `FormChange` mutation.",
          "fields": [
            {
              "name": "changeStatusByChangeStatus",
              "description": "Reads a single `ChangeStatus` that is related to this `FormChange`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "ChangeStatus",
>>>>>>> chore: add basic SelectOperator component
                "ofType": null
              },
>>>>>>> chore: add basic SelectOperator component
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "NEW_FORM_DATA_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "OPERATION_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "OPERATION_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PRIMARY_KEY_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PRIMARY_KEY_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "FundingStream",
          "description": "Table containing information about a CIF funding_stream",
          "fields": [
            {
              "name": "cifUserByCreatedBy",
              "description": "Reads a single `CifUser` that is related to this `FundingStream`.",
=======
<<<<<<< HEAD
              "name": "projectManagersByDeletedBy",
              "description": "Reads and enables pagination through a set of `ProjectManager`.",
=======
              "name": "clientMutationId",
              "description": "The exact same `clientMutationId` that was provided in the mutation input,\nunchanged and unused. May be used by a client to track mutations.",
>>>>>>> chore: add basic SelectOperator component
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "cifUserByDeletedBy",
              "description": "Reads a single `CifUser` that is related to this `FundingStream`.",
=======
              "name": "deletedFormChangeId",
              "description": null,
>>>>>>> chore: add basic SelectOperator component
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "cifUserByUpdatedBy",
              "description": "Reads a single `CifUser` that is related to this `FundingStream`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
=======
              "name": "formChange",
              "description": "The `FormChange` that was deleted by this mutation.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "FormChange",
>>>>>>> chore: add basic SelectOperator component
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
<<<<<<< HEAD
              "name": "cifUsersByProjectFundingStreamIdAndCreatedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
=======
              "name": "formChangeEdge",
              "description": "An edge for our `FormChange`. May be used by Relay 1.",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
                    "name": "CifUserCondition",
=======
                    "name": "ProjectManagerCondition",
>>>>>>> chore: add basic SelectOperator component
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
                    "name": "CifUserFilter",
=======
                    "name": "ProjectManagerFilter",
>>>>>>> chore: add basic SelectOperator component
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
<<<<<<< HEAD
                  "description": "The method to use when ordering `CifUser`.",
=======
<<<<<<< HEAD
                  "description": "The method to use when ordering `ProjectManager`.",
=======
                  "description": "The method to use when ordering `FormChange`.",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
<<<<<<< HEAD
                        "name": "CifUsersOrderBy",
=======
<<<<<<< HEAD
                        "name": "ProjectManagersOrderBy",
=======
                        "name": "FormChangesOrderBy",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
<<<<<<< HEAD
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
<<<<<<< HEAD
                  "name": "FundingStreamCifUsersByProjectFundingStreamIdAndCreatedByManyToManyConnection",
=======
                  "name": "ProjectManagersConnection",
>>>>>>> chore: add basic SelectOperator component
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
<<<<<<< HEAD
            },
            {
              "name": "cifUsersByProjectFundingStreamIdAndDeletedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
=======
              "name": "projectsByCreatedBy",
              "description": "Reads and enables pagination through a set of `Project`.",
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
                    "name": "CifUserCondition",
=======
                    "name": "ProjectCondition",
>>>>>>> refactor: update schema & reorder sqitch plan
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
                    "name": "CifUserFilter",
=======
                    "name": "ProjectFilter",
>>>>>>> refactor: update schema & reorder sqitch plan
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
<<<<<<< HEAD
                  "description": "The method to use when ordering `CifUser`.",
=======
                  "description": "The method to use when ordering `Project`.",
>>>>>>> refactor: update schema & reorder sqitch plan
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
<<<<<<< HEAD
                        "name": "CifUsersOrderBy",
=======
                        "name": "ProjectsOrderBy",
>>>>>>> refactor: update schema & reorder sqitch plan
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
<<<<<<< HEAD
                  "name": "FundingStreamCifUsersByProjectFundingStreamIdAndDeletedByManyToManyConnection",
=======
                  "name": "ProjectsConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUsersByProjectFundingStreamIdAndUpdatedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `CifUser`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "CifUsersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
=======
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
          "name": "CifUserCifUsersByProjectManagerCreatedByAndUpdatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `ProjectManager`.",
=======
          "name": "CifUserCifUsersByProjectUpdatedByAndDeletedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `Project`.",
>>>>>>> refactor: update schema & reorder sqitch plan
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `Project`, and the cursor to aid in pagination.",
              "args": [],
=======
                "kind": "OBJECT",
                "name": "FormChangesEdge",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "query",
              "description": "Our root query field type. Allows us to run any query from our mutation payload.",
              "args": [],
              "type": {
<<<<<<< HEAD
                "kind": "OBJECT",
                "name": "Query",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "FormChange",
          "description": null,
          "fields": [
            {
              "name": "changeReason",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
=======
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CifUserCifUsersByProjectUpdatedByAndDeletedByManyToManyEdge",
                      "ofType": null
                    }
                  }
                }
>>>>>>> refactor: update schema & reorder sqitch plan
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "changeStatus",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "changeStatusByChangeStatus",
              "description": "Reads a single `ChangeStatus` that is related to this `FormChange`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "ChangeStatus",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "formDataRecordId",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "formDataSchemaName",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "formDataTableName",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": "A globally unique identifier. Can be used in various places throughout the system to identify this single value.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "newFormData",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "JSON",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "operation",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "rowId",
              "description": null,
=======
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [],
>>>>>>> chore: add basic SelectOperator component
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "FundingStreamCifUsersByProjectFundingStreamIdAndUpdatedByManyToManyConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
<<<<<<< HEAD
            },
            {
              "name": "createdAt",
              "description": "created at timestamp",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Datetime",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdBy",
              "description": "created by user id",
              "args": [],
=======
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
<<<<<<< HEAD
          "kind": "INPUT_OBJECT",
          "name": "FormChangeCondition",
          "description": "A condition to be used against `FormChange` object types. All fields are tested\nfor equality and combined with a logical ‘and.’",
          "fields": null,
          "inputFields": [
=======
          "kind": "OBJECT",
          "name": "CifUserCifUsersByProjectUpdatedByAndDeletedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `Project`.",
          "fields": [
>>>>>>> refactor: update schema & reorder sqitch plan
            {
              "name": "changeReason",
              "description": "Checks for equality with the object’s `changeReason` field.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "changeStatus",
              "description": "Checks for equality with the object’s `changeStatus` field.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "formDataRecordId",
              "description": "Checks for equality with the object’s `formDataRecordId` field.",
>>>>>>> chore: add basic SelectOperator component
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
<<<<<<< HEAD
              "name": "deletedAt",
              "description": "deleted at timestamp",
              "args": [],
=======
              "name": "formDataSchemaName",
              "description": "Checks for equality with the object’s `formDataSchemaName` field.",
>>>>>>> chore: add basic SelectOperator component
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
<<<<<<< HEAD
              "name": "deletedBy",
              "description": "deleted by user id",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
=======
              "name": "formDataTableName",
              "description": "Checks for equality with the object’s `formDataTableName` field.",
>>>>>>> chore: add basic SelectOperator component
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CifUserCifUsersByProjectManagerCreatedByAndUpdatedByManyToManyEdge",
                      "ofType": null
                    }
                  }
                }
>>>>>>> chore: add basic SelectOperator component
              },
              "defaultValue": null
            },
            {
<<<<<<< HEAD
              "name": "description",
              "description": "Description of the funding_stream",
=======
<<<<<<< HEAD
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
>>>>>>> chore: add basic SelectOperator component
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
<<<<<<< HEAD
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
=======
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
=======
              "name": "newFormData",
              "description": "Checks for equality with the object’s `newFormData` field.",
              "type": {
                "kind": "SCALAR",
                "name": "JSON",
                "ofType": null
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
              },
              "defaultValue": null
            },
            {
<<<<<<< HEAD
              "name": "id",
              "description": "A globally unique identifier. Can be used in various places throughout the system to identify this single value.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "name",
              "description": "Shortname of the funding stream program",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "projectsByFundingStreamId",
=======
              "name": "projectsByDeletedBy",
>>>>>>> refactor: update schema & reorder sqitch plan
              "description": "Reads and enables pagination through a set of `Project`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `Project`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "ProjectsOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
=======
<<<<<<< HEAD
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
>>>>>>> chore: add basic SelectOperator component
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
<<<<<<< HEAD
<<<<<<< HEAD
                  "name": "ProjectsConnection",
=======
                  "name": "PageInfo",
>>>>>>> chore: add basic SelectOperator component
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "rowId",
              "description": "Unique ID for the funding_stream",
=======
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
>>>>>>> chore: add basic SelectOperator component
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
<<<<<<< HEAD
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "updated at timestamp",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Datetime",
=======
                  "name": "ProjectsConnection",
>>>>>>> refactor: update schema & reorder sqitch plan
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedBy",
              "description": "updated by user id",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
=======
>>>>>>> chore: add basic SelectOperator component
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
<<<<<<< HEAD
          "kind": "OBJECT",
<<<<<<< HEAD
          "name": "FundingStreamCifUsersByProjectFundingStreamIdAndCreatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `Project`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `Project`, and the cursor to aid in pagination.",
              "args": [],
=======
          "name": "CifUserCifUsersByProjectManagerCreatedByAndUpdatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `ProjectManager`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
=======
              "name": "operation",
              "description": "Checks for equality with the object’s `operation` field.",
>>>>>>> chore: add basic SelectOperator component
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "FundingStreamCifUsersByProjectFundingStreamIdAndCreatedByManyToManyEdge",
                      "ofType": null
                    }
                  }
                }
=======
          "kind": "INPUT_OBJECT",
          "name": "CifUserCondition",
          "description": "A condition to be used against `CifUser` object types. All fields are tested for equality and combined with a logical ‘and.’",
          "fields": null,
          "inputFields": [
            {
              "name": "createdAt",
              "description": "Checks for equality with the object’s `createdAt` field.",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
>>>>>>> refactor: update schema & reorder sqitch plan
              },
              "defaultValue": null
            },
            {
<<<<<<< HEAD
<<<<<<< HEAD
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
=======
              "name": "createdBy",
              "description": "Checks for equality with the object’s `createdBy` field.",
>>>>>>> refactor: update schema & reorder sqitch plan
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "deletedAt",
              "description": "Checks for equality with the object’s `deletedAt` field.",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "deletedBy",
              "description": "Checks for equality with the object’s `deletedBy` field.",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
<<<<<<< HEAD
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "FundingStreamCifUsersByProjectFundingStreamIdAndCreatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `Project`.",
          "fields": [
=======
              "defaultValue": null
            },
>>>>>>> refactor: update schema & reorder sqitch plan
            {
              "name": "emailAddress",
              "description": "Checks for equality with the object’s `emailAddress` field.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
<<<<<<< HEAD
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
=======
              "name": "rowId",
              "description": "Checks for equality with the object’s `rowId` field.",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "FormChangeFilter",
          "description": "A filter to be used against `FormChange` object types. All fields are combined with a logical ‘and.’",
          "fields": null,
          "inputFields": [
            {
              "name": "and",
              "description": "Checks for all expressions in this list.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "FormChangeFilter",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "changeReason",
              "description": "Filter by the object’s `changeReason` field.",
>>>>>>> chore: add basic SelectOperator component
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilter",
=======
              "name": "firstName",
              "description": "Checks for equality with the object’s `firstName` field.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "lastName",
              "description": "Checks for equality with the object’s `lastName` field.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "rowId",
              "description": "Checks for equality with the object’s `rowId` field.",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
>>>>>>> refactor: update schema & reorder sqitch plan
                "ofType": null
              },
              "defaultValue": null
            },
            {
<<<<<<< HEAD
<<<<<<< HEAD
              "name": "projectsByCreatedBy",
              "description": "Reads and enables pagination through a set of `Project`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `Project`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "ProjectsOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProjectsConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "FundingStreamCifUsersByProjectFundingStreamIdAndDeletedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `Project`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `Project`, and the cursor to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "FundingStreamCifUsersByProjectFundingStreamIdAndDeletedByManyToManyEdge",
                      "ofType": null
                    }
                  }
                }
=======
              "name": "changeStatus",
              "description": "Filter by the object’s `changeStatus` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilter",
                "ofType": null
>>>>>>> chore: add basic SelectOperator component
=======
              "name": "updatedAt",
              "description": "Checks for equality with the object’s `updatedAt` field.",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "updatedBy",
              "description": "Checks for equality with the object’s `updatedBy` field.",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
>>>>>>> refactor: update schema & reorder sqitch plan
              },
              "defaultValue": null
            },
            {
<<<<<<< HEAD
<<<<<<< HEAD
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
=======
              "name": "changeStatusByChangeStatus",
              "description": "Filter by the object’s `changeStatusByChangeStatus` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "ChangeStatusFilter",
                "ofType": null
>>>>>>> chore: add basic SelectOperator component
              },
              "defaultValue": null
            },
            {
<<<<<<< HEAD
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
=======
              "name": "uuid",
              "description": "Checks for equality with the object’s `uuid` field.",
              "type": {
                "kind": "SCALAR",
                "name": "UUID",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CifUserFilter",
          "description": "A filter to be used against `CifUser` object types. All fields are combined with a logical ‘and.’",
          "fields": null,
          "inputFields": [
            {
              "name": "and",
              "description": "Checks for all expressions in this list.",
>>>>>>> refactor: update schema & reorder sqitch plan
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserFilter",
                    "ofType": null
                  }
                }
=======
              "name": "changeStatusByChangeStatusExists",
              "description": "A related `changeStatusByChangeStatus` exists.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
>>>>>>> chore: add basic SelectOperator component
              },
              "defaultValue": null
            },
            {
<<<<<<< HEAD
<<<<<<< HEAD
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
=======
              "name": "attachmentsByCreatedBy",
              "description": "Filter by the object’s `attachmentsByCreatedBy` relation.",
>>>>>>> refactor: update schema & reorder sqitch plan
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserToManyAttachmentFilter",
                "ofType": null
              },
<<<<<<< HEAD
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "FundingStreamCifUsersByProjectFundingStreamIdAndDeletedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `Project`.",
          "fields": [
=======
              "defaultValue": null
            },
>>>>>>> refactor: update schema & reorder sqitch plan
            {
              "name": "attachmentsByCreatedByExist",
              "description": "Some related `attachmentsByCreatedBy` exist.",
              "type": {
                "kind": "SCALAR",
<<<<<<< HEAD
                "name": "Cursor",
=======
              "name": "formDataRecordId",
              "description": "Filter by the object’s `formDataRecordId` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IntFilter",
=======
                "name": "Boolean",
>>>>>>> refactor: update schema & reorder sqitch plan
                "ofType": null
              },
              "defaultValue": null
            },
            {
<<<<<<< HEAD
              "name": "formDataSchemaName",
              "description": "Filter by the object’s `formDataSchemaName` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilter",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
              "name": "attachmentsByDeletedBy",
              "description": "Filter by the object’s `attachmentsByDeletedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserToManyAttachmentFilter",
>>>>>>> refactor: update schema & reorder sqitch plan
                "ofType": null
              },
              "defaultValue": null
            },
            {
<<<<<<< HEAD
<<<<<<< HEAD
=======
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
=======
              "name": "attachmentsByDeletedByExist",
              "description": "Some related `attachmentsByDeletedBy` exist.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "attachmentsByUpdatedBy",
              "description": "Filter by the object’s `attachmentsByUpdatedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserToManyAttachmentFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "attachmentsByUpdatedByExist",
              "description": "Some related `attachmentsByUpdatedBy` exist.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
>>>>>>> refactor: update schema & reorder sqitch plan
                "ofType": null
              },
              "defaultValue": null
            },
            {
<<<<<<< HEAD
<<<<<<< HEAD
              "name": "projectsByDeletedBy",
              "description": "Reads and enables pagination through a set of `Project`.",
=======
              "name": "projectManagersByUpdatedBy",
              "description": "Reads and enables pagination through a set of `ProjectManager`.",
>>>>>>> chore: add basic SelectOperator component
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
                    "name": "ProjectCondition",
=======
                    "name": "ProjectManagerCondition",
>>>>>>> chore: add basic SelectOperator component
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
<<<<<<< HEAD
                    "name": "ProjectFilter",
=======
                    "name": "ProjectManagerFilter",
>>>>>>> chore: add basic SelectOperator component
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `Project`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "ProjectsOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
<<<<<<< HEAD
                  "name": "ProjectsConnection",
=======
                  "name": "ProjectManagersConnection",
>>>>>>> chore: add basic SelectOperator component
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
          "name": "FundingStreamCifUsersByProjectFundingStreamIdAndUpdatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `Project`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `Project`, and the cursor to aid in pagination.",
=======
          "name": "CifUserCifUsersByProjectManagerDeletedByAndCifUserIdManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `ProjectManager`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `ProjectManager`, and the cursor to aid in pagination.",
>>>>>>> chore: add basic SelectOperator component
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
<<<<<<< HEAD
                      "name": "FundingStreamCifUsersByProjectFundingStreamIdAndUpdatedByManyToManyEdge",
=======
                      "name": "CifUserCifUsersByProjectManagerDeletedByAndCifUserIdManyToManyEdge",
>>>>>>> chore: add basic SelectOperator component
                      "ofType": null
                    }
                  }
                }
<<<<<<< HEAD
=======
=======
              "name": "formDataTableName",
              "description": "Filter by the object’s `formDataTableName` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilter",
                "ofType": null
>>>>>>> chore: add basic SelectOperator component
=======
              "name": "changeStatusesByCreatedBy",
              "description": "Filter by the object’s `changeStatusesByCreatedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserToManyChangeStatusFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "changeStatusesByCreatedByExist",
              "description": "Some related `changeStatusesByCreatedBy` exist.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "changeStatusesByDeletedBy",
              "description": "Filter by the object’s `changeStatusesByDeletedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserToManyChangeStatusFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "changeStatusesByDeletedByExist",
              "description": "Some related `changeStatusesByDeletedBy` exist.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "changeStatusesByUpdatedBy",
              "description": "Filter by the object’s `changeStatusesByUpdatedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserToManyChangeStatusFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "changeStatusesByUpdatedByExist",
              "description": "Some related `changeStatusesByUpdatedBy` exist.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "cifUserByCreatedBy",
              "description": "Filter by the object’s `cifUserByCreatedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "cifUserByCreatedByExists",
              "description": "A related `cifUserByCreatedBy` exists.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "cifUserByDeletedBy",
              "description": "Filter by the object’s `cifUserByDeletedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "cifUserByDeletedByExists",
              "description": "A related `cifUserByDeletedBy` exists.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "cifUserByUpdatedBy",
              "description": "Filter by the object’s `cifUserByUpdatedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "cifUserByUpdatedByExists",
              "description": "A related `cifUserByUpdatedBy` exists.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "cifUsersByCreatedBy",
              "description": "Filter by the object’s `cifUsersByCreatedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserToManyCifUserFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "cifUsersByCreatedByExist",
              "description": "Some related `cifUsersByCreatedBy` exist.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "cifUsersByDeletedBy",
              "description": "Filter by the object’s `cifUsersByDeletedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserToManyCifUserFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "cifUsersByDeletedByExist",
              "description": "Some related `cifUsersByDeletedBy` exist.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "cifUsersByUpdatedBy",
              "description": "Filter by the object’s `cifUsersByUpdatedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserToManyCifUserFilter",
                "ofType": null
>>>>>>> refactor: update schema & reorder sqitch plan
              },
              "defaultValue": null
            },
            {
<<<<<<< HEAD
<<<<<<< HEAD
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
=======
              "name": "newFormData",
              "description": "Filter by the object’s `newFormData` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "JSONFilter",
=======
              "name": "cifUsersByUpdatedByExist",
              "description": "Some related `cifUsersByUpdatedBy` exist.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
>>>>>>> refactor: update schema & reorder sqitch plan
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "createdAt",
              "description": "Filter by the object’s `createdAt` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DatetimeFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
<<<<<<< HEAD
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "FundingStreamCifUsersByProjectFundingStreamIdAndUpdatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `Project`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
=======
=======
              "name": "createdBy",
              "description": "Filter by the object’s `createdBy` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IntFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "deletedAt",
              "description": "Filter by the object’s `deletedAt` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DatetimeFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "deletedBy",
              "description": "Filter by the object’s `deletedBy` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IntFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "emailAddress",
              "description": "Filter by the object’s `emailAddress` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "firstName",
              "description": "Filter by the object’s `firstName` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "keycloakJwtsBySub",
              "description": "Filter by the object’s `keycloakJwtsBySub` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserToManyKeycloakJwtFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "keycloakJwtsBySubExist",
              "description": "Some related `keycloakJwtsBySub` exist.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "lastName",
              "description": "Filter by the object’s `lastName` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
>>>>>>> refactor: update schema & reorder sqitch plan
              "name": "not",
              "description": "Negates the expression.",
              "type": {
                "kind": "INPUT_OBJECT",
<<<<<<< HEAD
                "name": "FormChangeFilter",
>>>>>>> chore: add basic SelectOperator component
=======
                "name": "CifUserFilter",
>>>>>>> refactor: update schema & reorder sqitch plan
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "operatorsByCreatedBy",
              "description": "Filter by the object’s `operatorsByCreatedBy` relation.",
              "type": {
<<<<<<< HEAD
                "kind": "OBJECT",
                "name": "CifUser",
=======
              "name": "operation",
              "description": "Filter by the object’s `operation` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilter",
>>>>>>> chore: add basic SelectOperator component
=======
                "kind": "INPUT_OBJECT",
                "name": "CifUserToManyOperatorFilter",
>>>>>>> refactor: update schema & reorder sqitch plan
                "ofType": null
              },
              "defaultValue": null
            },
            {
<<<<<<< HEAD
<<<<<<< HEAD
              "name": "projectsByUpdatedBy",
              "description": "Reads and enables pagination through a set of `Project`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `Project`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "ProjectsOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProjectsConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
=======
=======
              "name": "operatorsByCreatedByExist",
              "description": "Some related `operatorsByCreatedBy` exist.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "operatorsByDeletedBy",
              "description": "Filter by the object’s `operatorsByDeletedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserToManyOperatorFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "operatorsByDeletedByExist",
              "description": "Some related `operatorsByDeletedBy` exist.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "operatorsByUpdatedBy",
              "description": "Filter by the object’s `operatorsByUpdatedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserToManyOperatorFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "operatorsByUpdatedByExist",
              "description": "Some related `operatorsByUpdatedBy` exist.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
>>>>>>> refactor: update schema & reorder sqitch plan
              "name": "or",
              "description": "Checks for any expressions in this list.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserFilter",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "projectManagersByCifUserId",
              "description": "Filter by the object’s `projectManagersByCifUserId` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserToManyProjectManagerFilter",
                "ofType": null
              },
              "defaultValue": null
<<<<<<< HEAD
            }
          ],
          "interfaces": null,
>>>>>>> chore: add basic SelectOperator component
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
<<<<<<< HEAD
          "name": "FundingStreamCondition",
          "description": "A condition to be used against `FundingStream` object types. All fields are\ntested for equality and combined with a logical ‘and.’",
          "fields": null,
          "inputFields": [
            {
              "name": "createdAt",
              "description": "Checks for equality with the object’s `createdAt` field.",
=======
          "name": "FormChangeInput",
          "description": "An input for mutations affecting `FormChange`",
          "fields": null,
          "inputFields": [
            {
              "name": "changeReason",
              "description": null,
>>>>>>> chore: add basic SelectOperator component
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
=======
            },
            {
              "name": "projectManagersByCifUserIdExist",
              "description": "Some related `projectManagersByCifUserId` exist.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
>>>>>>> refactor: update schema & reorder sqitch plan
                "ofType": null
              },
              "defaultValue": null
            },
            {
<<<<<<< HEAD
<<<<<<< HEAD
              "name": "createdBy",
              "description": "Checks for equality with the object’s `createdBy` field.",
=======
              "name": "changeStatus",
              "description": null,
>>>>>>> chore: add basic SelectOperator component
              "type": {
                "kind": "SCALAR",
                "name": "Int",
=======
              "name": "projectManagersByCreatedBy",
              "description": "Filter by the object’s `projectManagersByCreatedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserToManyProjectManagerFilter",
>>>>>>> refactor: update schema & reorder sqitch plan
                "ofType": null
              },
              "defaultValue": null
            },
            {
<<<<<<< HEAD
<<<<<<< HEAD
              "name": "deletedAt",
              "description": "Checks for equality with the object’s `deletedAt` field.",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "deletedBy",
              "description": "Checks for equality with the object’s `deletedBy` field.",
=======
<<<<<<< HEAD
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
=======
              "name": "formDataRecordId",
              "description": null,
>>>>>>> chore: add basic SelectOperator component
=======
              "name": "projectManagersByCreatedByExist",
              "description": "Some related `projectManagersByCreatedBy` exist.",
>>>>>>> refactor: update schema & reorder sqitch plan
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
<<<<<<< HEAD
<<<<<<< HEAD
              "name": "description",
              "description": "Checks for equality with the object’s `description` field.",
=======
<<<<<<< HEAD
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
=======
              "name": "formDataSchemaName",
              "description": null,
>>>>>>> chore: add basic SelectOperator component
=======
              "name": "projectManagersByDeletedBy",
              "description": "Filter by the object’s `projectManagersByDeletedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserToManyProjectManagerFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "projectManagersByDeletedByExist",
              "description": "Some related `projectManagersByDeletedBy` exist.",
>>>>>>> refactor: update schema & reorder sqitch plan
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
<<<<<<< HEAD
<<<<<<< HEAD
              "name": "name",
              "description": "Checks for equality with the object’s `name` field.",
=======
<<<<<<< HEAD
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
=======
              "name": "formDataTableName",
              "description": null,
>>>>>>> chore: add basic SelectOperator component
              "type": {
                "kind": "SCALAR",
                "name": "String",
=======
              "name": "projectManagersByUpdatedBy",
              "description": "Filter by the object’s `projectManagersByUpdatedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserToManyProjectManagerFilter",
>>>>>>> refactor: update schema & reorder sqitch plan
                "ofType": null
              },
              "defaultValue": null
            },
            {
<<<<<<< HEAD
<<<<<<< HEAD
              "name": "rowId",
              "description": "Checks for equality with the object’s `rowId` field.",
=======
              "name": "newFormData",
              "description": null,
>>>>>>> chore: add basic SelectOperator component
              "type": {
                "kind": "SCALAR",
                "name": "Int",
=======
              "name": "projectManagersByUpdatedByExist",
              "description": "Some related `projectManagersByUpdatedBy` exist.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
>>>>>>> refactor: update schema & reorder sqitch plan
                "ofType": null
              },
              "defaultValue": null
            },
            {
<<<<<<< HEAD
<<<<<<< HEAD
              "name": "updatedAt",
              "description": "Checks for equality with the object’s `updatedAt` field.",
=======
              "name": "operation",
              "description": null,
>>>>>>> chore: add basic SelectOperator component
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
=======
              "name": "projectsByCreatedBy",
              "description": "Filter by the object’s `projectsByCreatedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserToManyProjectFilter",
>>>>>>> refactor: update schema & reorder sqitch plan
                "ofType": null
              },
<<<<<<< HEAD
<<<<<<< HEAD
              "defaultValue": null
            },
            {
              "name": "updatedBy",
              "description": "Checks for equality with the object’s `updatedBy` field.",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
=======
              "isDeprecated": false,
              "deprecationReason": null
>>>>>>> chore: add basic SelectOperator component
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
<<<<<<< HEAD
          "kind": "OBJECT",
          "name": "CifUserCifUsersByProjectManagerDeletedByAndCifUserIdManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `ProjectManager`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
=======
          "kind": "INPUT_OBJECT",
<<<<<<< HEAD
          "name": "FundingStreamFilter",
          "description": "A filter to be used against `FundingStream` object types. All fields are combined with a logical ‘and.’",
          "fields": null,
          "inputFields": [
            {
              "name": "and",
              "description": "Checks for all expressions in this list.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "FundingStreamFilter",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "cifUserByCreatedBy",
              "description": "Filter by the object’s `cifUserByCreatedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserFilter",
=======
          "name": "FormChangePatch",
          "description": "Represents an update to a `FormChange`. Fields that are set will be updated.",
          "fields": null,
          "inputFields": [
=======
              "defaultValue": null
            },
>>>>>>> refactor: update schema & reorder sqitch plan
            {
              "name": "projectsByCreatedByExist",
              "description": "Some related `projectsByCreatedBy` exist.",
              "type": {
                "kind": "SCALAR",
<<<<<<< HEAD
                "name": "Cursor",
>>>>>>> chore: add basic SelectOperator component
=======
                "name": "Boolean",
>>>>>>> refactor: update schema & reorder sqitch plan
                "ofType": null
              },
              "defaultValue": null
            },
            {
<<<<<<< HEAD
<<<<<<< HEAD
              "name": "cifUserByCreatedByExists",
              "description": "A related `cifUserByCreatedBy` exists.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "cifUserByDeletedBy",
              "description": "Filter by the object’s `cifUserByDeletedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserFilter",
=======
<<<<<<< HEAD
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
=======
              "name": "projectsByDeletedBy",
              "description": "Filter by the object’s `projectsByDeletedBy` relation.",
>>>>>>> refactor: update schema & reorder sqitch plan
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserToManyProjectFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "projectsByDeletedByExist",
              "description": "Some related `projectsByDeletedBy` exist.",
              "type": {
                "kind": "SCALAR",
<<<<<<< HEAD
                "name": "String",
>>>>>>> chore: add basic SelectOperator component
                "ofType": null
              },
              "defaultValue": null
            },
            {
<<<<<<< HEAD
              "name": "cifUserByDeletedByExists",
              "description": "A related `cifUserByDeletedBy` exists.",
              "type": {
                "kind": "SCALAR",
=======
>>>>>>> refactor: update schema & reorder sqitch plan
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
<<<<<<< HEAD
              "name": "cifUserByUpdatedBy",
              "description": "Filter by the object’s `cifUserByUpdatedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserFilter",
=======
              "name": "formDataRecordId",
              "description": null,
              "type": {
                "kind": "SCALAR",
                "name": "Int",
>>>>>>> chore: add basic SelectOperator component
=======
              "name": "projectsByUpdatedBy",
              "description": "Filter by the object’s `projectsByUpdatedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserToManyProjectFilter",
>>>>>>> refactor: update schema & reorder sqitch plan
                "ofType": null
              },
              "defaultValue": null
            },
            {
<<<<<<< HEAD
<<<<<<< HEAD
              "name": "cifUserByUpdatedByExists",
              "description": "A related `cifUserByUpdatedBy` exists.",
=======
              "name": "formDataSchemaName",
              "description": null,
>>>>>>> chore: add basic SelectOperator component
=======
              "name": "projectsByUpdatedByExist",
              "description": "Some related `projectsByUpdatedBy` exist.",
>>>>>>> refactor: update schema & reorder sqitch plan
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
<<<<<<< HEAD
<<<<<<< HEAD
              "name": "createdAt",
              "description": "Filter by the object’s `createdAt` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DatetimeFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "createdBy",
              "description": "Filter by the object’s `createdBy` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IntFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "deletedAt",
              "description": "Filter by the object’s `deletedAt` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DatetimeFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "deletedBy",
              "description": "Filter by the object’s `deletedBy` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IntFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "description",
              "description": "Filter by the object’s `description` field.",
=======
<<<<<<< HEAD
              "name": "projectManagersByCifUserId",
              "description": "Reads and enables pagination through a set of `ProjectManager`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectManagerCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectManagerFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `ProjectManager`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "ProjectManagersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProjectManagersConnection",
                  "ofType": null
=======
              "name": "formDataTableName",
              "description": null,
>>>>>>> chore: add basic SelectOperator component
=======
              "name": "rowId",
              "description": "Filter by the object’s `rowId` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IntFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "updatedAt",
              "description": "Filter by the object’s `updatedAt` field.",
>>>>>>> refactor: update schema & reorder sqitch plan
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DatetimeFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
<<<<<<< HEAD
<<<<<<< HEAD
              "name": "name",
              "description": "Filter by the object’s `name` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Negates the expression.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "FundingStreamFilter",
=======
              "name": "newFormData",
              "description": null,
              "type": {
                "kind": "SCALAR",
                "name": "JSON",
>>>>>>> chore: add basic SelectOperator component
                "ofType": null
              },
              "defaultValue": null
            },
            {
<<<<<<< HEAD
              "name": "or",
              "description": "Checks for any expressions in this list.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "FundingStreamFilter",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "projectsByFundingStreamId",
              "description": "Filter by the object’s `projectsByFundingStreamId` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "FundingStreamToManyProjectFilter",
=======
              "name": "updatedBy",
              "description": "Filter by the object’s `updatedBy` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IntFilter",
>>>>>>> refactor: update schema & reorder sqitch plan
                "ofType": null
              },
              "defaultValue": null
            },
            {
<<<<<<< HEAD
              "name": "projectsByFundingStreamIdExist",
              "description": "Some related `projectsByFundingStreamId` exist.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "rowId",
              "description": "Filter by the object’s `rowId` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IntFilter",
=======
              "name": "operation",
              "description": null,
              "type": {
                "kind": "SCALAR",
                "name": "String",
>>>>>>> chore: add basic SelectOperator component
=======
              "name": "uuid",
              "description": "Filter by the object’s `uuid` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "UUIDFilter",
>>>>>>> refactor: update schema & reorder sqitch plan
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CifUserInput",
          "description": "An input for mutations affecting `CifUser`",
          "fields": null,
          "inputFields": [
            {
<<<<<<< HEAD
<<<<<<< HEAD
              "name": "updatedAt",
              "description": "Filter by the object’s `updatedAt` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DatetimeFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "updatedBy",
              "description": "Filter by the object’s `updatedBy` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IntFilter",
                "ofType": null
              },
              "defaultValue": null
=======
              "name": "edges",
              "description": "A list of edges which contains the `FormChange` and cursor to aid in pagination.",
              "args": [],
=======
              "name": "createdAt",
              "description": "created at timestamp",
>>>>>>> refactor: update schema & reorder sqitch plan
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
<<<<<<< HEAD
              "isDeprecated": false,
              "deprecationReason": null
>>>>>>> chore: add basic SelectOperator component
=======
              "defaultValue": null
            },
            {
              "name": "createdBy",
              "description": "created by user id",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "deletedAt",
              "description": "deleted at timestamp",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "deletedBy",
              "description": "deleted by user id",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "emailAddress",
              "description": "User's email address",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "firstName",
              "description": "User's first name",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "lastName",
              "description": "User's last name",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "updatedAt",
              "description": "updated at timestamp",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "updatedBy",
              "description": "updated by user id",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "uuid",
              "description": "Universally Unique ID for the user, defined by the single sign-on provider",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "UUID",
                  "ofType": null
                }
              },
              "defaultValue": null
>>>>>>> refactor: update schema & reorder sqitch plan
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
<<<<<<< HEAD
          "kind": "INPUT_OBJECT",
          "name": "FundingStreamInput",
          "description": "An input for mutations affecting `FundingStream`",
          "fields": null,
          "inputFields": [
            {
              "name": "createdAt",
              "description": "created at timestamp",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
=======
          "kind": "OBJECT",
          "name": "CifUserOperatorsByProjectCreatedByAndOperatorIdManyToManyConnection",
          "description": "A connection to a list of `Operator` values, with data from `Project`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `Operator`, info from the `Project`, and the cursor to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CifUserOperatorsByProjectCreatedByAndOperatorIdManyToManyEdge",
                      "ofType": null
                    }
                  }
                }
>>>>>>> chore: add basic SelectOperator component
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
<<<<<<< HEAD
              "name": "createdBy",
              "description": "created by user id",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "deletedAt",
              "description": "deleted at timestamp",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "deletedBy",
              "description": "deleted by user id",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "description",
              "description": "Description of the funding_stream",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "name",
              "description": "Shortname of the funding stream program",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "updatedAt",
              "description": "updated at timestamp",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "updatedBy",
              "description": "updated by user id",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "FundingStreamPatch",
          "description": "Represents an update to a `FundingStream`. Fields that are set will be updated.",
          "fields": null,
          "inputFields": [
            {
              "name": "createdAt",
              "description": "created at timestamp",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "createdBy",
              "description": "created by user id",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "deletedAt",
              "description": "deleted at timestamp",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "deletedBy",
              "description": "deleted by user id",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "description",
              "description": "Description of the funding_stream",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "name",
              "description": "Shortname of the funding stream program",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "updatedAt",
              "description": "updated at timestamp",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "updatedBy",
              "description": "updated by user id",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "FundingStreamToManyProjectFilter",
          "description": "A filter to be used against many `Project` object types. All fields are combined with a logical ‘and.’",
          "fields": null,
          "inputFields": [
            {
              "name": "every",
              "description": "Every related `Project` matches the filter criteria. All fields are combined with a logical ‘and.’",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "ProjectFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "none",
              "description": "No related `Project` matches the filter criteria. All fields are combined with a logical ‘and.’",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "ProjectFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "some",
              "description": "Some related `Project` matches the filter criteria. All fields are combined with a logical ‘and.’",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "ProjectFilter",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "FundingStreamsConnection",
          "description": "A connection to a list of `FundingStream` values.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `FundingStream` and cursor to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "FundingStreamsEdge",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of `FundingStream` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "FundingStream",
                    "ofType": null
                  }
                }
              },
=======
<<<<<<< HEAD
=======
>>>>>>> refactor: update schema & reorder sqitch plan
              "name": "nodes",
              "description": "A list of `Operator` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "Operator",
                    "ofType": null
                  }
                }
              },
>>>>>>> chore: add basic SelectOperator component
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
<<<<<<< HEAD
<<<<<<< HEAD
              "description": "The count of *all* `FundingStream` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
=======
              "description": "The count of *all* `CifUser` you could get from the connection.",
=======
>>>>>>> chore: add basic SelectOperator component
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "FundingStreamsEdge",
          "description": "A `FundingStream` edge in the connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
<<<<<<< HEAD
              "description": "The `FundingStream` at the end of the edge.",
=======
              "description": "The `FormChange` at the end of the edge.",
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "FundingStream",
                "ofType": null
=======
              "description": "The count of *all* `Operator` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
>>>>>>> refactor: update schema & reorder sqitch plan
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserOperatorsByProjectCreatedByAndOperatorIdManyToManyEdge",
          "description": "A `Operator` edge in the connection, with data from `Project`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
<<<<<<< HEAD
=======
          "kind": "ENUM",
          "name": "FundingStreamsOrderBy",
          "description": "Methods to use when ordering `FundingStream`.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "CREATED_AT_ASC",
              "description": null,
>>>>>>> chore: add basic SelectOperator component
=======
>>>>>>> refactor: update schema & reorder sqitch plan
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
<<<<<<< HEAD
              "name": "CREATED_AT_DESC",
=======
<<<<<<< HEAD
=======
>>>>>>> refactor: update schema & reorder sqitch plan
              "name": "node",
              "description": "The `Operator` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Operator",
                "ofType": null
              },
<<<<<<< HEAD
=======
              "name": "CHANGE_REASON_DESC",
>>>>>>> chore: add basic SelectOperator component
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CREATED_BY_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CREATED_BY_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DELETED_AT_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DELETED_AT_DESC",
              "description": null,
>>>>>>> chore: add basic SelectOperator component
=======
>>>>>>> refactor: update schema & reorder sqitch plan
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
<<<<<<< HEAD
              "name": "DELETED_BY_ASC",
=======
<<<<<<< HEAD
              "name": "projectManagersByCreatedBy",
              "description": "Reads and enables pagination through a set of `ProjectManager`.",
=======
              "name": "projectsByOperatorId",
              "description": "Reads and enables pagination through a set of `Project`.",
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `Project`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "ProjectsOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProjectsConnection",
                  "ofType": null
                }
              },
<<<<<<< HEAD
=======
              "name": "FORM_DATA_SCHEMA_NAME_ASC",
>>>>>>> chore: add basic SelectOperator component
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "DELETED_BY_DESC",
=======
              "name": "FORM_DATA_SCHEMA_NAME_DESC",
>>>>>>> chore: add basic SelectOperator component
              "description": null,
=======
>>>>>>> refactor: update schema & reorder sqitch plan
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserOperatorsByProjectDeletedByAndOperatorIdManyToManyConnection",
          "description": "A connection to a list of `Operator` values, with data from `Project`.",
          "fields": [
            {
<<<<<<< HEAD
<<<<<<< HEAD
              "name": "DESCRIPTION_ASC",
=======
              "name": "FORM_DATA_TABLE_NAME_ASC",
>>>>>>> chore: add basic SelectOperator component
              "description": null,
=======
              "name": "edges",
              "description": "A list of edges which contains the `Operator`, info from the `Project`, and the cursor to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CifUserOperatorsByProjectDeletedByAndOperatorIdManyToManyEdge",
                      "ofType": null
                    }
                  }
                }
              },
>>>>>>> refactor: update schema & reorder sqitch plan
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
<<<<<<< HEAD
              "name": "DESCRIPTION_DESC",
=======
              "name": "FORM_DATA_TABLE_NAME_DESC",
>>>>>>> chore: add basic SelectOperator component
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ID_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ID_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NAME_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NAME_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NATURAL",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PRIMARY_KEY_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PRIMARY_KEY_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UPDATED_AT_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UPDATED_AT_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UPDATED_BY_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UPDATED_BY_DESC",
              "description": null,
>>>>>>> chore: add basic SelectOperator component
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "SCALAR",
          "name": "ID",
          "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
<<<<<<< HEAD
          "kind": "OBJECT",
          "name": "CifUserCifUsersByProjectManagerDeletedByAndUpdatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `ProjectManager`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `ProjectManager`, and the cursor to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CifUserCifUsersByProjectManagerDeletedByAndUpdatedByManyToManyEdge",
                      "ofType": null
                    }
                  }
                }
=======
          "kind": "SCALAR",
          "name": "Int",
          "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "IntFilter",
          "description": "A filter to be used against Int fields. All fields are combined with a logical ‘and.’",
          "fields": null,
          "inputFields": [
            {
              "name": "distinctFrom",
              "description": "Not equal to the specified value, treating null like an ordinary value.",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
>>>>>>> chore: add basic SelectOperator component
              },
              "defaultValue": null
            },
            {
<<<<<<< HEAD
=======
>>>>>>> refactor: update schema & reorder sqitch plan
              "name": "nodes",
              "description": "A list of `Operator` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "Operator",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "The count of *all* `Operator` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserOperatorsByProjectDeletedByAndOperatorIdManyToManyEdge",
          "description": "A `Operator` edge in the connection, with data from `Project`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `Operator` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Operator",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projectsByOperatorId",
              "description": "Reads and enables pagination through a set of `Project`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
<<<<<<< HEAD
                  "description": "The method to use when ordering `ProjectManager`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "ProjectManagersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProjectManagersConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserCifUsersByProjectManagerUpdatedByAndCifUserIdManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `ProjectManager`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `ProjectManager`, and the cursor to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CifUserCifUsersByProjectManagerUpdatedByAndCifUserIdManyToManyEdge",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
=======
              "name": "lessThanOrEqualTo",
              "description": "Less than or equal to the specified value.",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "notDistinctFrom",
              "description": "Equal to the specified value, treating null like an ordinary value.",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
>>>>>>> chore: add basic SelectOperator component
              },
              "defaultValue": null
            },
            {
<<<<<<< HEAD
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
=======
              "name": "notEqualTo",
              "description": "Not equal to the specified value.",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
>>>>>>> chore: add basic SelectOperator component
              },
              "defaultValue": null
            },
            {
<<<<<<< HEAD
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
=======
              "name": "notIn",
              "description": "Not included in the specified list.",
>>>>>>> chore: add basic SelectOperator component
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "SCALAR",
          "name": "JSON",
          "description": "A JavaScript object encoded in the JSON format as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).",
          "fields": null,
          "inputFields": null,
<<<<<<< HEAD
          "interfaces": [],
=======
          "interfaces": null,
>>>>>>> chore: add basic SelectOperator component
          "enumValues": null,
          "possibleTypes": null
        },
        {
<<<<<<< HEAD
          "kind": "OBJECT",
          "name": "CifUserCifUsersByProjectManagerUpdatedByAndCifUserIdManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `ProjectManager`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
=======
          "kind": "INPUT_OBJECT",
          "name": "JSONFilter",
          "description": "A filter to be used against JSON fields. All fields are combined with a logical ‘and.’",
          "fields": null,
          "inputFields": [
            {
              "name": "containedBy",
              "description": "Contained by the specified JSON.",
              "type": {
                "kind": "SCALAR",
                "name": "JSON",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "contains",
              "description": "Contains the specified JSON.",
              "type": {
                "kind": "SCALAR",
                "name": "JSON",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "containsAllKeys",
              "description": "Contains all of the specified keys.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "containsAnyKeys",
              "description": "Contains any of the specified keys.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "containsKey",
              "description": "Contains the specified key.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "distinctFrom",
              "description": "Not equal to the specified value, treating null like an ordinary value.",
              "type": {
                "kind": "SCALAR",
                "name": "JSON",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "equalTo",
              "description": "Equal to the specified value.",
>>>>>>> chore: add basic SelectOperator component
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
=======
              "name": "greaterThan",
              "description": "Greater than the specified value.",
              "type": {
                "kind": "SCALAR",
                "name": "JSON",
>>>>>>> chore: add basic SelectOperator component
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "projectManagersByCifUserId",
              "description": "Reads and enables pagination through a set of `ProjectManager`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectManagerCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectManagerFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `ProjectManager`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "ProjectManagersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProjectManagersConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserCifUsersByProjectManagerUpdatedByAndCreatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `ProjectManager`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `ProjectManager`, and the cursor to aid in pagination.",
              "args": [],
=======
              "name": "greaterThanOrEqualTo",
              "description": "Greater than or equal to the specified value.",
              "type": {
                "kind": "SCALAR",
                "name": "JSON",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "in",
              "description": "Included in the specified list.",
>>>>>>> chore: add basic SelectOperator component
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
<<<<<<< HEAD
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CifUserCifUsersByProjectManagerUpdatedByAndCreatedByManyToManyEdge",
                      "ofType": null
                    }
=======
                    "kind": "SCALAR",
                    "name": "JSON",
                    "ofType": null
>>>>>>> chore: add basic SelectOperator component
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserCifUsersByProjectManagerUpdatedByAndCreatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `ProjectManager`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
=======
              "name": "isNull",
              "description": "Is null (if `true` is specified) or is not null (if `false` is specified).",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "lessThan",
              "description": "Less than the specified value.",
              "type": {
                "kind": "SCALAR",
                "name": "JSON",
>>>>>>> chore: add basic SelectOperator component
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
=======
              "name": "lessThanOrEqualTo",
              "description": "Less than or equal to the specified value.",
              "type": {
                "kind": "SCALAR",
                "name": "JSON",
>>>>>>> chore: add basic SelectOperator component
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "projectManagersByCreatedBy",
              "description": "Reads and enables pagination through a set of `ProjectManager`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectManagerCondition",
=======
              "name": "notDistinctFrom",
              "description": "Equal to the specified value, treating null like an ordinary value.",
              "type": {
                "kind": "SCALAR",
                "name": "JSON",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "notEqualTo",
              "description": "Not equal to the specified value.",
              "type": {
                "kind": "SCALAR",
                "name": "JSON",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "notIn",
              "description": "Not included in the specified list.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "JSON",
>>>>>>> chore: add basic SelectOperator component
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectManagerFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `ProjectManager`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "ProjectManagersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
<<<<<<< HEAD
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProjectManagersConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
=======
              },
              "defaultValue": null
>>>>>>> chore: add basic SelectOperator component
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
          "name": "CifUserCifUsersByProjectManagerUpdatedByAndDeletedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `ProjectManager`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `ProjectManager`, and the cursor to aid in pagination.",
=======
          "name": "KeycloakJwt",
          "description": null,
          "fields": [
            {
              "name": "acr",
              "description": null,
>>>>>>> chore: add basic SelectOperator component
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CifUserCifUsersByProjectManagerUpdatedByAndDeletedByManyToManyEdge",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
=======
              "name": "aud",
              "description": null,
>>>>>>> chore: add basic SelectOperator component
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
=======
              "name": "authTime",
              "description": null,
>>>>>>> chore: add basic SelectOperator component
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
=======
              "name": "azp",
              "description": null,
>>>>>>> chore: add basic SelectOperator component
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
<<<<<<< HEAD
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserCifUsersByProjectManagerUpdatedByAndDeletedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `ProjectManager`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
=======
            },
            {
              "name": "brokerSessionId",
              "description": null,
>>>>>>> chore: add basic SelectOperator component
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
=======
              "name": "cifUserBySub",
              "description": "Reads a single `CifUser` that is related to this `KeycloakJwt`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "email",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
>>>>>>> chore: add basic SelectOperator component
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "projectManagersByDeletedBy",
              "description": "Reads and enables pagination through a set of `ProjectManager`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectManagerCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectManagerFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `ProjectManager`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "ProjectManagersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
=======
              "name": "emailVerified",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "exp",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "familyName",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "givenName",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "iat",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "iss",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "jti",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "UUID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "name",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nbf",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "preferredUsername",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "priorityGroup",
              "description": null,
              "args": [],
>>>>>>> chore: add basic SelectOperator component
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProjectManagersConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
<<<<<<< HEAD
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserCifUsersByProjectUpdatedByAndCreatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `Project`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `Project`, and the cursor to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CifUserCifUsersByProjectUpdatedByAndCreatedByManyToManyEdge",
                      "ofType": null
                    }
                  }
                }
=======
            },
            {
              "name": "sessionState",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "UUID",
                "ofType": null
>>>>>>> chore: add basic SelectOperator component
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserCifUsersByProjectUpdatedByAndCreatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `Project`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projectsByCreatedBy",
              "description": "Reads and enables pagination through a set of `Project`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `Project`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "ProjectsOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProjectsConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserCifUsersByProjectUpdatedByAndDeletedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `Project`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `Project`, and the cursor to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CifUserCifUsersByProjectUpdatedByAndDeletedByManyToManyEdge",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserCifUsersByProjectUpdatedByAndDeletedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `Project`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projectsByDeletedBy",
              "description": "Reads and enables pagination through a set of `Project`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
=======
>>>>>>> refactor: update schema & reorder sqitch plan
                  "description": "The method to use when ordering `Project`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "ProjectsOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
<<<<<<< HEAD
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProjectsConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CifUserCondition",
          "description": "A condition to be used against `CifUser` object types. All fields are tested for equality and combined with a logical ‘and.’",
          "fields": null,
          "inputFields": [
            {
              "name": "createdAt",
              "description": "Checks for equality with the object’s `createdAt` field.",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "createdBy",
              "description": "Checks for equality with the object’s `createdBy` field.",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "deletedAt",
              "description": "Checks for equality with the object’s `deletedAt` field.",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "deletedBy",
              "description": "Checks for equality with the object’s `deletedBy` field.",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "emailAddress",
              "description": "Checks for equality with the object’s `emailAddress` field.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "firstName",
              "description": "Checks for equality with the object’s `firstName` field.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "lastName",
              "description": "Checks for equality with the object’s `lastName` field.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "rowId",
              "description": "Checks for equality with the object’s `rowId` field.",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "updatedAt",
              "description": "Checks for equality with the object’s `updatedAt` field.",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "updatedBy",
              "description": "Checks for equality with the object’s `updatedBy` field.",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "uuid",
              "description": "Checks for equality with the object’s `uuid` field.",
              "type": {
                "kind": "SCALAR",
                "name": "UUID",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CifUserFilter",
          "description": "A filter to be used against `CifUser` object types. All fields are combined with a logical ‘and.’",
          "fields": null,
          "inputFields": [
            {
              "name": "and",
              "description": "Checks for all expressions in this list.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserFilter",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "attachmentsByCreatedBy",
              "description": "Filter by the object’s `attachmentsByCreatedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserToManyAttachmentFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "attachmentsByCreatedByExist",
              "description": "Some related `attachmentsByCreatedBy` exist.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
<<<<<<< HEAD
              "name": "createFormChange",
              "description": "Creates a single `FormChange`.",
              "args": [
                {
                  "name": "input",
                  "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "CreateFormChangeInput",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "CreateFormChangePayload",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createFundingStream",
              "description": "Creates a single `FundingStream`.",
              "args": [
                {
                  "name": "input",
                  "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "CreateFundingStreamInput",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "CreateFundingStreamPayload",
=======
              "name": "attachmentsByDeletedBy",
              "description": "Filter by the object’s `attachmentsByDeletedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserToManyAttachmentFilter",
>>>>>>> chore: add basic SelectOperator component
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "attachmentsByDeletedByExist",
              "description": "Some related `attachmentsByDeletedBy` exist.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "attachmentsByUpdatedBy",
              "description": "Filter by the object’s `attachmentsByUpdatedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserToManyAttachmentFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "attachmentsByUpdatedByExist",
              "description": "Some related `attachmentsByUpdatedBy` exist.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "changeStatusesByCreatedBy",
              "description": "Filter by the object’s `changeStatusesByCreatedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserToManyChangeStatusFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "changeStatusesByCreatedByExist",
              "description": "Some related `changeStatusesByCreatedBy` exist.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "changeStatusesByDeletedBy",
              "description": "Filter by the object’s `changeStatusesByDeletedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserToManyChangeStatusFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "changeStatusesByDeletedByExist",
              "description": "Some related `changeStatusesByDeletedBy` exist.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "changeStatusesByUpdatedBy",
              "description": "Filter by the object’s `changeStatusesByUpdatedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserToManyChangeStatusFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "changeStatusesByUpdatedByExist",
              "description": "Some related `changeStatusesByUpdatedBy` exist.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "cifUserByCreatedBy",
              "description": "Filter by the object’s `cifUserByCreatedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "cifUserByCreatedByExists",
              "description": "A related `cifUserByCreatedBy` exists.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
<<<<<<< HEAD
              "name": "deleteFundingStream",
              "description": "Deletes a single `FundingStream` using its globally unique id.",
              "args": [
                {
                  "name": "input",
                  "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "DeleteFundingStreamInput",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "DeleteFundingStreamPayload",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "deleteFundingStreamByRowId",
              "description": "Deletes a single `FundingStream` using a unique key.",
              "args": [
                {
                  "name": "input",
                  "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "DeleteFundingStreamByRowIdInput",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "DeleteFundingStreamPayload",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "deleteProjectManager",
              "description": "Deletes a single `ProjectManager` using its globally unique id.",
              "args": [
                {
                  "name": "input",
                  "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "DeleteProjectManagerInput",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
=======
              "name": "cifUserByDeletedBy",
              "description": "Filter by the object’s `cifUserByDeletedBy` relation.",
>>>>>>> chore: add basic SelectOperator component
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "cifUserByDeletedByExists",
              "description": "A related `cifUserByDeletedBy` exists.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "cifUserByUpdatedBy",
              "description": "Filter by the object’s `cifUserByUpdatedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "cifUserByUpdatedByExists",
              "description": "A related `cifUserByUpdatedBy` exists.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "cifUsersByCreatedBy",
              "description": "Filter by the object’s `cifUsersByCreatedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserToManyCifUserFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "cifUsersByCreatedByExist",
              "description": "Some related `cifUsersByCreatedBy` exist.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "cifUsersByDeletedBy",
              "description": "Filter by the object’s `cifUsersByDeletedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserToManyCifUserFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "cifUsersByDeletedByExist",
              "description": "Some related `cifUsersByDeletedBy` exist.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "cifUsersByUpdatedBy",
              "description": "Filter by the object’s `cifUsersByUpdatedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserToManyCifUserFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "cifUsersByUpdatedByExist",
              "description": "Some related `cifUsersByUpdatedBy` exist.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
<<<<<<< HEAD
              "name": "updateFundingStream",
              "description": "Updates a single `FundingStream` using its globally unique id and a patch.",
              "args": [
                {
                  "name": "input",
                  "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "UpdateFundingStreamInput",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "UpdateFundingStreamPayload",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updateFundingStreamByRowId",
              "description": "Updates a single `FundingStream` using a unique key and a patch.",
              "args": [
                {
                  "name": "input",
                  "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "UpdateFundingStreamByRowIdInput",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "UpdateFundingStreamPayload",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updateProjectManager",
              "description": "Updates a single `ProjectManager` using its globally unique id and a patch.",
              "args": [
                {
                  "name": "input",
                  "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "UpdateProjectManagerInput",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
=======
              "name": "createdAt",
              "description": "Filter by the object’s `createdAt` field.",
>>>>>>> chore: add basic SelectOperator component
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DatetimeFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "createdBy",
              "description": "Filter by the object’s `createdBy` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IntFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "deletedAt",
              "description": "Filter by the object’s `deletedAt` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DatetimeFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "deletedBy",
              "description": "Filter by the object’s `deletedBy` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IntFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "emailAddress",
              "description": "Filter by the object’s `emailAddress` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "firstName",
              "description": "Filter by the object’s `firstName` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
<<<<<<< HEAD
              "kind": "OBJECT",
              "name": "FundingStream",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "Project",
              "ofType": null
=======
              "name": "keycloakJwtsBySub",
              "description": "Filter by the object’s `keycloakJwtsBySub` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserToManyKeycloakJwtFilter",
                "ofType": null
              },
              "defaultValue": null
>>>>>>> chore: add basic SelectOperator component
            },
            {
              "name": "keycloakJwtsBySubExist",
              "description": "Some related `keycloakJwtsBySub` exist.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "lastName",
              "description": "Filter by the object’s `lastName` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Negates the expression.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "or",
              "description": "Checks for any expressions in this list.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserFilter",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "projectManagersByCifUserId",
              "description": "Filter by the object’s `projectManagersByCifUserId` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserToManyProjectManagerFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "projectManagersByCifUserIdExist",
              "description": "Some related `projectManagersByCifUserId` exist.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "projectManagersByCreatedBy",
              "description": "Filter by the object’s `projectManagersByCreatedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserToManyProjectManagerFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "projectManagersByCreatedByExist",
              "description": "Some related `projectManagersByCreatedBy` exist.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "projectManagersByDeletedBy",
              "description": "Filter by the object’s `projectManagersByDeletedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserToManyProjectManagerFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "projectManagersByDeletedByExist",
              "description": "Some related `projectManagersByDeletedBy` exist.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "projectManagersByUpdatedBy",
              "description": "Filter by the object’s `projectManagersByUpdatedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserToManyProjectManagerFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "projectManagersByUpdatedByExist",
              "description": "Some related `projectManagersByUpdatedBy` exist.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "projectsByCreatedBy",
              "description": "Filter by the object’s `projectsByCreatedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserToManyProjectFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "projectsByCreatedByExist",
              "description": "Some related `projectsByCreatedBy` exist.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "projectsByDeletedBy",
              "description": "Filter by the object’s `projectsByDeletedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserToManyProjectFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "projectsByDeletedByExist",
              "description": "Some related `projectsByDeletedBy` exist.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "projectsByUpdatedBy",
              "description": "Filter by the object’s `projectsByUpdatedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserToManyProjectFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "projectsByUpdatedByExist",
              "description": "Some related `projectsByUpdatedBy` exist.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "rowId",
              "description": "Filter by the object’s `rowId` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IntFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "updatedAt",
              "description": "Filter by the object’s `updatedAt` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DatetimeFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "updatedBy",
              "description": "Filter by the object’s `updatedBy` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IntFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "uuid",
              "description": "Filter by the object’s `uuid` field.",
=======
>>>>>>> refactor: update schema & reorder sqitch plan
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProjectsConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserOperatorsByProjectUpdatedByAndOperatorIdManyToManyConnection",
          "description": "A connection to a list of `Operator` values, with data from `Project`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `Operator`, info from the `Project`, and the cursor to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CifUserOperatorsByProjectUpdatedByAndOperatorIdManyToManyEdge",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of `Operator` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "Operator",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "The count of *all* `Operator` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserOperatorsByProjectUpdatedByAndOperatorIdManyToManyEdge",
          "description": "A `Operator` edge in the connection, with data from `Project`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `Operator` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Operator",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projectsByOperatorId",
              "description": "Reads and enables pagination through a set of `Project`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `Project`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "ProjectsOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProjectsConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CifUserPatch",
          "description": "Represents an update to a `CifUser`. Fields that are set will be updated.",
          "fields": null,
          "inputFields": [
            {
              "name": "createdAt",
              "description": "created at timestamp",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "createdBy",
              "description": "created by user id",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "deletedAt",
              "description": "deleted at timestamp",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "deletedBy",
              "description": "deleted by user id",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "emailAddress",
              "description": "User's email address",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "firstName",
              "description": "User's first name",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "lastName",
              "description": "User's last name",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "updatedAt",
              "description": "updated at timestamp",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "updatedBy",
              "description": "updated by user id",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "uuid",
              "description": "Universally Unique ID for the user, defined by the single sign-on provider",
              "type": {
                "kind": "SCALAR",
                "name": "UUID",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserProjectsByProjectManagerCifUserIdAndProjectIdManyToManyConnection",
          "description": "A connection to a list of `Project` values, with data from `ProjectManager`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `Project`, info from the `ProjectManager`, and the cursor to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CifUserProjectsByProjectManagerCifUserIdAndProjectIdManyToManyEdge",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of `Project` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "Project",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "The count of *all* `Project` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserProjectsByProjectManagerCifUserIdAndProjectIdManyToManyEdge",
          "description": "A `Project` edge in the connection, with data from `ProjectManager`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `Project` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Project",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projectManagersByProjectId",
              "description": "Reads and enables pagination through a set of `ProjectManager`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectManagerCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectManagerFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `ProjectManager`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "ProjectManagersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProjectManagersConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserProjectsByProjectManagerCreatedByAndProjectIdManyToManyConnection",
          "description": "A connection to a list of `Project` values, with data from `ProjectManager`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `Project`, info from the `ProjectManager`, and the cursor to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CifUserProjectsByProjectManagerCreatedByAndProjectIdManyToManyEdge",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of `Project` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "Project",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "The count of *all* `Project` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserProjectsByProjectManagerCreatedByAndProjectIdManyToManyEdge",
          "description": "A `Project` edge in the connection, with data from `ProjectManager`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `Project` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Project",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projectManagersByProjectId",
              "description": "Reads and enables pagination through a set of `ProjectManager`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectManagerCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectManagerFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `ProjectManager`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "ProjectManagersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProjectManagersConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserProjectsByProjectManagerDeletedByAndProjectIdManyToManyConnection",
          "description": "A connection to a list of `Project` values, with data from `ProjectManager`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `Project`, info from the `ProjectManager`, and the cursor to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CifUserProjectsByProjectManagerDeletedByAndProjectIdManyToManyEdge",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
<<<<<<< HEAD
              "name": "formChangesByCreatedBy",
              "description": "Filter by the object’s `formChangesByCreatedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserToManyFormChangeFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "formChangesByCreatedByExist",
              "description": "Some related `formChangesByCreatedBy` exist.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "formChangesByDeletedBy",
              "description": "Filter by the object’s `formChangesByDeletedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserToManyFormChangeFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "formChangesByDeletedByExist",
              "description": "Some related `formChangesByDeletedBy` exist.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "formChangesByUpdatedBy",
              "description": "Filter by the object’s `formChangesByUpdatedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserToManyFormChangeFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "formChangesByUpdatedByExist",
              "description": "Some related `formChangesByUpdatedBy` exist.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "fundingStreamsByCreatedBy",
              "description": "Filter by the object’s `fundingStreamsByCreatedBy` relation.",
=======
              "name": "containsAnyKeys",
              "description": "Contains any of the specified keys.",
>>>>>>> chore: add basic SelectOperator component
=======
              "name": "nodes",
              "description": "A list of `Project` objects.",
              "args": [],
>>>>>>> refactor: update schema & reorder sqitch plan
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "Project",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "The count of *all* `Project` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserProjectsByProjectManagerDeletedByAndProjectIdManyToManyEdge",
          "description": "A `Project` edge in the connection, with data from `ProjectManager`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `Project` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Project",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projectManagersByProjectId",
              "description": "Reads and enables pagination through a set of `ProjectManager`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectManagerCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectManagerFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `ProjectManager`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "ProjectManagersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProjectManagersConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserProjectsByProjectManagerUpdatedByAndProjectIdManyToManyConnection",
          "description": "A connection to a list of `Project` values, with data from `ProjectManager`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `Project`, info from the `ProjectManager`, and the cursor to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CifUserProjectsByProjectManagerUpdatedByAndProjectIdManyToManyEdge",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of `Project` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "Project",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "The count of *all* `Project` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserProjectsByProjectManagerUpdatedByAndProjectIdManyToManyEdge",
          "description": "A `Project` edge in the connection, with data from `ProjectManager`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `Project` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Project",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projectManagersByProjectId",
              "description": "Reads and enables pagination through a set of `ProjectManager`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectManagerCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectManagerFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `ProjectManager`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "ProjectManagersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProjectManagersConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CifUserToManyAttachmentFilter",
          "description": "A filter to be used against many `Attachment` object types. All fields are combined with a logical ‘and.’",
          "fields": null,
          "inputFields": [
            {
              "name": "every",
              "description": "Every related `Attachment` matches the filter criteria. All fields are combined with a logical ‘and.’",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "AttachmentFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "none",
              "description": "No related `Attachment` matches the filter criteria. All fields are combined with a logical ‘and.’",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "AttachmentFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "some",
              "description": "Some related `Attachment` matches the filter criteria. All fields are combined with a logical ‘and.’",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "AttachmentFilter",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CifUserToManyChangeStatusFilter",
          "description": "A filter to be used against many `ChangeStatus` object types. All fields are combined with a logical ‘and.’",
          "fields": null,
          "inputFields": [
            {
              "name": "every",
              "description": "Every related `ChangeStatus` matches the filter criteria. All fields are combined with a logical ‘and.’",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "ChangeStatusFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "none",
              "description": "No related `ChangeStatus` matches the filter criteria. All fields are combined with a logical ‘and.’",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "ChangeStatusFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "some",
              "description": "Some related `ChangeStatus` matches the filter criteria. All fields are combined with a logical ‘and.’",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "ChangeStatusFilter",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CifUserToManyCifUserFilter",
          "description": "A filter to be used against many `CifUser` object types. All fields are combined with a logical ‘and.’",
          "fields": null,
          "inputFields": [
            {
              "name": "every",
              "description": "Every related `CifUser` matches the filter criteria. All fields are combined with a logical ‘and.’",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "none",
              "description": "No related `CifUser` matches the filter criteria. All fields are combined with a logical ‘and.’",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "some",
              "description": "Some related `CifUser` matches the filter criteria. All fields are combined with a logical ‘and.’",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserFilter",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CifUserToManyKeycloakJwtFilter",
          "description": "A filter to be used against many `KeycloakJwt` object types. All fields are combined with a logical ‘and.’",
          "fields": null,
          "inputFields": [
            {
              "name": "every",
              "description": "Every related `KeycloakJwt` matches the filter criteria. All fields are combined with a logical ‘and.’",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "KeycloakJwtFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "none",
              "description": "No related `KeycloakJwt` matches the filter criteria. All fields are combined with a logical ‘and.’",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "KeycloakJwtFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "some",
              "description": "Some related `KeycloakJwt` matches the filter criteria. All fields are combined with a logical ‘and.’",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "KeycloakJwtFilter",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CifUserToManyOperatorFilter",
          "description": "A filter to be used against many `Operator` object types. All fields are combined with a logical ‘and.’",
          "fields": null,
          "inputFields": [
            {
              "name": "every",
              "description": "Every related `Operator` matches the filter criteria. All fields are combined with a logical ‘and.’",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "OperatorFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "none",
              "description": "No related `Operator` matches the filter criteria. All fields are combined with a logical ‘and.’",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "OperatorFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "some",
              "description": "Some related `Operator` matches the filter criteria. All fields are combined with a logical ‘and.’",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "OperatorFilter",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CifUserToManyProjectFilter",
          "description": "A filter to be used against many `Project` object types. All fields are combined with a logical ‘and.’",
          "fields": null,
          "inputFields": [
            {
              "name": "every",
              "description": "Every related `Project` matches the filter criteria. All fields are combined with a logical ‘and.’",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "ProjectFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "none",
              "description": "No related `Project` matches the filter criteria. All fields are combined with a logical ‘and.’",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "ProjectFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "some",
              "description": "Some related `Project` matches the filter criteria. All fields are combined with a logical ‘and.’",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "ProjectFilter",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CifUserToManyProjectManagerFilter",
          "description": "A filter to be used against many `ProjectManager` object types. All fields are combined with a logical ‘and.’",
          "fields": null,
          "inputFields": [
            {
              "name": "every",
              "description": "Every related `ProjectManager` matches the filter criteria. All fields are combined with a logical ‘and.’",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "ProjectManagerFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "none",
              "description": "No related `ProjectManager` matches the filter criteria. All fields are combined with a logical ‘and.’",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "ProjectManagerFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "some",
              "description": "Some related `ProjectManager` matches the filter criteria. All fields are combined with a logical ‘and.’",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "ProjectManagerFilter",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUsersConnection",
          "description": "A connection to a list of `CifUser` values.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser` and cursor to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CifUsersEdge",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUsersEdge",
          "description": "A `CifUser` edge in the connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "CifUsersOrderBy",
          "description": "Methods to use when ordering `CifUser`.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "CREATED_AT_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CREATED_AT_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CREATED_BY_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CREATED_BY_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DELETED_AT_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DELETED_AT_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DELETED_BY_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DELETED_BY_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "EMAIL_ADDRESS_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "EMAIL_ADDRESS_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FIRST_NAME_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FIRST_NAME_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ID_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ID_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LAST_NAME_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LAST_NAME_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NATURAL",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PRIMARY_KEY_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PRIMARY_KEY_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UPDATED_AT_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UPDATED_AT_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UPDATED_BY_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UPDATED_BY_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UUID_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UUID_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CreateAttachmentInput",
          "description": "All input for the create `Attachment` mutation.",
          "fields": null,
          "inputFields": [
            {
              "name": "attachment",
              "description": "The `Attachment` to be created by this mutation.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "AttachmentInput",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "clientMutationId",
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CreateAttachmentPayload",
          "description": "The output of our create `Attachment` mutation.",
          "fields": [
            {
              "name": "attachment",
              "description": "The `Attachment` that was created by this mutation.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Attachment",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "attachmentEdge",
              "description": "An edge for our `Attachment`. May be used by Relay 1.",
              "args": [
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `Attachment`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "AttachmentsOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "AttachmentsEdge",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUserByCreatedBy",
              "description": "Reads a single `CifUser` that is related to this `Attachment`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUserByDeletedBy",
              "description": "Reads a single `CifUser` that is related to this `Attachment`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUserByUpdatedBy",
              "description": "Reads a single `CifUser` that is related to this `Attachment`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "clientMutationId",
              "description": "The exact same `clientMutationId` that was provided in the mutation input,\nunchanged and unused. May be used by a client to track mutations.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "query",
              "description": "Our root query field type. Allows us to run any query from our mutation payload.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Query",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CreateChangeStatusInput",
          "description": "All input for the create `ChangeStatus` mutation.",
          "fields": null,
          "inputFields": [
            {
              "name": "changeStatus",
              "description": "The `ChangeStatus` to be created by this mutation.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "ChangeStatusInput",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "clientMutationId",
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CreateChangeStatusPayload",
          "description": "The output of our create `ChangeStatus` mutation.",
          "fields": [
            {
              "name": "changeStatus",
              "description": "The `ChangeStatus` that was created by this mutation.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "ChangeStatus",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "changeStatusEdge",
              "description": "An edge for our `ChangeStatus`. May be used by Relay 1.",
              "args": [
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `ChangeStatus`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "ChangeStatusesOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "ChangeStatusesEdge",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUserByCreatedBy",
              "description": "Reads a single `CifUser` that is related to this `ChangeStatus`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUserByDeletedBy",
              "description": "Reads a single `CifUser` that is related to this `ChangeStatus`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUserByUpdatedBy",
              "description": "Reads a single `CifUser` that is related to this `ChangeStatus`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "clientMutationId",
              "description": "The exact same `clientMutationId` that was provided in the mutation input,\nunchanged and unused. May be used by a client to track mutations.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "query",
              "description": "Our root query field type. Allows us to run any query from our mutation payload.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Query",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CreateCifUserInput",
          "description": "All input for the create `CifUser` mutation.",
          "fields": null,
          "inputFields": [
            {
              "name": "cifUser",
              "description": "The `CifUser` to be created by this mutation.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "CifUserInput",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "clientMutationId",
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CreateCifUserPayload",
          "description": "The output of our create `CifUser` mutation.",
          "fields": [
            {
              "name": "cifUser",
              "description": "The `CifUser` that was created by this mutation.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUserByCreatedBy",
              "description": "Reads a single `CifUser` that is related to this `CifUser`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUserByDeletedBy",
              "description": "Reads a single `CifUser` that is related to this `CifUser`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUserByUpdatedBy",
              "description": "Reads a single `CifUser` that is related to this `CifUser`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUserEdge",
              "description": "An edge for our `CifUser`. May be used by Relay 1.",
              "args": [
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `CifUser`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "CifUsersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "CifUsersEdge",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "clientMutationId",
              "description": "The exact same `clientMutationId` that was provided in the mutation input,\nunchanged and unused. May be used by a client to track mutations.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "query",
              "description": "Our root query field type. Allows us to run any query from our mutation payload.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Query",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CreateFormChangeInput",
          "description": "All input for the create `FormChange` mutation.",
          "fields": null,
          "inputFields": [
            {
              "name": "clientMutationId",
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "formChange",
              "description": "The `FormChange` to be created by this mutation.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "FormChangeInput",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CreateFormChangePayload",
          "description": "The output of our create `FormChange` mutation.",
          "fields": [
            {
              "name": "changeStatusByChangeStatus",
              "description": "Reads a single `ChangeStatus` that is related to this `FormChange`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "ChangeStatus",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "clientMutationId",
              "description": "The exact same `clientMutationId` that was provided in the mutation input,\nunchanged and unused. May be used by a client to track mutations.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "formChange",
              "description": "The `FormChange` that was created by this mutation.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "FormChange",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "formChangeEdge",
              "description": "An edge for our `FormChange`. May be used by Relay 1.",
              "args": [
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `FormChange`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "FormChangesOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "FormChangesEdge",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "query",
              "description": "Our root query field type. Allows us to run any query from our mutation payload.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Query",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CreateProjectInput",
          "description": "All input for the `createProject` mutation.",
          "fields": null,
          "inputFields": [
            {
              "name": "clientMutationId",
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CreateProjectManagerInput",
          "description": "All input for the create `ProjectManager` mutation.",
          "fields": null,
          "inputFields": [
            {
              "name": "clientMutationId",
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "projectManager",
              "description": "The `ProjectManager` to be created by this mutation.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "ProjectManagerInput",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CreateProjectManagerPayload",
          "description": "The output of our create `ProjectManager` mutation.",
          "fields": [
            {
              "name": "cifUserByCifUserId",
              "description": "Reads a single `CifUser` that is related to this `ProjectManager`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUserByCreatedBy",
              "description": "Reads a single `CifUser` that is related to this `ProjectManager`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUserByDeletedBy",
              "description": "Reads a single `CifUser` that is related to this `ProjectManager`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUserByUpdatedBy",
              "description": "Reads a single `CifUser` that is related to this `ProjectManager`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "clientMutationId",
              "description": "The exact same `clientMutationId` that was provided in the mutation input,\nunchanged and unused. May be used by a client to track mutations.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projectByProjectId",
              "description": "Reads a single `Project` that is related to this `ProjectManager`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Project",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projectManager",
              "description": "The `ProjectManager` that was created by this mutation.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "ProjectManager",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projectManagerEdge",
              "description": "An edge for our `ProjectManager`. May be used by Relay 1.",
              "args": [
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `ProjectManager`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "ProjectManagersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "ProjectManagersEdge",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "query",
              "description": "Our root query field type. Allows us to run any query from our mutation payload.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Query",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CreateProjectPayload",
          "description": "The output of our `createProject` mutation.",
          "fields": [
            {
              "name": "changeStatusByChangeStatus",
              "description": "Reads a single `ChangeStatus` that is related to this `FormChange`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "ChangeStatus",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "clientMutationId",
              "description": "The exact same `clientMutationId` that was provided in the mutation input,\nunchanged and unused. May be used by a client to track mutations.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "formChange",
              "description": null,
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "FormChange",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "formChangeEdge",
              "description": "An edge for our `FormChange`. May be used by Relay 1.",
              "args": [
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `FormChange`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "FormChangesOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "FormChangesEdge",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "query",
              "description": "Our root query field type. Allows us to run any query from our mutation payload.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Query",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CreateUserFromSessionInput",
          "description": "All input for the `createUserFromSession` mutation.",
          "fields": null,
          "inputFields": [
            {
              "name": "clientMutationId",
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CreateUserFromSessionPayload",
          "description": "The output of our `createUserFromSession` mutation.",
          "fields": [
            {
              "name": "cifUser",
              "description": null,
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUserByCreatedBy",
              "description": "Reads a single `CifUser` that is related to this `CifUser`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUserByDeletedBy",
              "description": "Reads a single `CifUser` that is related to this `CifUser`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUserByUpdatedBy",
              "description": "Reads a single `CifUser` that is related to this `CifUser`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUserEdge",
              "description": "An edge for our `CifUser`. May be used by Relay 1.",
              "args": [
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `CifUser`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "CifUsersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "CifUsersEdge",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "clientMutationId",
              "description": "The exact same `clientMutationId` that was provided in the mutation input,\nunchanged and unused. May be used by a client to track mutations.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "query",
              "description": "Our root query field type. Allows us to run any query from our mutation payload.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Query",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "SCALAR",
          "name": "Cursor",
          "description": "A location in a connection that can be used for resuming pagination.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "SCALAR",
          "name": "Datetime",
          "description": "A point in time as described by the [ISO\n8601](https://en.wikipedia.org/wiki/ISO_8601) standard. May or may not include a timezone.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "DatetimeFilter",
          "description": "A filter to be used against Datetime fields. All fields are combined with a logical ‘and.’",
          "fields": null,
          "inputFields": [
            {
              "name": "distinctFrom",
              "description": "Not equal to the specified value, treating null like an ordinary value.",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "equalTo",
              "description": "Equal to the specified value.",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "greaterThan",
              "description": "Greater than the specified value.",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "greaterThanOrEqualTo",
              "description": "Greater than or equal to the specified value.",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "in",
              "description": "Included in the specified list.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "Datetime",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "isNull",
              "description": "Is null (if `true` is specified) or is not null (if `false` is specified).",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "lessThan",
              "description": "Less than the specified value.",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "lessThanOrEqualTo",
              "description": "Less than or equal to the specified value.",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "projectsByUpdatedBy",
              "description": "Filter by the object’s `projectsByUpdatedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserToManyProjectFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "projectsByUpdatedByExist",
              "description": "Some related `projectsByUpdatedBy` exist.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "rowId",
              "description": "Filter by the object’s `rowId` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IntFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "updatedAt",
              "description": "Filter by the object’s `updatedAt` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DatetimeFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "updatedBy",
              "description": "Filter by the object’s `updatedBy` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IntFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "uuid",
              "description": "Filter by the object’s `uuid` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "UUIDFilter",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CifUserInput",
          "description": "An input for mutations affecting `CifUser`",
          "fields": null,
          "inputFields": [
            {
              "name": "createdAt",
              "description": "created at timestamp",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "createdBy",
              "description": "created by user id",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "deletedAt",
              "description": "deleted at timestamp",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "deletedBy",
              "description": "deleted by user id",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "emailAddress",
              "description": "User's email address",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "firstName",
              "description": "User's first name",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
<<<<<<< HEAD
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CifUserToManyFormChangeFilter",
          "description": "A filter to be used against many `FormChange` object types. All fields are combined with a logical ‘and.’",
          "fields": null,
          "inputFields": [
            {
              "name": "every",
              "description": "Every related `FormChange` matches the filter criteria. All fields are combined with a logical ‘and.’",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "FormChangeFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "none",
              "description": "No related `FormChange` matches the filter criteria. All fields are combined with a logical ‘and.’",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "FormChangeFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "some",
              "description": "Some related `FormChange` matches the filter criteria. All fields are combined with a logical ‘and.’",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "FormChangeFilter",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CifUserToManyFundingStreamFilter",
          "description": "A filter to be used against many `FundingStream` object types. All fields are combined with a logical ‘and.’",
          "fields": null,
          "inputFields": [
=======
            },
>>>>>>> chore: add basic SelectOperator component
            {
              "name": "lastName",
              "description": "User's last name",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "updatedAt",
              "description": "updated at timestamp",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "updatedBy",
              "description": "updated by user id",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "uuid",
              "description": "Universally Unique ID for the user, defined by the single sign-on provider",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "UUID",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CifUserPatch",
          "description": "Represents an update to a `CifUser`. Fields that are set will be updated.",
          "fields": null,
          "inputFields": [
            {
              "name": "createdAt",
              "description": "created at timestamp",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "createdBy",
              "description": "created by user id",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "deletedAt",
              "description": "deleted at timestamp",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "deletedBy",
              "description": "deleted by user id",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "emailAddress",
              "description": "User's email address",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "firstName",
              "description": "User's first name",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "lastName",
              "description": "User's last name",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "updatedAt",
              "description": "updated at timestamp",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "updatedBy",
              "description": "updated by user id",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "uuid",
              "description": "Universally Unique ID for the user, defined by the single sign-on provider",
              "type": {
                "kind": "SCALAR",
                "name": "UUID",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserProjectsByProjectManagerCifUserIdAndProjectIdManyToManyConnection",
          "description": "A connection to a list of `Project` values, with data from `ProjectManager`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `Project`, info from the `ProjectManager`, and the cursor to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CifUserProjectsByProjectManagerCifUserIdAndProjectIdManyToManyEdge",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "nodes",
              "description": "A list of `Project` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "Project",
                    "ofType": null
                  }
                }
=======
              "name": "notDistinctFrom",
              "description": "Equal to the specified value, treating null like an ordinary value.",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
>>>>>>> refactor: update schema & reorder sqitch plan
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
=======
              "name": "notEqualTo",
              "description": "Not equal to the specified value.",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
>>>>>>> refactor: update schema & reorder sqitch plan
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "totalCount",
              "description": "The count of *all* `Project` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
=======
              "name": "notIn",
              "description": "Not included in the specified list.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "Datetime",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
>>>>>>> refactor: update schema & reorder sqitch plan
          "enumValues": null,
          "possibleTypes": null
        },
        {
<<<<<<< HEAD
          "kind": "OBJECT",
          "name": "CifUserProjectsByProjectManagerCifUserIdAndProjectIdManyToManyEdge",
          "description": "A `Project` edge in the connection, with data from `ProjectManager`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
=======
          "kind": "INPUT_OBJECT",
          "name": "DeleteAttachmentByRowIdInput",
          "description": "All input for the `deleteAttachmentByRowId` mutation.",
          "fields": null,
          "inputFields": [
            {
              "name": "clientMutationId",
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
>>>>>>> refactor: update schema & reorder sqitch plan
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "node",
              "description": "The `Project` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Project",
=======
              "name": "rowId",
              "description": "Unique ID for the attachment",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "DeleteAttachmentInput",
          "description": "All input for the `deleteAttachment` mutation.",
          "fields": null,
          "inputFields": [
            {
              "name": "clientMutationId",
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
>>>>>>> refactor: update schema & reorder sqitch plan
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "projectManagersByProjectId",
              "description": "Reads and enables pagination through a set of `ProjectManager`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectManagerCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectManagerFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `ProjectManager`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "ProjectManagersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
=======
              "name": "id",
              "description": "The globally unique `ID` which will identify a single `Attachment` to be deleted.",
>>>>>>> refactor: update schema & reorder sqitch plan
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
<<<<<<< HEAD
                  "kind": "OBJECT",
                  "name": "ProjectManagersConnection",
=======
                  "kind": "SCALAR",
                  "name": "ID",
>>>>>>> refactor: update schema & reorder sqitch plan
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
          "name": "CifUserProjectsByProjectManagerCreatedByAndProjectIdManyToManyConnection",
          "description": "A connection to a list of `Project` values, with data from `ProjectManager`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `Project`, info from the `ProjectManager`, and the cursor to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CifUserProjectsByProjectManagerCreatedByAndProjectIdManyToManyEdge",
                      "ofType": null
                    }
                  }
                }
=======
          "name": "DeleteAttachmentPayload",
          "description": "The output of our delete `Attachment` mutation.",
          "fields": [
            {
              "name": "attachment",
              "description": "The `Attachment` that was deleted by this mutation.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Attachment",
                "ofType": null
>>>>>>> refactor: update schema & reorder sqitch plan
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "nodes",
              "description": "A list of `Project` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "Project",
                    "ofType": null
                  }
                }
=======
              "name": "attachmentEdge",
              "description": "An edge for our `Attachment`. May be used by Relay 1.",
              "args": [
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `Attachment`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "AttachmentsOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "AttachmentsEdge",
                "ofType": null
>>>>>>> refactor: update schema & reorder sqitch plan
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
=======
              "name": "cifUserByCreatedBy",
              "description": "Reads a single `CifUser` that is related to this `Attachment`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
>>>>>>> refactor: update schema & reorder sqitch plan
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "totalCount",
              "description": "The count of *all* `Project` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserProjectsByProjectManagerCreatedByAndProjectIdManyToManyEdge",
          "description": "A `Project` edge in the connection, with data from `ProjectManager`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
=======
              "name": "cifUserByDeletedBy",
              "description": "Reads a single `CifUser` that is related to this `Attachment`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUserByUpdatedBy",
              "description": "Reads a single `CifUser` that is related to this `Attachment`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
>>>>>>> refactor: update schema & reorder sqitch plan
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "node",
              "description": "The `Project` at the end of the edge.",
=======
              "name": "clientMutationId",
              "description": "The exact same `clientMutationId` that was provided in the mutation input,\nunchanged and unused. May be used by a client to track mutations.",
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Project",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "projectManagersByProjectId",
              "description": "Reads and enables pagination through a set of `ProjectManager`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectManagerCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectManagerFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `ProjectManager`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "ProjectManagersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProjectManagersConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUserProjectsByProjectManagerDeletedByAndProjectIdManyToManyConnection",
          "description": "A connection to a list of `Project` values, with data from `ProjectManager`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `Project`, info from the `ProjectManager`, and the cursor to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CifUserProjectsByProjectManagerDeletedByAndProjectIdManyToManyEdge",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of `Project` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "Project",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
=======
              "name": "deletedAttachmentId",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "query",
              "description": "Our root query field type. Allows us to run any query from our mutation payload.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Query",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "DeleteChangeStatusByStatusInput",
          "description": "All input for the `deleteChangeStatusByStatus` mutation.",
          "fields": null,
          "inputFields": [
            {
              "name": "clientMutationId",
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
>>>>>>> refactor: update schema & reorder sqitch plan
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "totalCount",
              "description": "The count of *all* `Project` you could get from the connection.",
              "args": [],
=======
              "name": "status",
              "description": "The name of the status, e.g. \"pending\", \"committed\", ...",
>>>>>>> refactor: update schema & reorder sqitch plan
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
<<<<<<< HEAD
                  "name": "Int",
=======
                  "name": "String",
>>>>>>> refactor: update schema & reorder sqitch plan
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
<<<<<<< HEAD
          "kind": "OBJECT",
          "name": "CifUserProjectsByProjectManagerDeletedByAndProjectIdManyToManyEdge",
          "description": "A `Project` edge in the connection, with data from `ProjectManager`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
=======
          "kind": "INPUT_OBJECT",
          "name": "DeleteChangeStatusInput",
          "description": "All input for the `deleteChangeStatus` mutation.",
          "fields": null,
          "inputFields": [
            {
              "name": "clientMutationId",
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "id",
              "description": "The globally unique `ID` which will identify a single `ChangeStatus` to be deleted.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "DeleteChangeStatusPayload",
          "description": "The output of our delete `ChangeStatus` mutation.",
          "fields": [
            {
              "name": "changeStatus",
              "description": "The `ChangeStatus` that was deleted by this mutation.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "ChangeStatus",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "changeStatusEdge",
              "description": "An edge for our `ChangeStatus`. May be used by Relay 1.",
              "args": [
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `ChangeStatus`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "ChangeStatusesOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "ChangeStatusesEdge",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUserByCreatedBy",
              "description": "Reads a single `CifUser` that is related to this `ChangeStatus`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUserByDeletedBy",
              "description": "Reads a single `CifUser` that is related to this `ChangeStatus`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUserByUpdatedBy",
              "description": "Reads a single `CifUser` that is related to this `ChangeStatus`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "clientMutationId",
              "description": "The exact same `clientMutationId` that was provided in the mutation input,\nunchanged and unused. May be used by a client to track mutations.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
>>>>>>> refactor: update schema & reorder sqitch plan
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "node",
              "description": "The `Project` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Project",
=======
              "name": "deletedChangeStatusId",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
>>>>>>> refactor: update schema & reorder sqitch plan
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "projectManagersByProjectId",
              "description": "Reads and enables pagination through a set of `ProjectManager`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectManagerCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectManagerFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `ProjectManager`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "ProjectManagersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProjectManagersConnection",
                  "ofType": null
                }
=======
              "name": "query",
              "description": "Our root query field type. Allows us to run any query from our mutation payload.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Query",
                "ofType": null
>>>>>>> refactor: update schema & reorder sqitch plan
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
<<<<<<< HEAD
          "kind": "OBJECT",
          "name": "CifUserProjectsByProjectManagerUpdatedByAndProjectIdManyToManyConnection",
          "description": "A connection to a list of `Project` values, with data from `ProjectManager`.",
          "fields": [
=======
          "kind": "INPUT_OBJECT",
          "name": "DeleteCifUserByRowIdInput",
          "description": "All input for the `deleteCifUserByRowId` mutation.",
          "fields": null,
          "inputFields": [
>>>>>>> refactor: update schema & reorder sqitch plan
            {
              "name": "clientMutationId",
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
              "type": {
<<<<<<< HEAD
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CifUserProjectsByProjectManagerUpdatedByAndProjectIdManyToManyEdge",
                      "ofType": null
                    }
                  }
                }
=======
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
>>>>>>> refactor: update schema & reorder sqitch plan
              },
              "defaultValue": null
            },
            {
              "name": "rowId",
              "description": "Unique ID for the user",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "DeleteCifUserInput",
          "description": "All input for the `deleteCifUser` mutation.",
          "fields": null,
          "inputFields": [
            {
              "name": "clientMutationId",
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "id",
              "description": "The globally unique `ID` which will identify a single `CifUser` to be deleted.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
          "name": "CifUserProjectsByProjectManagerUpdatedByAndProjectIdManyToManyEdge",
          "description": "A `Project` edge in the connection, with data from `ProjectManager`.",
          "fields": [
            {
<<<<<<< HEAD
              "name": "changeStatusByChangeStatus",
              "description": "Reads a single `ChangeStatus` that is related to this `FormChange`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "ChangeStatus",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUserByCreatedBy",
              "description": "Reads a single `CifUser` that is related to this `FormChange`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUserByDeletedBy",
              "description": "Reads a single `CifUser` that is related to this `FormChange`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUserByUpdatedBy",
              "description": "Reads a single `CifUser` that is related to this `FormChange`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "clientMutationId",
              "description": "The exact same `clientMutationId` that was provided in the mutation input,\nunchanged and unused. May be used by a client to track mutations.",
=======
              "name": "cursor",
              "description": "A cursor for use in pagination.",
>>>>>>> chore: add basic SelectOperator component
=======
          "name": "DeleteCifUserPayload",
          "description": "The output of our delete `CifUser` mutation.",
          "fields": [
            {
              "name": "cifUser",
              "description": "The `CifUser` that was deleted by this mutation.",
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUserByCreatedBy",
              "description": "Reads a single `CifUser` that is related to this `CifUser`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUserByDeletedBy",
              "description": "Reads a single `CifUser` that is related to this `CifUser`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUserByUpdatedBy",
              "description": "Reads a single `CifUser` that is related to this `CifUser`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUserEdge",
              "description": "An edge for our `CifUser`. May be used by Relay 1.",
              "args": [
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `CifUser`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "CifUsersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
<<<<<<< HEAD
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProjectManagersConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CifUserToManyAttachmentFilter",
          "description": "A filter to be used against many `Attachment` object types. All fields are combined with a logical ‘and.’",
          "fields": null,
          "inputFields": [
            {
              "name": "every",
              "description": "Every related `Attachment` matches the filter criteria. All fields are combined with a logical ‘and.’",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "AttachmentFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "none",
              "description": "No related `Attachment` matches the filter criteria. All fields are combined with a logical ‘and.’",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "AttachmentFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "some",
              "description": "Some related `Attachment` matches the filter criteria. All fields are combined with a logical ‘and.’",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "AttachmentFilter",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CifUserToManyChangeStatusFilter",
          "description": "A filter to be used against many `ChangeStatus` object types. All fields are combined with a logical ‘and.’",
          "fields": null,
          "inputFields": [
            {
              "name": "every",
              "description": "Every related `ChangeStatus` matches the filter criteria. All fields are combined with a logical ‘and.’",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "ChangeStatusFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "none",
              "description": "No related `ChangeStatus` matches the filter criteria. All fields are combined with a logical ‘and.’",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "ChangeStatusFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "some",
              "description": "Some related `ChangeStatus` matches the filter criteria. All fields are combined with a logical ‘and.’",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "ChangeStatusFilter",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CifUserToManyCifUserFilter",
          "description": "A filter to be used against many `CifUser` object types. All fields are combined with a logical ‘and.’",
          "fields": null,
          "inputFields": [
            {
              "name": "every",
              "description": "Every related `CifUser` matches the filter criteria. All fields are combined with a logical ‘and.’",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "none",
              "description": "No related `CifUser` matches the filter criteria. All fields are combined with a logical ‘and.’",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "some",
              "description": "Some related `CifUser` matches the filter criteria. All fields are combined with a logical ‘and.’",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserFilter",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CifUserToManyKeycloakJwtFilter",
          "description": "A filter to be used against many `KeycloakJwt` object types. All fields are combined with a logical ‘and.’",
          "fields": null,
          "inputFields": [
            {
              "name": "every",
              "description": "Every related `KeycloakJwt` matches the filter criteria. All fields are combined with a logical ‘and.’",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "KeycloakJwtFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "none",
              "description": "No related `KeycloakJwt` matches the filter criteria. All fields are combined with a logical ‘and.’",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "KeycloakJwtFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "some",
              "description": "Some related `KeycloakJwt` matches the filter criteria. All fields are combined with a logical ‘and.’",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "KeycloakJwtFilter",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CifUserToManyProjectFilter",
          "description": "A filter to be used against many `Project` object types. All fields are combined with a logical ‘and.’",
          "fields": null,
          "inputFields": [
            {
              "name": "every",
              "description": "Every related `Project` matches the filter criteria. All fields are combined with a logical ‘and.’",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "ProjectFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "none",
              "description": "No related `Project` matches the filter criteria. All fields are combined with a logical ‘and.’",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "ProjectFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "some",
              "description": "Some related `Project` matches the filter criteria. All fields are combined with a logical ‘and.’",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "ProjectFilter",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CifUserToManyProjectManagerFilter",
          "description": "A filter to be used against many `ProjectManager` object types. All fields are combined with a logical ‘and.’",
          "fields": null,
          "inputFields": [
            {
              "name": "every",
              "description": "Every related `ProjectManager` matches the filter criteria. All fields are combined with a logical ‘and.’",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "ProjectManagerFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "none",
              "description": "No related `ProjectManager` matches the filter criteria. All fields are combined with a logical ‘and.’",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "ProjectManagerFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "some",
              "description": "Some related `ProjectManager` matches the filter criteria. All fields are combined with a logical ‘and.’",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "ProjectManagerFilter",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CifUsersConnection",
          "description": "A connection to a list of `CifUser` values.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser` and cursor to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CifUsersEdge",
                      "ofType": null
                    }
                  }
                }
=======
                "kind": "OBJECT",
                "name": "CifUsersEdge",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "clientMutationId",
              "description": "The exact same `clientMutationId` that was provided in the mutation input,\nunchanged and unused. May be used by a client to track mutations.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
>>>>>>> refactor: update schema & reorder sqitch plan
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
=======
              "name": "deletedCifUserId",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
>>>>>>> refactor: update schema & reorder sqitch plan
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "query",
              "description": "Our root query field type. Allows us to run any query from our mutation payload.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Query",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "DeleteFormChangeByRowIdInput",
          "description": "All input for the `deleteFormChangeByRowId` mutation.",
          "fields": null,
          "inputFields": [
            {
              "name": "clientMutationId",
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "rowId",
              "description": null,
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "DeleteFormChangeInput",
          "description": "All input for the `deleteFormChange` mutation.",
          "fields": null,
          "inputFields": [
            {
              "name": "clientMutationId",
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
<<<<<<< HEAD
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
=======
              "name": "id",
              "description": "The globally unique `ID` which will identify a single `FormChange` to be deleted.",
>>>>>>> refactor: update schema & reorder sqitch plan
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
<<<<<<< HEAD
          "name": "CifUsersEdge",
          "description": "A `CifUser` edge in the connection.",
=======
          "name": "DeleteFormChangePayload",
          "description": "The output of our delete `FormChange` mutation.",
>>>>>>> refactor: update schema & reorder sqitch plan
          "fields": [
            {
              "name": "changeStatusByChangeStatus",
              "description": "Reads a single `ChangeStatus` that is related to this `FormChange`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "ChangeStatus",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "clientMutationId",
              "description": "The exact same `clientMutationId` that was provided in the mutation input,\nunchanged and unused. May be used by a client to track mutations.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
=======
              "name": "deletedFormChangeId",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "formChange",
              "description": "The `FormChange` that was deleted by this mutation.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "FormChange",
>>>>>>> refactor: update schema & reorder sqitch plan
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
<<<<<<< HEAD
=======
            },
            {
              "name": "formChangeEdge",
              "description": "An edge for our `FormChange`. May be used by Relay 1.",
              "args": [
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `FormChange`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "FormChangesOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "FormChangesEdge",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "query",
              "description": "Our root query field type. Allows us to run any query from our mutation payload.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Query",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
>>>>>>> refactor: update schema & reorder sqitch plan
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
<<<<<<< HEAD
          "kind": "ENUM",
          "name": "CifUsersOrderBy",
          "description": "Methods to use when ordering `CifUser`.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "CREATED_AT_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "cifUserByCreatedBy",
              "description": "Reads a single `CifUser` that is related to this `FormChange`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
=======
          "kind": "INPUT_OBJECT",
          "name": "DeleteProjectManagerByRowIdInput",
          "description": "All input for the `deleteProjectManagerByRowId` mutation.",
          "fields": null,
          "inputFields": [
            {
              "name": "clientMutationId",
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "rowId",
              "description": "Unique ID for the project manager record",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
>>>>>>> refactor: update schema & reorder sqitch plan
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "DeleteProjectManagerInput",
          "description": "All input for the `deleteProjectManager` mutation.",
          "fields": null,
          "inputFields": [
            {
<<<<<<< HEAD
              "name": "cifUserByDeletedBy",
              "description": "Reads a single `CifUser` that is related to this `FormChange`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
=======
              "name": "clientMutationId",
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
>>>>>>> refactor: update schema & reorder sqitch plan
                "ofType": null
              },
              "defaultValue": null
            },
            {
<<<<<<< HEAD
              "name": "cifUserByUpdatedBy",
              "description": "Reads a single `CifUser` that is related to this `FormChange`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "clientMutationId",
              "description": "The exact same `clientMutationId` that was provided in the mutation input,\nunchanged and unused. May be used by a client to track mutations.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
=======
              "name": "id",
              "description": "The globally unique `ID` which will identify a single `ProjectManager` to be deleted.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "DeleteProjectManagerPayload",
          "description": "The output of our delete `ProjectManager` mutation.",
          "fields": [
            {
              "name": "cifUserByCifUserId",
              "description": "Reads a single `CifUser` that is related to this `ProjectManager`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
>>>>>>> refactor: update schema & reorder sqitch plan
                "ofType": null
              },
=======
              "name": "CREATED_AT_DESC",
              "description": null,
>>>>>>> chore: add basic SelectOperator component
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "CREATED_BY_ASC",
              "description": null,
=======
              "name": "cifUserByCreatedBy",
              "description": "Reads a single `CifUser` that is related to this `ProjectManager`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
>>>>>>> refactor: update schema & reorder sqitch plan
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "CREATED_BY_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DELETED_AT_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DELETED_AT_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DELETED_BY_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DELETED_BY_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "EMAIL_ADDRESS_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "EMAIL_ADDRESS_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FIRST_NAME_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FIRST_NAME_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ID_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ID_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LAST_NAME_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LAST_NAME_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NATURAL",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PRIMARY_KEY_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PRIMARY_KEY_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UPDATED_AT_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UPDATED_AT_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UPDATED_BY_ASC",
              "description": null,
=======
              "name": "cifUserByDeletedBy",
              "description": "Reads a single `CifUser` that is related to this `ProjectManager`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
>>>>>>> refactor: update schema & reorder sqitch plan
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "UPDATED_BY_DESC",
              "description": null,
=======
              "name": "cifUserByUpdatedBy",
              "description": "Reads a single `CifUser` that is related to this `ProjectManager`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
>>>>>>> refactor: update schema & reorder sqitch plan
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "UUID_ASC",
              "description": null,
=======
              "name": "clientMutationId",
              "description": "The exact same `clientMutationId` that was provided in the mutation input,\nunchanged and unused. May be used by a client to track mutations.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
>>>>>>> refactor: update schema & reorder sqitch plan
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "UUID_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CreateAttachmentInput",
          "description": "All input for the create `Attachment` mutation.",
          "fields": null,
          "inputFields": [
            {
              "name": "attachment",
              "description": "The `Attachment` to be created by this mutation.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "AttachmentInput",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "clientMutationId",
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CreateAttachmentPayload",
          "description": "The output of our create `Attachment` mutation.",
          "fields": [
            {
              "name": "attachment",
              "description": "The `Attachment` that was created by this mutation.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Attachment",
=======
              "name": "deletedProjectManagerId",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projectByProjectId",
              "description": "Reads a single `Project` that is related to this `ProjectManager`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Project",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projectManager",
              "description": "The `ProjectManager` that was deleted by this mutation.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "ProjectManager",
>>>>>>> refactor: update schema & reorder sqitch plan
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "attachmentEdge",
              "description": "An edge for our `Attachment`. May be used by Relay 1.",
=======
              "name": "projectManagerEdge",
              "description": "An edge for our `ProjectManager`. May be used by Relay 1.",
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `Attachment`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "AttachmentsOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "OBJECT",
<<<<<<< HEAD
                "name": "AttachmentsEdge",
=======
                "name": "ProjectManagersEdge",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "query",
              "description": "Our root query field type. Allows us to run any query from our mutation payload.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Query",
>>>>>>> refactor: update schema & reorder sqitch plan
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
<<<<<<< HEAD
            },
            {
              "name": "cifUserByCreatedBy",
              "description": "Reads a single `CifUser` that is related to this `Attachment`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
=======
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "FormChange",
          "description": null,
          "fields": [
            {
              "name": "changeReason",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
>>>>>>> refactor: update schema & reorder sqitch plan
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "cifUserByDeletedBy",
              "description": "Reads a single `CifUser` that is related to this `Attachment`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
=======
              "name": "changeStatus",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
>>>>>>> refactor: update schema & reorder sqitch plan
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "cifUserByUpdatedBy",
              "description": "Reads a single `CifUser` that is related to this `Attachment`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
=======
              "name": "changeStatusByChangeStatus",
              "description": "Reads a single `ChangeStatus` that is related to this `FormChange`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "ChangeStatus",
>>>>>>> refactor: update schema & reorder sqitch plan
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "clientMutationId",
              "description": "The exact same `clientMutationId` that was provided in the mutation input,\nunchanged and unused. May be used by a client to track mutations.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "query",
              "description": "Our root query field type. Allows us to run any query from our mutation payload.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Query",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CreateChangeStatusInput",
          "description": "All input for the create `ChangeStatus` mutation.",
          "fields": null,
          "inputFields": [
            {
              "name": "changeStatus",
              "description": "The `ChangeStatus` to be created by this mutation.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "ChangeStatusInput",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "clientMutationId",
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
=======
              "name": "formDataRecordId",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "formDataSchemaName",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "formDataTableName",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": "A globally unique identifier. Can be used in various places throughout the system to identify this single value.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "newFormData",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "JSON",
>>>>>>> refactor: update schema & reorder sqitch plan
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CreateChangeStatusPayload",
          "description": "The output of our create `ChangeStatus` mutation.",
          "fields": [
            {
<<<<<<< HEAD
              "name": "changeStatus",
              "description": "The `ChangeStatus` that was created by this mutation.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "ChangeStatus",
=======
              "name": "operation",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
>>>>>>> refactor: update schema & reorder sqitch plan
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "changeStatusEdge",
              "description": "An edge for our `ChangeStatus`. May be used by Relay 1.",
              "args": [
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `ChangeStatus`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "ChangeStatusesOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "ChangeStatusesEdge",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUserByCreatedBy",
              "description": "Reads a single `CifUser` that is related to this `ChangeStatus`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUserByDeletedBy",
              "description": "Reads a single `CifUser` that is related to this `ChangeStatus`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUserByUpdatedBy",
              "description": "Reads a single `CifUser` that is related to this `ChangeStatus`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "clientMutationId",
              "description": "The exact same `clientMutationId` that was provided in the mutation input,\nunchanged and unused. May be used by a client to track mutations.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "query",
              "description": "Our root query field type. Allows us to run any query from our mutation payload.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Query",
                "ofType": null
=======
              "name": "rowId",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
>>>>>>> refactor: update schema & reorder sqitch plan
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
<<<<<<< HEAD
          "name": "CreateCifUserInput",
          "description": "All input for the create `CifUser` mutation.",
          "fields": null,
          "inputFields": [
            {
              "name": "cifUser",
              "description": "The `CifUser` to be created by this mutation.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "CifUserInput",
                  "ofType": null
                }
=======
          "name": "FormChangeCondition",
          "description": "A condition to be used against `FormChange` object types. All fields are tested\nfor equality and combined with a logical ‘and.’",
          "fields": null,
          "inputFields": [
            {
              "name": "changeReason",
              "description": "Checks for equality with the object’s `changeReason` field.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "changeStatus",
              "description": "Checks for equality with the object’s `changeStatus` field.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
>>>>>>> refactor: update schema & reorder sqitch plan
              },
              "defaultValue": null
            },
            {
<<<<<<< HEAD
              "name": "clientMutationId",
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
=======
              "name": "formDataRecordId",
              "description": "Checks for equality with the object’s `formDataRecordId` field.",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "formDataSchemaName",
              "description": "Checks for equality with the object’s `formDataSchemaName` field.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "formDataTableName",
              "description": "Checks for equality with the object’s `formDataTableName` field.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "newFormData",
              "description": "Checks for equality with the object’s `newFormData` field.",
              "type": {
                "kind": "SCALAR",
                "name": "JSON",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "operation",
              "description": "Checks for equality with the object’s `operation` field.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "rowId",
              "description": "Checks for equality with the object’s `rowId` field.",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
>>>>>>> refactor: update schema & reorder sqitch plan
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
<<<<<<< HEAD
          "kind": "OBJECT",
          "name": "CreateCifUserPayload",
          "description": "The output of our create `CifUser` mutation.",
          "fields": [
            {
              "name": "cifUser",
              "description": "The `CifUser` that was created by this mutation.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
=======
          "kind": "INPUT_OBJECT",
          "name": "FormChangeFilter",
          "description": "A filter to be used against `FormChange` object types. All fields are combined with a logical ‘and.’",
          "fields": null,
          "inputFields": [
            {
              "name": "and",
              "description": "Checks for all expressions in this list.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "FormChangeFilter",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "changeReason",
              "description": "Filter by the object’s `changeReason` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilter",
>>>>>>> refactor: update schema & reorder sqitch plan
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "cifUserByCreatedBy",
              "description": "Reads a single `CifUser` that is related to this `CifUser`.",
              "args": [],
=======
              "name": "changeStatus",
              "description": "Filter by the object’s `changeStatus` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "changeStatusByChangeStatus",
              "description": "Filter by the object’s `changeStatusByChangeStatus` relation.",
>>>>>>> refactor: update schema & reorder sqitch plan
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "cifUserByDeletedBy",
              "description": "Reads a single `CifUser` that is related to this `CifUser`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUserByUpdatedBy",
              "description": "Reads a single `CifUser` that is related to this `CifUser`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
=======
              "name": "changeStatusByChangeStatusExists",
              "description": "A related `changeStatusByChangeStatus` exists.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "formDataRecordId",
              "description": "Filter by the object’s `formDataRecordId` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IntFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "formDataSchemaName",
              "description": "Filter by the object’s `formDataSchemaName` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "formDataTableName",
              "description": "Filter by the object’s `formDataTableName` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "newFormData",
              "description": "Filter by the object’s `newFormData` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "JSONFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Negates the expression.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "FormChangeFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "operation",
              "description": "Filter by the object’s `operation` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "or",
              "description": "Checks for any expressions in this list.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "FormChangeFilter",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "rowId",
              "description": "Filter by the object’s `rowId` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IntFilter",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "FormChangeInput",
          "description": "An input for mutations affecting `FormChange`",
          "fields": null,
          "inputFields": [
            {
              "name": "changeReason",
              "description": null,
              "type": {
                "kind": "SCALAR",
                "name": "String",
>>>>>>> refactor: update schema & reorder sqitch plan
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "cifUserEdge",
              "description": "An edge for our `CifUser`. May be used by Relay 1.",
              "args": [
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `CifUser`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "CifUsersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "CifUsersEdge",
=======
              "name": "changeStatus",
              "description": null,
              "type": {
                "kind": "SCALAR",
                "name": "String",
>>>>>>> refactor: update schema & reorder sqitch plan
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
<<<<<<< HEAD
            {
<<<<<<< HEAD
              "name": "clientMutationId",
              "description": "The exact same `clientMutationId` that was provided in the mutation input,\nunchanged and unused. May be used by a client to track mutations.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "deletedCifUserId",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "query",
              "description": "Our root query field type. Allows us to run any query from our mutation payload.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Query",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "DeleteFormChangeByRowIdInput",
          "description": "All input for the `deleteFormChangeByRowId` mutation.",
          "fields": null,
          "inputFields": [
            {
              "name": "clientMutationId",
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
=======
              "name": "formDataRecordId",
              "description": null,
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "formDataSchemaName",
              "description": null,
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "formDataTableName",
              "description": null,
>>>>>>> refactor: update schema & reorder sqitch plan
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
<<<<<<< HEAD
              "name": "rowId",
              "description": null,
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
=======
              "name": "newFormData",
              "description": null,
              "type": {
                "kind": "SCALAR",
                "name": "JSON",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "operation",
              "description": null,
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
>>>>>>> refactor: update schema & reorder sqitch plan
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
<<<<<<< HEAD
          "name": "DeleteFormChangeInput",
          "description": "All input for the `deleteFormChange` mutation.",
          "fields": null,
          "inputFields": [
            {
              "name": "clientMutationId",
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
=======
          "name": "FormChangePatch",
          "description": "Represents an update to a `FormChange`. Fields that are set will be updated.",
          "fields": null,
          "inputFields": [
            {
              "name": "changeReason",
              "description": null,
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "changeStatus",
              "description": null,
>>>>>>> refactor: update schema & reorder sqitch plan
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
<<<<<<< HEAD
              "name": "id",
              "description": "The globally unique `ID` which will identify a single `FormChange` to be deleted.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "DeleteFormChangePayload",
          "description": "The output of our delete `FormChange` mutation.",
          "fields": [
            {
              "name": "changeStatusByChangeStatus",
              "description": "Reads a single `ChangeStatus` that is related to this `FormChange`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "ChangeStatus",
=======
              "name": "formDataRecordId",
              "description": null,
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "formDataSchemaName",
              "description": null,
              "type": {
                "kind": "SCALAR",
                "name": "String",
>>>>>>> refactor: update schema & reorder sqitch plan
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "cifUserByCreatedBy",
              "description": "Reads a single `CifUser` that is related to this `FormChange`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
=======
              "name": "formDataTableName",
              "description": null,
              "type": {
                "kind": "SCALAR",
                "name": "String",
>>>>>>> refactor: update schema & reorder sqitch plan
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "cifUserByDeletedBy",
              "description": "Reads a single `CifUser` that is related to this `FormChange`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUserByUpdatedBy",
              "description": "Reads a single `CifUser` that is related to this `FormChange`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
=======
              "name": "newFormData",
              "description": null,
              "type": {
                "kind": "SCALAR",
                "name": "JSON",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "operation",
              "description": null,
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "FormChangesConnection",
          "description": "A connection to a list of `FormChange` values.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `FormChange` and cursor to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "FormChangesEdge",
                      "ofType": null
                    }
                  }
                }
>>>>>>> refactor: update schema & reorder sqitch plan
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "clientMutationId",
              "description": "The exact same `clientMutationId` that was provided in the mutation input,\nunchanged and unused. May be used by a client to track mutations.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
=======
              "name": "nodes",
              "description": "A list of `FormChange` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "FormChange",
                    "ofType": null
                  }
                }
>>>>>>> refactor: update schema & reorder sqitch plan
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "deletedFormChangeId",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "formChange",
              "description": "The `FormChange` that was deleted by this mutation.",
=======
              "name": "totalCount",
              "description": "The count of *all* `FormChange` you could get from the connection.",
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "FormChange",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "formChangeEdge",
              "description": "An edge for our `FormChange`. May be used by Relay 1.",
              "args": [
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `FormChange`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "FormChangesOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "FormChangesEdge",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "query",
              "description": "Our root query field type. Allows us to run any query from our mutation payload.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Query",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
<<<<<<< HEAD
          "kind": "INPUT_OBJECT",
          "name": "DeleteFundingStreamByRowIdInput",
          "description": "All input for the `deleteFundingStreamByRowId` mutation.",
          "fields": null,
          "inputFields": [
=======
>>>>>>> chore: add basic SelectOperator component
=======
          "kind": "OBJECT",
          "name": "FormChangesEdge",
          "description": "A `FormChange` edge in the connection.",
          "fields": [
>>>>>>> refactor: update schema & reorder sqitch plan
            {
              "name": "clientMutationId",
              "description": "The exact same `clientMutationId` that was provided in the mutation input,\nunchanged and unused. May be used by a client to track mutations.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "query",
              "description": "Our root query field type. Allows us to run any query from our mutation payload.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Query",
=======
              "name": "node",
              "description": "The `FormChange` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "FormChange",
>>>>>>> refactor: update schema & reorder sqitch plan
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
<<<<<<< HEAD
          "kind": "INPUT_OBJECT",
          "name": "CreateFormChangeInput",
          "description": "All input for the create `FormChange` mutation.",
          "fields": null,
          "inputFields": [
            {
              "name": "clientMutationId",
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "formChange",
              "description": "The `FormChange` to be created by this mutation.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "FormChangeInput",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CreateFormChangePayload",
          "description": "The output of our create `FormChange` mutation.",
          "fields": [
            {
              "name": "changeStatusByChangeStatus",
              "description": "Reads a single `ChangeStatus` that is related to this `FormChange`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "ChangeStatus",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "clientMutationId",
              "description": "The exact same `clientMutationId` that was provided in the mutation input,\nunchanged and unused. May be used by a client to track mutations.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "formChange",
              "description": "The `FormChange` that was created by this mutation.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "FormChange",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "formChangeEdge",
              "description": "An edge for our `FormChange`. May be used by Relay 1.",
              "args": [
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `FormChange`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "FormChangesOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "FormChangesEdge",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "query",
              "description": "Our root query field type. Allows us to run any query from our mutation payload.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Query",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CreateProjectInput",
          "description": "All input for the `createProject` mutation.",
          "fields": null,
          "inputFields": [
            {
              "name": "clientMutationId",
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CreateProjectManagerInput",
          "description": "All input for the create `ProjectManager` mutation.",
          "fields": null,
          "inputFields": [
            {
              "name": "clientMutationId",
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "projectManager",
              "description": "The `ProjectManager` to be created by this mutation.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "ProjectManagerInput",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CreateProjectManagerPayload",
          "description": "The output of our create `ProjectManager` mutation.",
          "fields": [
            {
              "name": "cifUserByCifUserId",
              "description": "Reads a single `CifUser` that is related to this `ProjectManager`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUserByCreatedBy",
              "description": "Reads a single `CifUser` that is related to this `ProjectManager`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUserByDeletedBy",
              "description": "Reads a single `CifUser` that is related to this `ProjectManager`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUserByUpdatedBy",
              "description": "Reads a single `CifUser` that is related to this `ProjectManager`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "clientMutationId",
              "description": "The exact same `clientMutationId` that was provided in the mutation input,\nunchanged and unused. May be used by a client to track mutations.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projectByProjectId",
              "description": "Reads a single `Project` that is related to this `ProjectManager`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Project",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projectManager",
              "description": "The `ProjectManager` that was created by this mutation.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "ProjectManager",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projectManagerEdge",
              "description": "An edge for our `ProjectManager`. May be used by Relay 1.",
              "args": [
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `ProjectManager`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "ProjectManagersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "ProjectManagersEdge",
                "ofType": null
              },
=======
          "kind": "ENUM",
          "name": "FormChangesOrderBy",
          "description": "Methods to use when ordering `FormChange`.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "CHANGE_REASON_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CHANGE_REASON_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CHANGE_STATUS_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CHANGE_STATUS_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FORM_DATA_RECORD_ID_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FORM_DATA_RECORD_ID_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FORM_DATA_SCHEMA_NAME_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FORM_DATA_SCHEMA_NAME_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FORM_DATA_TABLE_NAME_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FORM_DATA_TABLE_NAME_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ID_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ID_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NATURAL",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NEW_FORM_DATA_ASC",
              "description": null,
>>>>>>> refactor: update schema & reorder sqitch plan
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "query",
              "description": "Our root query field type. Allows us to run any query from our mutation payload.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Query",
                "ofType": null
              },
=======
              "name": "NEW_FORM_DATA_DESC",
              "description": null,
>>>>>>> refactor: update schema & reorder sqitch plan
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CreateProjectPayload",
          "description": "The output of our `createProject` mutation.",
          "fields": [
            {
<<<<<<< HEAD
              "name": "changeStatusByChangeStatus",
              "description": "Reads a single `ChangeStatus` that is related to this `FormChange`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "ChangeStatus",
                "ofType": null
              },
=======
              "name": "OPERATION_ASC",
              "description": null,
>>>>>>> refactor: update schema & reorder sqitch plan
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
<<<<<<< HEAD
              "name": "cifUserByCreatedBy",
              "description": "Reads a single `CifUser` that is related to this `FormChange`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
=======
              "name": "OPERATION_DESC",
              "description": null,
>>>>>>> refactor: update schema & reorder sqitch plan
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "cifUserByDeletedBy",
              "description": "Reads a single `CifUser` that is related to this `FormChange`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
=======
              "name": "PRIMARY_KEY_ASC",
              "description": null,
>>>>>>> refactor: update schema & reorder sqitch plan
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "cifUserByUpdatedBy",
              "description": "Reads a single `CifUser` that is related to this `FormChange`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "created at timestamp",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Datetime",
                  "ofType": null
                }
=======
              "name": "PRIMARY_KEY_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "SCALAR",
          "name": "ID",
          "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "SCALAR",
          "name": "Int",
          "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "IntFilter",
          "description": "A filter to be used against Int fields. All fields are combined with a logical ‘and.’",
          "fields": null,
          "inputFields": [
            {
              "name": "distinctFrom",
              "description": "Not equal to the specified value, treating null like an ordinary value.",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
>>>>>>> refactor: update schema & reorder sqitch plan
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
              "name": "createdBy",
              "description": "created by user id",
              "args": [],
=======
              "name": "equalTo",
              "description": "Equal to the specified value.",
>>>>>>> refactor: update schema & reorder sqitch plan
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
<<<<<<< HEAD
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "deletedAt",
              "description": "deleted at timestamp",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
=======
              "defaultValue": null
            },
            {
              "name": "greaterThan",
              "description": "Greater than the specified value.",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
>>>>>>> refactor: update schema & reorder sqitch plan
                "ofType": null
              },
              "defaultValue": null
            },
            {
<<<<<<< HEAD
              "name": "deletedBy",
              "description": "deleted by user id",
              "args": [],
=======
              "name": "greaterThanOrEqualTo",
              "description": "Greater than or equal to the specified value.",
>>>>>>> refactor: update schema & reorder sqitch plan
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
<<<<<<< HEAD
              "name": "formDataRecordId",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
=======
              "name": "in",
              "description": "Included in the specified list.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                }
>>>>>>> refactor: update schema & reorder sqitch plan
              },
              "defaultValue": null
            },
            {
<<<<<<< HEAD
              "name": "formDataSchemaName",
              "description": null,
=======
              "name": "clientMutationId",
              "description": "The exact same `clientMutationId` that was provided in the mutation input,\nunchanged and unused. May be used by a client to track mutations.",
>>>>>>> chore: add basic SelectOperator component
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "formChange",
              "description": null,
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "FormChange",
=======
              "name": "isNull",
              "description": "Is null (if `true` is specified) or is not null (if `false` is specified).",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
>>>>>>> refactor: update schema & reorder sqitch plan
                "ofType": null
              },
              "defaultValue": null
            },
            {
<<<<<<< HEAD
              "name": "formChangeEdge",
              "description": "An edge for our `FormChange`. May be used by Relay 1.",
              "args": [
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `FormChange`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "FormChangesOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "FormChangesEdge",
=======
              "name": "lessThan",
              "description": "Less than the specified value.",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
>>>>>>> refactor: update schema & reorder sqitch plan
                "ofType": null
              },
              "defaultValue": null
            },
            {
<<<<<<< HEAD
              "name": "query",
              "description": "Our root query field type. Allows us to run any query from our mutation payload.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Query",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
<<<<<<< HEAD
            },
            {
              "name": "rowId",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "updated at timestamp",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Datetime",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedBy",
              "description": "updated by user id",
              "args": [],
              "type": {
=======
              "name": "lessThanOrEqualTo",
              "description": "Less than or equal to the specified value.",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "notDistinctFrom",
              "description": "Equal to the specified value, treating null like an ordinary value.",
              "type": {
>>>>>>> refactor: update schema & reorder sqitch plan
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
<<<<<<< HEAD
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "FormChangeCondition",
          "description": "A condition to be used against `FormChange` object types. All fields are tested\nfor equality and combined with a logical ‘and.’",
          "fields": null,
          "inputFields": [
            {
              "name": "changeReason",
              "description": "Checks for equality with the object’s `changeReason` field.",
=======
              "defaultValue": null
            },
            {
              "name": "notEqualTo",
              "description": "Not equal to the specified value.",
>>>>>>> refactor: update schema & reorder sqitch plan
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
<<<<<<< HEAD
              "name": "changeStatus",
              "description": "Checks for equality with the object’s `changeStatus` field.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "createdAt",
              "description": "Checks for equality with the object’s `createdAt` field.",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
=======
              "name": "notIn",
              "description": "Not included in the specified list.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "SCALAR",
          "name": "JSON",
          "description": "A JavaScript object encoded in the JSON format as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "JSONFilter",
          "description": "A filter to be used against JSON fields. All fields are combined with a logical ‘and.’",
          "fields": null,
          "inputFields": [
            {
              "name": "containedBy",
              "description": "Contained by the specified JSON.",
              "type": {
                "kind": "SCALAR",
                "name": "JSON",
>>>>>>> refactor: update schema & reorder sqitch plan
                "ofType": null
              },
              "defaultValue": null
            },
            {
<<<<<<< HEAD
              "name": "createdBy",
              "description": "Checks for equality with the object’s `createdBy` field.",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "deletedAt",
              "description": "Checks for equality with the object’s `deletedAt` field.",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "deletedBy",
              "description": "Checks for equality with the object’s `deletedBy` field.",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "formDataRecordId",
              "description": "Checks for equality with the object’s `formDataRecordId` field.",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "formDataSchemaName",
              "description": "Checks for equality with the object’s `formDataSchemaName` field.",
=======
              "name": "contains",
              "description": "Contains the specified JSON.",
>>>>>>> refactor: update schema & reorder sqitch plan
              "type": {
                "kind": "SCALAR",
                "name": "JSON",
                "ofType": null
              },
              "defaultValue": null
            },
            {
<<<<<<< HEAD
              "name": "formDataTableName",
              "description": "Checks for equality with the object’s `formDataTableName` field.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "newFormData",
              "description": "Checks for equality with the object’s `newFormData` field.",
              "type": {
                "kind": "SCALAR",
                "name": "JSON",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "operation",
              "description": "Checks for equality with the object’s `operation` field.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "rowId",
              "description": "Checks for equality with the object’s `rowId` field.",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "updatedAt",
              "description": "Checks for equality with the object’s `updatedAt` field.",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
=======
              "name": "containsAllKeys",
              "description": "Contains all of the specified keys.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                }
>>>>>>> refactor: update schema & reorder sqitch plan
              },
              "defaultValue": null
            },
            {
<<<<<<< HEAD
              "name": "updatedBy",
              "description": "Checks for equality with the object’s `updatedBy` field.",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
=======
            }
          ],
          "inputFields": null,
          "interfaces": [],
>>>>>>> chore: add basic SelectOperator component
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CreateUserFromSessionInput",
          "description": "All input for the `createUserFromSession` mutation.",
          "fields": null,
          "inputFields": [
<<<<<<< HEAD
            {
              "name": "and",
              "description": "Checks for all expressions in this list.",
=======
              "name": "containsAnyKeys",
              "description": "Contains any of the specified keys.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "containsKey",
              "description": "Contains the specified key.",
>>>>>>> refactor: update schema & reorder sqitch plan
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "FormChangeFilter",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "changeReason",
              "description": "Filter by the object’s `changeReason` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
<<<<<<< HEAD
              "name": "changeStatus",
              "description": "Filter by the object’s `changeStatus` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilter",
=======
              "name": "distinctFrom",
              "description": "Not equal to the specified value, treating null like an ordinary value.",
              "type": {
                "kind": "SCALAR",
                "name": "JSON",
>>>>>>> refactor: update schema & reorder sqitch plan
                "ofType": null
              },
              "defaultValue": null
            },
            {
<<<<<<< HEAD
              "name": "changeStatusByChangeStatus",
              "description": "Filter by the object’s `changeStatusByChangeStatus` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "ChangeStatusFilter",
=======
              "name": "equalTo",
              "description": "Equal to the specified value.",
              "type": {
                "kind": "SCALAR",
                "name": "JSON",
>>>>>>> refactor: update schema & reorder sqitch plan
                "ofType": null
              },
              "defaultValue": null
            },
            {
<<<<<<< HEAD
              "name": "changeStatusByChangeStatusExists",
              "description": "A related `changeStatusByChangeStatus` exists.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
=======
              "name": "greaterThan",
              "description": "Greater than the specified value.",
              "type": {
                "kind": "SCALAR",
                "name": "JSON",
>>>>>>> refactor: update schema & reorder sqitch plan
                "ofType": null
              },
              "defaultValue": null
            },
            {
<<<<<<< HEAD
              "name": "cifUserByCreatedBy",
              "description": "Filter by the object’s `cifUserByCreatedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "cifUserByCreatedByExists",
              "description": "A related `cifUserByCreatedBy` exists.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "cifUserByDeletedBy",
              "description": "Filter by the object’s `cifUserByDeletedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "cifUserByDeletedByExists",
              "description": "A related `cifUserByDeletedBy` exists.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "cifUserByUpdatedBy",
              "description": "Filter by the object’s `cifUserByUpdatedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserFilter",
=======
              "name": "greaterThanOrEqualTo",
              "description": "Greater than or equal to the specified value.",
              "type": {
                "kind": "SCALAR",
                "name": "JSON",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "in",
              "description": "Included in the specified list.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "JSON",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "isNull",
              "description": "Is null (if `true` is specified) or is not null (if `false` is specified).",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
>>>>>>> refactor: update schema & reorder sqitch plan
                "ofType": null
              },
              "defaultValue": null
            },
            {
<<<<<<< HEAD
              "name": "cifUserByUpdatedByExists",
              "description": "A related `cifUserByUpdatedBy` exists.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
=======
              "name": "lessThan",
              "description": "Less than the specified value.",
              "type": {
                "kind": "SCALAR",
                "name": "JSON",
>>>>>>> refactor: update schema & reorder sqitch plan
                "ofType": null
              },
              "defaultValue": null
            },
            {
<<<<<<< HEAD
              "name": "createdAt",
              "description": "Filter by the object’s `createdAt` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DatetimeFilter",
=======
              "name": "lessThanOrEqualTo",
              "description": "Less than or equal to the specified value.",
              "type": {
                "kind": "SCALAR",
                "name": "JSON",
>>>>>>> refactor: update schema & reorder sqitch plan
                "ofType": null
              },
              "defaultValue": null
            },
            {
<<<<<<< HEAD
              "name": "createdBy",
              "description": "Filter by the object’s `createdBy` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IntFilter",
=======
              "name": "notDistinctFrom",
              "description": "Equal to the specified value, treating null like an ordinary value.",
              "type": {
                "kind": "SCALAR",
                "name": "JSON",
>>>>>>> refactor: update schema & reorder sqitch plan
                "ofType": null
              },
              "defaultValue": null
            },
            {
<<<<<<< HEAD
              "name": "deletedAt",
              "description": "Filter by the object’s `deletedAt` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DatetimeFilter",
=======
              "name": "notEqualTo",
              "description": "Not equal to the specified value.",
              "type": {
                "kind": "SCALAR",
                "name": "JSON",
>>>>>>> refactor: update schema & reorder sqitch plan
                "ofType": null
              },
              "defaultValue": null
            },
            {
<<<<<<< HEAD
              "name": "deletedBy",
              "description": "Filter by the object’s `deletedBy` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IntFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "formDataRecordId",
              "description": "Filter by the object’s `formDataRecordId` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IntFilter",
=======
              "name": "notIn",
              "description": "Not included in the specified list.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "JSON",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "KeycloakJwt",
          "description": null,
          "fields": [
            {
              "name": "acr",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
>>>>>>> refactor: update schema & reorder sqitch plan
                "ofType": null
              },
              "defaultValue": null
            },
            {
<<<<<<< HEAD
              "name": "formDataSchemaName",
              "description": "Filter by the object’s `formDataSchemaName` field.",
=======
              "name": "aud",
              "description": null,
              "args": [],
>>>>>>> refactor: update schema & reorder sqitch plan
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
<<<<<<< HEAD
              "name": "formDataTableName",
              "description": "Filter by the object’s `formDataTableName` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilter",
=======
              "name": "authTime",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
>>>>>>> refactor: update schema & reorder sqitch plan
                "ofType": null
              },
              "defaultValue": null
            },
            {
<<<<<<< HEAD
              "name": "newFormData",
              "description": "Filter by the object’s `newFormData` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "JSONFilter",
=======
              "name": "azp",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
>>>>>>> refactor: update schema & reorder sqitch plan
                "ofType": null
              },
              "defaultValue": null
            },
            {
<<<<<<< HEAD
              "name": "not",
              "description": "Negates the expression.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "FormChangeFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "operation",
              "description": "Filter by the object’s `operation` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "or",
              "description": "Checks for any expressions in this list.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "FormChangeFilter",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
=======
>>>>>>> chore: add basic SelectOperator component
            {
              "name": "clientMutationId",
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
              "type": {
=======
              "name": "brokerSessionId",
              "description": null,
              "args": [],
              "type": {
>>>>>>> refactor: update schema & reorder sqitch plan
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
<<<<<<< HEAD
              "defaultValue": null
            },
            {
              "name": "updatedAt",
              "description": "Filter by the object’s `updatedAt` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DatetimeFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "updatedBy",
              "description": "Filter by the object’s `updatedBy` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IntFilter",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CreateUserFromSessionPayload",
          "description": "The output of our `createUserFromSession` mutation.",
          "fields": [
            {
              "name": "cifUser",
              "description": null,
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
=======
>>>>>>> refactor: update schema & reorder sqitch plan
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUserBySub",
              "description": "Reads a single `CifUser` that is related to this `KeycloakJwt`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
<<<<<<< HEAD
              "name": "createdAt",
              "description": "created at timestamp",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "createdBy",
              "description": "created by user id",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "deletedAt",
              "description": "deleted at timestamp",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "deletedBy",
              "description": "deleted by user id",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "formDataRecordId",
              "description": null,
=======
              "name": "cifUserByDeletedBy",
              "description": "Reads a single `CifUser` that is related to this `CifUser`.",
=======
              "name": "email",
              "description": null,
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [],
>>>>>>> chore: add basic SelectOperator component
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "emailVerified",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "exp",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "familyName",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "givenName",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
<<<<<<< HEAD
              "defaultValue": null
            },
            {
              "name": "updatedAt",
              "description": "updated at timestamp",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "updatedBy",
              "description": "updated by user id",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
=======
              "isDeprecated": false,
              "deprecationReason": null
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "SCALAR",
          "name": "Cursor",
          "description": "A location in a connection that can be used for resuming pagination.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "SCALAR",
          "name": "Datetime",
          "description": "A point in time as described by the [ISO\n8601](https://en.wikipedia.org/wiki/ISO_8601) standard. May or may not include a timezone.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "DatetimeFilter",
          "description": "A filter to be used against Datetime fields. All fields are combined with a logical ‘and.’",
          "fields": null,
          "inputFields": [
=======
            },
>>>>>>> refactor: update schema & reorder sqitch plan
            {
              "name": "iat",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "iss",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
<<<<<<< HEAD
              "name": "createdAt",
              "description": "created at timestamp",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "createdBy",
              "description": "created by user id",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "deletedAt",
              "description": "deleted at timestamp",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "deletedBy",
              "description": "deleted by user id",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "formDataRecordId",
              "description": null,
=======
              "name": "greaterThan",
              "description": "Greater than the specified value.",
>>>>>>> chore: add basic SelectOperator component
=======
              "name": "jti",
              "description": null,
              "args": [],
>>>>>>> refactor: update schema & reorder sqitch plan
              "type": {
                "kind": "SCALAR",
                "name": "UUID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "name",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nbf",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "preferredUsername",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "priorityGroup",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
<<<<<<< HEAD
            {
              "name": "updatedAt",
              "description": "updated at timestamp",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "updatedBy",
              "description": "updated by user id",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "FormChangesConnection",
          "description": "A connection to a list of `FormChange` values.",
          "fields": [
=======
>>>>>>> chore: add basic SelectOperator component
            {
              "name": "sessionState",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "UUID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "sub",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "UUID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typ",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "userGroups",
              "description": null,
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "KeycloakJwtFilter",
          "description": "A filter to be used against `KeycloakJwt` object types. All fields are combined with a logical ‘and.’",
          "fields": null,
          "inputFields": [
            {
              "name": "acr",
              "description": "Filter by the object’s `acr` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "and",
              "description": "Checks for all expressions in this list.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "KeycloakJwtFilter",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
<<<<<<< HEAD
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
<<<<<<< HEAD
          "kind": "ENUM",
          "name": "FormChangesOrderBy",
          "description": "Methods to use when ordering `FormChange`.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "CHANGE_REASON_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CHANGE_REASON_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CHANGE_STATUS_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CHANGE_STATUS_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CREATED_AT_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CREATED_AT_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CREATED_BY_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CREATED_BY_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DELETED_AT_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DELETED_AT_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DELETED_BY_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DELETED_BY_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FORM_DATA_RECORD_ID_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FORM_DATA_RECORD_ID_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FORM_DATA_SCHEMA_NAME_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FORM_DATA_SCHEMA_NAME_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FORM_DATA_TABLE_NAME_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FORM_DATA_TABLE_NAME_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ID_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ID_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NATURAL",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NEW_FORM_DATA_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NEW_FORM_DATA_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
=======
          "kind": "OBJECT",
          "name": "DeleteAttachmentPayload",
          "description": "The output of our delete `Attachment` mutation.",
          "fields": [
>>>>>>> chore: add basic SelectOperator component
            {
              "name": "attachment",
              "description": "The `Attachment` that was deleted by this mutation.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Attachment",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
=======
>>>>>>> refactor: update schema & reorder sqitch plan
            },
            {
              "name": "aud",
              "description": "Filter by the object’s `aud` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "authTime",
              "description": "Filter by the object’s `authTime` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IntFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
<<<<<<< HEAD
<<<<<<< HEAD
              "name": "PRIMARY_KEY_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UPDATED_AT_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UPDATED_AT_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UPDATED_BY_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UPDATED_BY_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "FundingStream",
          "description": "Table containing information about a CIF funding_stream",
          "fields": [
            {
              "name": "cifUserByCreatedBy",
              "description": "Reads a single `CifUser` that is related to this `FundingStream`.",
=======
              "name": "cifUserByDeletedBy",
              "description": "Reads a single `CifUser` that is related to this `Attachment`.",
>>>>>>> chore: add basic SelectOperator component
              "args": [],
=======
              "name": "azp",
              "description": "Filter by the object’s `azp` field.",
>>>>>>> refactor: update schema & reorder sqitch plan
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "brokerSessionId",
              "description": "Filter by the object’s `brokerSessionId` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "cifUserBySub",
              "description": "Filter by the object’s `cifUserBySub` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "cifUserBySubExists",
              "description": "A related `cifUserBySub` exists.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "email",
              "description": "Filter by the object’s `email` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "emailVerified",
              "description": "Filter by the object’s `emailVerified` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "BooleanFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "exp",
              "description": "Filter by the object’s `exp` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IntFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "familyName",
              "description": "Filter by the object’s `familyName` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "givenName",
              "description": "Filter by the object’s `givenName` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "iat",
              "description": "Filter by the object’s `iat` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IntFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "iss",
              "description": "Filter by the object’s `iss` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "jti",
              "description": "Filter by the object’s `jti` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "UUIDFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "name",
              "description": "Filter by the object’s `name` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "nbf",
              "description": "Filter by the object’s `nbf` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IntFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Negates the expression.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "KeycloakJwtFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "or",
              "description": "Checks for any expressions in this list.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "KeycloakJwtFilter",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "preferredUsername",
              "description": "Filter by the object’s `preferredUsername` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "priorityGroup",
              "description": "Filter by the object’s `priorityGroup` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "sessionState",
              "description": "Filter by the object’s `sessionState` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "UUIDFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "sub",
              "description": "Filter by the object’s `sub` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "UUIDFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "typ",
              "description": "Filter by the object’s `typ` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "userGroups",
              "description": "Filter by the object’s `userGroups` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringListFilter",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "Mutation",
          "description": "The root mutation type which contains root level fields which mutate data.",
          "fields": [
            {
              "name": "createAttachment",
              "description": "Creates a single `Attachment`.",
              "args": [
                {
                  "name": "input",
                  "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "CreateAttachmentInput",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "CreateAttachmentPayload",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createChangeStatus",
              "description": "Creates a single `ChangeStatus`.",
              "args": [
                {
                  "name": "input",
                  "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "CreateChangeStatusInput",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "CreateChangeStatusPayload",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createCifUser",
              "description": "Creates a single `CifUser`.",
              "args": [
                {
                  "name": "input",
                  "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "CreateCifUserInput",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "CreateCifUserPayload",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createFormChange",
              "description": "Creates a single `FormChange`.",
              "args": [
                {
                  "name": "input",
                  "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "CreateFormChangeInput",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "CreateFormChangePayload",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createProject",
              "description": null,
              "args": [
                {
                  "name": "input",
                  "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "CreateProjectInput",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "CreateProjectPayload",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createProjectManager",
              "description": "Creates a single `ProjectManager`.",
              "args": [
                {
                  "name": "input",
                  "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "CreateProjectManagerInput",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "CreateProjectManagerPayload",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createUserFromSession",
              "description": null,
              "args": [
                {
                  "name": "input",
                  "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "CreateUserFromSessionInput",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "CreateUserFromSessionPayload",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "deleteAttachment",
              "description": "Deletes a single `Attachment` using its globally unique id.",
              "args": [
                {
                  "name": "input",
                  "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "DeleteAttachmentInput",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "DeleteAttachmentPayload",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "deleteAttachmentByRowId",
              "description": "Deletes a single `Attachment` using a unique key.",
              "args": [
                {
                  "name": "input",
                  "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "DeleteAttachmentByRowIdInput",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "DeleteAttachmentPayload",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "deleteChangeStatus",
              "description": "Deletes a single `ChangeStatus` using its globally unique id.",
              "args": [
                {
                  "name": "input",
                  "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "DeleteChangeStatusInput",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "DeleteChangeStatusPayload",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "deleteChangeStatusByStatus",
              "description": "Deletes a single `ChangeStatus` using a unique key.",
              "args": [
                {
                  "name": "input",
                  "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "DeleteChangeStatusByStatusInput",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "DeleteChangeStatusPayload",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "deleteCifUser",
              "description": "Deletes a single `CifUser` using its globally unique id.",
              "args": [
                {
                  "name": "input",
                  "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "DeleteCifUserInput",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "DeleteCifUserPayload",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "deleteCifUserByRowId",
              "description": "Deletes a single `CifUser` using a unique key.",
              "args": [
                {
                  "name": "input",
                  "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "DeleteCifUserByRowIdInput",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "DeleteCifUserPayload",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "deleteFormChange",
              "description": "Deletes a single `FormChange` using its globally unique id.",
              "args": [
                {
                  "name": "input",
                  "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "DeleteFormChangeInput",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "DeleteFormChangePayload",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "deleteFormChangeByRowId",
              "description": "Deletes a single `FormChange` using a unique key.",
              "args": [
                {
                  "name": "input",
                  "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "DeleteFormChangeByRowIdInput",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "DeleteFormChangePayload",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "deleteProjectManager",
              "description": "Deletes a single `ProjectManager` using its globally unique id.",
              "args": [
                {
                  "name": "input",
                  "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "DeleteProjectManagerInput",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "DeleteProjectManagerPayload",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "deleteProjectManagerByRowId",
              "description": "Deletes a single `ProjectManager` using a unique key.",
              "args": [
                {
                  "name": "input",
                  "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "DeleteProjectManagerByRowIdInput",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "DeleteProjectManagerPayload",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updateAttachment",
              "description": "Updates a single `Attachment` using its globally unique id and a patch.",
              "args": [
                {
                  "name": "input",
                  "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "UpdateAttachmentInput",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "UpdateAttachmentPayload",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updateAttachmentByRowId",
              "description": "Updates a single `Attachment` using a unique key and a patch.",
              "args": [
                {
                  "name": "input",
                  "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "UpdateAttachmentByRowIdInput",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "UpdateAttachmentPayload",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updateChangeStatus",
              "description": "Updates a single `ChangeStatus` using its globally unique id and a patch.",
              "args": [
                {
                  "name": "input",
                  "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "UpdateChangeStatusInput",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "UpdateChangeStatusPayload",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updateChangeStatusByStatus",
              "description": "Updates a single `ChangeStatus` using a unique key and a patch.",
              "args": [
                {
                  "name": "input",
                  "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "UpdateChangeStatusByStatusInput",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "UpdateChangeStatusPayload",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updateCifUser",
              "description": "Updates a single `CifUser` using its globally unique id and a patch.",
              "args": [
                {
                  "name": "input",
                  "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "UpdateCifUserInput",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "UpdateCifUserPayload",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updateCifUserByRowId",
              "description": "Updates a single `CifUser` using a unique key and a patch.",
              "args": [
                {
                  "name": "input",
                  "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "UpdateCifUserByRowIdInput",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "UpdateCifUserPayload",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updateFormChange",
              "description": "Updates a single `FormChange` using its globally unique id and a patch.",
              "args": [
                {
                  "name": "input",
                  "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "UpdateFormChangeInput",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "UpdateFormChangePayload",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updateFormChangeByRowId",
              "description": "Updates a single `FormChange` using a unique key and a patch.",
              "args": [
                {
                  "name": "input",
                  "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "UpdateFormChangeByRowIdInput",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "UpdateFormChangePayload",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updateProjectManager",
              "description": "Updates a single `ProjectManager` using its globally unique id and a patch.",
              "args": [
                {
                  "name": "input",
                  "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "UpdateProjectManagerInput",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "UpdateProjectManagerPayload",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updateProjectManagerByRowId",
              "description": "Updates a single `ProjectManager` using a unique key and a patch.",
              "args": [
                {
                  "name": "input",
                  "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "UpdateProjectManagerByRowIdInput",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "UpdateProjectManagerPayload",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INTERFACE",
          "name": "Node",
          "description": "An object with a globally unique `ID`.",
          "fields": [
            {
              "name": "id",
              "description": "A globally unique identifier. Can be used in various places throughout the system to identify this single value.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": [
            {
              "kind": "OBJECT",
              "name": "Attachment",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "ChangeStatus",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "CifUser",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "FormChange",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "Operator",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "Project",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "ProjectManager",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "Query",
              "ofType": null
            }
          ]
        },
        {
          "kind": "OBJECT",
          "name": "Operator",
          "description": "Table containing information about a CIF operator",
          "fields": [
            {
              "name": "bcRegistryId",
              "description": "The bc registry id assigned to this operator",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUserByCreatedBy",
              "description": "Reads a single `CifUser` that is related to this `Operator`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUserByDeletedBy",
              "description": "Reads a single `CifUser` that is related to this `Operator`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUserByUpdatedBy",
              "description": "Reads a single `CifUser` that is related to this `Operator`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUsersByProjectOperatorIdAndCreatedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `CifUser`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "CifUsersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "OperatorCifUsersByProjectOperatorIdAndCreatedByManyToManyConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUsersByProjectOperatorIdAndDeletedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `CifUser`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "CifUsersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "OperatorCifUsersByProjectOperatorIdAndDeletedByManyToManyConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUsersByProjectOperatorIdAndUpdatedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `CifUser`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "CifUsersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "OperatorCifUsersByProjectOperatorIdAndUpdatedByManyToManyConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "created at timestamp",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Datetime",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdBy",
              "description": "created by user id",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "deletedAt",
              "description": "deleted at timestamp",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "deletedBy",
              "description": "deleted by user id",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": "A globally unique identifier. Can be used in various places throughout the system to identify this single value.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "legalName",
              "description": "The legal name of this operator",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projectsByOperatorId",
              "description": "Reads and enables pagination through a set of `Project`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `Project`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "ProjectsOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProjectsConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "rowId",
              "description": "Unique ID for the operator",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "tradeName",
              "description": "The trade name of this operator",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "updated at timestamp",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Datetime",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedBy",
              "description": "updated by user id",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "OperatorCifUsersByProjectOperatorIdAndCreatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `Project`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `Project`, and the cursor to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "OperatorCifUsersByProjectOperatorIdAndCreatedByManyToManyEdge",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "OperatorCifUsersByProjectOperatorIdAndCreatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `Project`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projectsByCreatedBy",
              "description": "Reads and enables pagination through a set of `Project`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `Project`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "ProjectsOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProjectsConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "OperatorCifUsersByProjectOperatorIdAndDeletedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `Project`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `Project`, and the cursor to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "OperatorCifUsersByProjectOperatorIdAndDeletedByManyToManyEdge",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "OperatorCifUsersByProjectOperatorIdAndDeletedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `Project`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projectsByDeletedBy",
              "description": "Reads and enables pagination through a set of `Project`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `Project`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "ProjectsOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProjectsConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "OperatorCifUsersByProjectOperatorIdAndUpdatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `Project`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `Project`, and the cursor to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "OperatorCifUsersByProjectOperatorIdAndUpdatedByManyToManyEdge",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "OperatorCifUsersByProjectOperatorIdAndUpdatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `Project`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projectsByUpdatedBy",
              "description": "Reads and enables pagination through a set of `Project`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `Project`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "ProjectsOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProjectsConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "OperatorCondition",
          "description": "A condition to be used against `Operator` object types. All fields are tested\nfor equality and combined with a logical ‘and.’",
          "fields": null,
          "inputFields": [
            {
              "name": "bcRegistryId",
              "description": "Checks for equality with the object’s `bcRegistryId` field.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "createdAt",
              "description": "Checks for equality with the object’s `createdAt` field.",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "createdBy",
              "description": "Checks for equality with the object’s `createdBy` field.",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "deletedAt",
              "description": "Checks for equality with the object’s `deletedAt` field.",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "deletedBy",
              "description": "Checks for equality with the object’s `deletedBy` field.",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "legalName",
              "description": "Checks for equality with the object’s `legalName` field.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "rowId",
              "description": "Checks for equality with the object’s `rowId` field.",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "tradeName",
              "description": "Checks for equality with the object’s `tradeName` field.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "updatedAt",
              "description": "Checks for equality with the object’s `updatedAt` field.",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "updatedBy",
              "description": "Checks for equality with the object’s `updatedBy` field.",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "OperatorFilter",
          "description": "A filter to be used against `Operator` object types. All fields are combined with a logical ‘and.’",
          "fields": null,
          "inputFields": [
            {
              "name": "and",
              "description": "Checks for all expressions in this list.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "OperatorFilter",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "bcRegistryId",
              "description": "Filter by the object’s `bcRegistryId` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "cifUserByCreatedBy",
              "description": "Filter by the object’s `cifUserByCreatedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "cifUserByCreatedByExists",
              "description": "A related `cifUserByCreatedBy` exists.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "cifUserByDeletedBy",
              "description": "Filter by the object’s `cifUserByDeletedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "cifUserByDeletedByExists",
              "description": "A related `cifUserByDeletedBy` exists.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "cifUserByUpdatedBy",
              "description": "Filter by the object’s `cifUserByUpdatedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "cifUserByUpdatedByExists",
              "description": "A related `cifUserByUpdatedBy` exists.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "createdAt",
              "description": "Filter by the object’s `createdAt` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DatetimeFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "createdBy",
              "description": "Filter by the object’s `createdBy` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IntFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "deletedAt",
              "description": "Filter by the object’s `deletedAt` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DatetimeFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "deletedBy",
              "description": "Filter by the object’s `deletedBy` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IntFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "legalName",
              "description": "Filter by the object’s `legalName` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Negates the expression.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "OperatorFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "or",
              "description": "Checks for any expressions in this list.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "OperatorFilter",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "projectsByOperatorId",
              "description": "Filter by the object’s `projectsByOperatorId` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "OperatorToManyProjectFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "projectsByOperatorIdExist",
              "description": "Some related `projectsByOperatorId` exist.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "rowId",
              "description": "Filter by the object’s `rowId` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IntFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "tradeName",
              "description": "Filter by the object’s `tradeName` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "updatedAt",
              "description": "Filter by the object’s `updatedAt` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DatetimeFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "updatedBy",
              "description": "Filter by the object’s `updatedBy` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IntFilter",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "OperatorToManyProjectFilter",
          "description": "A filter to be used against many `Project` object types. All fields are combined with a logical ‘and.’",
          "fields": null,
          "inputFields": [
            {
              "name": "every",
              "description": "Every related `Project` matches the filter criteria. All fields are combined with a logical ‘and.’",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "ProjectFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "none",
              "description": "No related `Project` matches the filter criteria. All fields are combined with a logical ‘and.’",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "ProjectFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "some",
              "description": "Some related `Project` matches the filter criteria. All fields are combined with a logical ‘and.’",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "ProjectFilter",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "OperatorsConnection",
          "description": "A connection to a list of `Operator` values.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `Operator` and cursor to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "OperatorsEdge",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of `Operator` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "Operator",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "The count of *all* `Operator` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "OperatorsEdge",
          "description": "A `Operator` edge in the connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `Operator` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Operator",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "OperatorsOrderBy",
          "description": "Methods to use when ordering `Operator`.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "BC_REGISTRY_ID_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BC_REGISTRY_ID_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CREATED_AT_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CREATED_AT_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CREATED_BY_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CREATED_BY_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DELETED_AT_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DELETED_AT_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DELETED_BY_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DELETED_BY_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ID_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ID_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LEGAL_NAME_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LEGAL_NAME_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NATURAL",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PRIMARY_KEY_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PRIMARY_KEY_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TRADE_NAME_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TRADE_NAME_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UPDATED_AT_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UPDATED_AT_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UPDATED_BY_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UPDATED_BY_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "PageInfo",
          "description": "Information about pagination in a connection.",
          "fields": [
            {
              "name": "endCursor",
              "description": "When paginating forwards, the cursor to continue.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "hasNextPage",
              "description": "When paginating forwards, are there more items?",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "hasPreviousPage",
              "description": "When paginating backwards, are there more items?",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "startCursor",
              "description": "When paginating backwards, the cursor to continue.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "Project",
          "description": "Table containing information about a CIF Project",
          "fields": [
            {
              "name": "cifUserByCreatedBy",
              "description": "Reads a single `CifUser` that is related to this `Project`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUserByDeletedBy",
              "description": "Reads a single `CifUser` that is related to this `Project`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUserByUpdatedBy",
              "description": "Reads a single `CifUser` that is related to this `Project`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUsersByProjectManagerProjectIdAndCifUserId",
              "description": "Reads and enables pagination through a set of `CifUser`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `CifUser`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "CifUsersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProjectCifUsersByProjectManagerProjectIdAndCifUserIdManyToManyConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
<<<<<<< HEAD
<<<<<<< HEAD
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
=======
              "name": "userGroups",
              "description": "Filter by the object’s `userGroups` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringListFilter",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "Mutation",
          "description": "The root mutation type which contains root level fields which mutate data.",
          "fields": [
            {
<<<<<<< HEAD
              "name": "fundingStreamByFundingStreamId",
              "description": "Reads a single `FundingStream` that is related to this `Project`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "FundingStream",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "fundingStreamId",
              "description": "The id of the funding_stream (cif.funding_stream.id) that was selected when creating the project",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": "A globally unique identifier. Can be used in various places throughout the system to identify this single value.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
=======
              "name": "createAttachment",
              "description": "Creates a single `Attachment`.",
=======
              "name": "cifUsersByProjectManagerProjectIdAndCreatedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `CifUser`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "CifUsersOrderBy",
                        "ofType": null
                      }
                    }
                  },
<<<<<<< HEAD
                  "defaultValue": null
>>>>>>> chore: add basic SelectOperator component
=======
                  "defaultValue": "[PRIMARY_KEY_ASC]"
>>>>>>> refactor: update schema & reorder sqitch plan
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProjectCifUsersByProjectManagerProjectIdAndCreatedByManyToManyConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUsersByProjectManagerProjectIdAndDeletedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `CifUser`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "CifUsersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProjectCifUsersByProjectManagerProjectIdAndDeletedByManyToManyConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUsersByProjectManagerProjectIdAndUpdatedBy",
              "description": "Reads and enables pagination through a set of `CifUser`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `CifUser`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "CifUsersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProjectCifUsersByProjectManagerProjectIdAndUpdatedByManyToManyConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "created at timestamp",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Datetime",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdBy",
              "description": "created by user id",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "deletedAt",
              "description": "deleted at timestamp",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "deletedBy",
              "description": "deleted by user id",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "description",
              "description": "Description of the project",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": "A globally unique identifier. Can be used in various places throughout the system to identify this single value.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "operatorByOperatorId",
              "description": "Reads a single `Operator` that is related to this `Project`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Operator",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "operatorId",
              "description": "Foreign key references the cif.operator table",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projectManagersByProjectId",
              "description": "Reads and enables pagination through a set of `ProjectManager`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectManagerCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectManagerFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `ProjectManager`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "ProjectManagersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProjectManagersConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "rowId",
              "description": "Unique ID for the project",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "updated at timestamp",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Datetime",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedBy",
              "description": "updated by user id",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "ProjectCifUsersByProjectManagerProjectIdAndCifUserIdManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `ProjectManager`.",
          "fields": [
            {
<<<<<<< HEAD
              "name": "rfpNumber",
              "description": "Unique identifier internal to the CIF team, in the form YYYY-RFP-0-000-ABCD. This will most likely be generated by the application in the future.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "rowId",
              "description": "Unique ID for the project",
=======
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `ProjectManager`, and the cursor to aid in pagination.",
>>>>>>> chore: add basic SelectOperator component
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "ProjectCifUsersByProjectManagerProjectIdAndCifUserIdManyToManyEdge",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "ProjectCifUsersByProjectManagerProjectIdAndCifUserIdManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `ProjectManager`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projectManagersByCifUserId",
              "description": "Reads and enables pagination through a set of `ProjectManager`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectManagerCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectManagerFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `ProjectManager`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "ProjectManagersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProjectManagersConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "ProjectCifUsersByProjectManagerProjectIdAndCreatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `ProjectManager`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `ProjectManager`, and the cursor to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "ProjectCifUsersByProjectManagerProjectIdAndCreatedByManyToManyEdge",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "ProjectCifUsersByProjectManagerProjectIdAndCreatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `ProjectManager`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projectManagersByCreatedBy",
              "description": "Reads and enables pagination through a set of `ProjectManager`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectManagerCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectManagerFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `ProjectManager`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "ProjectManagersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProjectManagersConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "ProjectCifUsersByProjectManagerProjectIdAndDeletedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `ProjectManager`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `ProjectManager`, and the cursor to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "ProjectCifUsersByProjectManagerProjectIdAndDeletedByManyToManyEdge",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "ProjectCifUsersByProjectManagerProjectIdAndDeletedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `ProjectManager`.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projectManagersByDeletedBy",
              "description": "Reads and enables pagination through a set of `ProjectManager`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectManagerCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectManagerFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `ProjectManager`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "ProjectManagersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProjectManagersConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "ProjectCifUsersByProjectManagerProjectIdAndUpdatedByManyToManyConnection",
          "description": "A connection to a list of `CifUser` values, with data from `ProjectManager`.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `CifUser`, info from the `ProjectManager`, and the cursor to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "ProjectCifUsersByProjectManagerProjectIdAndUpdatedByManyToManyEdge",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of `CifUser` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "CifUser",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "The count of *all* `CifUser` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "ProjectCifUsersByProjectManagerProjectIdAndUpdatedByManyToManyEdge",
          "description": "A `CifUser` edge in the connection, with data from `ProjectManager`.",
          "fields": [
            {
<<<<<<< HEAD
<<<<<<< HEAD
              "name": "fundingStreamId",
              "description": "Checks for equality with the object’s `fundingStreamId` field.",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
=======
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
              "name": "rowId",
              "description": "Checks for equality with the object’s `rowId` field.",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
=======
              "name": "tradeName",
              "description": "The trade name of this operator",
=======
              "name": "cursor",
              "description": "A cursor for use in pagination.",
>>>>>>> refactor: update schema & reorder sqitch plan
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `CifUser` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projectManagersByUpdatedBy",
              "description": "Reads and enables pagination through a set of `ProjectManager`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectManagerCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectManagerFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `ProjectManager`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "ProjectManagersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProjectManagersConnection",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "ProjectCondition",
          "description": "A condition to be used against `Project` object types. All fields are tested for equality and combined with a logical ‘and.’",
          "fields": null,
          "inputFields": [
            {
<<<<<<< HEAD
<<<<<<< HEAD
=======
<<<<<<< HEAD
=======
>>>>>>> refactor: update schema & reorder sqitch plan
              "name": "cifIdentifier",
              "description": "Checks for equality with the object’s `cifIdentifier` field.",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
=======
>>>>>>> refactor: update schema & reorder sqitch plan
              "name": "createdAt",
              "description": "Checks for equality with the object’s `createdAt` field.",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "createdBy",
              "description": "Checks for equality with the object’s `createdBy` field.",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "deletedAt",
              "description": "Checks for equality with the object’s `deletedAt` field.",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "deletedBy",
              "description": "Checks for equality with the object’s `deletedBy` field.",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "description",
              "description": "Checks for equality with the object’s `description` field.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "operatorId",
              "description": "Checks for equality with the object’s `operatorId` field.",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
<<<<<<< HEAD
<<<<<<< HEAD
              "name": "rfpNumber",
              "description": "Checks for equality with the object’s `rfpNumber` field.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
=======
=======
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
>>>>>>> chore: add basic SelectOperator component
=======
>>>>>>> refactor: update schema & reorder sqitch plan
              "name": "rowId",
              "description": "Checks for equality with the object’s `rowId` field.",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "updatedAt",
              "description": "Checks for equality with the object’s `updatedAt` field.",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "updatedBy",
              "description": "Checks for equality with the object’s `updatedBy` field.",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "ProjectFilter",
          "description": "A filter to be used against `Project` object types. All fields are combined with a logical ‘and.’",
          "fields": null,
          "inputFields": [
            {
              "name": "and",
              "description": "Checks for all expressions in this list.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectFilter",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
<<<<<<< HEAD
<<<<<<< HEAD
=======
<<<<<<< HEAD
=======
>>>>>>> refactor: update schema & reorder sqitch plan
              "name": "cifIdentifier",
              "description": "Filter by the object’s `cifIdentifier` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IntFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
=======
>>>>>>> refactor: update schema & reorder sqitch plan
              "name": "cifUserByCreatedBy",
              "description": "Filter by the object’s `cifUserByCreatedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "cifUserByCreatedByExists",
              "description": "A related `cifUserByCreatedBy` exists.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "cifUserByDeletedBy",
              "description": "Filter by the object’s `cifUserByDeletedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "cifUserByDeletedByExists",
              "description": "A related `cifUserByDeletedBy` exists.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
<<<<<<< HEAD
              "name": "fundingStreamByFundingStreamId",
              "description": "Filter by the object’s `fundingStreamByFundingStreamId` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "FundingStreamFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "fundingStreamId",
              "description": "Filter by the object’s `fundingStreamId` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IntFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Negates the expression.",
=======
              "name": "cifUserByUpdatedBy",
              "description": "Filter by the object’s `cifUserByUpdatedBy` relation.",
>>>>>>> chore: add basic SelectOperator component
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "cifUserByUpdatedByExists",
              "description": "A related `cifUserByUpdatedBy` exists.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "createdAt",
              "description": "Filter by the object’s `createdAt` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DatetimeFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "createdBy",
              "description": "Filter by the object’s `createdBy` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IntFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "deletedAt",
              "description": "Filter by the object’s `deletedAt` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DatetimeFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "deletedBy",
              "description": "Filter by the object’s `deletedBy` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IntFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "description",
              "description": "Filter by the object’s `description` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Negates the expression.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "ProjectFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "operatorByOperatorId",
              "description": "Filter by the object’s `operatorByOperatorId` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "OperatorFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "operatorByOperatorIdExists",
              "description": "A related `operatorByOperatorId` exists.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "operatorId",
              "description": "Filter by the object’s `operatorId` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IntFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "or",
              "description": "Checks for any expressions in this list.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectFilter",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "projectManagersByProjectId",
              "description": "Filter by the object’s `projectManagersByProjectId` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "ProjectToManyProjectManagerFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "projectManagersByProjectIdExist",
              "description": "Some related `projectManagersByProjectId` exist.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
<<<<<<< HEAD
<<<<<<< HEAD
              "name": "rfpNumber",
              "description": "Filter by the object’s `rfpNumber` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
=======
<<<<<<< HEAD
>>>>>>> chore: add basic SelectOperator component
=======
>>>>>>> refactor: update schema & reorder sqitch plan
              "name": "rowId",
              "description": "Filter by the object’s `rowId` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IntFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "updatedAt",
              "description": "Filter by the object’s `updatedAt` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DatetimeFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "updatedBy",
              "description": "Filter by the object’s `updatedBy` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IntFilter",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "ProjectManager",
          "description": "Join table to track assignment of cif users to projects, as project managers",
          "fields": [
            {
              "name": "cifUserByCifUserId",
              "description": "Reads a single `CifUser` that is related to this `ProjectManager`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUserByCreatedBy",
              "description": "Reads a single `CifUser` that is related to this `ProjectManager`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUserByDeletedBy",
              "description": "Reads a single `CifUser` that is related to this `ProjectManager`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUserByUpdatedBy",
              "description": "Reads a single `CifUser` that is related to this `ProjectManager`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUserId",
              "description": "Foreign key to the cif user",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "created at timestamp",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Datetime",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdBy",
              "description": "created by user id",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "deletedAt",
              "description": "deleted at timestamp",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "deletedBy",
              "description": "deleted by user id",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": "A globally unique identifier. Can be used in various places throughout the system to identify this single value.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projectByProjectId",
              "description": "Reads a single `Project` that is related to this `ProjectManager`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Project",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projectId",
              "description": "Foreign key to the project",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "rowId",
              "description": "Unique ID for the project manager record",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "updated at timestamp",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Datetime",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedBy",
              "description": "updated by user id",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "ProjectManagerCondition",
          "description": "A condition to be used against `ProjectManager` object types. All fields are\ntested for equality and combined with a logical ‘and.’",
          "fields": null,
          "inputFields": [
            {
              "name": "cifUserId",
              "description": "Checks for equality with the object’s `cifUserId` field.",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "createdAt",
              "description": "Checks for equality with the object’s `createdAt` field.",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "createdBy",
              "description": "Checks for equality with the object’s `createdBy` field.",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "deletedAt",
              "description": "Checks for equality with the object’s `deletedAt` field.",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "deletedBy",
              "description": "Checks for equality with the object’s `deletedBy` field.",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "projectId",
              "description": "Checks for equality with the object’s `projectId` field.",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "rowId",
              "description": "Checks for equality with the object’s `rowId` field.",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "updatedAt",
              "description": "Checks for equality with the object’s `updatedAt` field.",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "updatedBy",
              "description": "Checks for equality with the object’s `updatedBy` field.",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "ProjectManagerFilter",
          "description": "A filter to be used against `ProjectManager` object types. All fields are combined with a logical ‘and.’",
          "fields": null,
          "inputFields": [
            {
              "name": "and",
              "description": "Checks for all expressions in this list.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectManagerFilter",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "cifUserByCifUserId",
              "description": "Filter by the object’s `cifUserByCifUserId` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "cifUserByCreatedBy",
              "description": "Filter by the object’s `cifUserByCreatedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "cifUserByCreatedByExists",
              "description": "A related `cifUserByCreatedBy` exists.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "cifUserByDeletedBy",
              "description": "Filter by the object’s `cifUserByDeletedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "cifUserByDeletedByExists",
              "description": "A related `cifUserByDeletedBy` exists.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "cifUserByUpdatedBy",
              "description": "Filter by the object’s `cifUserByUpdatedBy` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CifUserFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "cifUserByUpdatedByExists",
              "description": "A related `cifUserByUpdatedBy` exists.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "cifUserId",
              "description": "Filter by the object’s `cifUserId` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IntFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "createdAt",
              "description": "Filter by the object’s `createdAt` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DatetimeFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "createdBy",
              "description": "Filter by the object’s `createdBy` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IntFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "deletedAt",
              "description": "Filter by the object’s `deletedAt` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DatetimeFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "deletedBy",
              "description": "Filter by the object’s `deletedBy` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IntFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Negates the expression.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "ProjectManagerFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "or",
              "description": "Checks for any expressions in this list.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectManagerFilter",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "projectByProjectId",
              "description": "Filter by the object’s `projectByProjectId` relation.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "ProjectFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "projectId",
              "description": "Filter by the object’s `projectId` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IntFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "rowId",
              "description": "Filter by the object’s `rowId` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IntFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "updatedAt",
              "description": "Filter by the object’s `updatedAt` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DatetimeFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "updatedBy",
              "description": "Filter by the object’s `updatedBy` field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IntFilter",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "ProjectManagerInput",
          "description": "An input for mutations affecting `ProjectManager`",
          "fields": null,
          "inputFields": [
            {
              "name": "cifUserId",
              "description": "Foreign key to the cif user",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "createdAt",
              "description": "created at timestamp",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "createdBy",
              "description": "created by user id",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "deletedAt",
              "description": "deleted at timestamp",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "deletedBy",
              "description": "deleted by user id",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "projectId",
              "description": "Foreign key to the project",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "updatedAt",
              "description": "updated at timestamp",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "updatedBy",
              "description": "updated by user id",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "ProjectManagerPatch",
          "description": "Represents an update to a `ProjectManager`. Fields that are set will be updated.",
          "fields": null,
          "inputFields": [
            {
              "name": "cifUserId",
              "description": "Foreign key to the cif user",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "createdAt",
              "description": "created at timestamp",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "createdBy",
              "description": "created by user id",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "deletedAt",
              "description": "deleted at timestamp",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "deletedBy",
              "description": "deleted by user id",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "projectId",
              "description": "Foreign key to the project",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "updatedAt",
              "description": "updated at timestamp",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "updatedBy",
              "description": "updated by user id",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "ProjectManagersConnection",
          "description": "A connection to a list of `ProjectManager` values.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `ProjectManager` and cursor to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "ProjectManagersEdge",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of `ProjectManager` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "ProjectManager",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "The count of *all* `ProjectManager` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "ProjectManagersEdge",
          "description": "A `ProjectManager` edge in the connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `ProjectManager` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "ProjectManager",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "ProjectManagersOrderBy",
          "description": "Methods to use when ordering `ProjectManager`.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "CIF_USER_ID_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CIF_USER_ID_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CREATED_AT_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CREATED_AT_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CREATED_BY_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CREATED_BY_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DELETED_AT_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DELETED_AT_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DELETED_BY_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DELETED_BY_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ID_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ID_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NATURAL",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PRIMARY_KEY_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PRIMARY_KEY_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PROJECT_ID_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PROJECT_ID_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UPDATED_AT_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UPDATED_AT_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UPDATED_BY_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UPDATED_BY_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "ProjectToManyProjectManagerFilter",
          "description": "A filter to be used against many `ProjectManager` object types. All fields are combined with a logical ‘and.’",
          "fields": null,
          "inputFields": [
            {
              "name": "every",
              "description": "Every related `ProjectManager` matches the filter criteria. All fields are combined with a logical ‘and.’",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "ProjectManagerFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "none",
              "description": "No related `ProjectManager` matches the filter criteria. All fields are combined with a logical ‘and.’",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "ProjectManagerFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "some",
              "description": "Some related `ProjectManager` matches the filter criteria. All fields are combined with a logical ‘and.’",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "ProjectManagerFilter",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "ProjectsConnection",
          "description": "A connection to a list of `Project` values.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges which contains the `Project` and cursor to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "ProjectsEdge",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of `Project` objects.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "Project",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "The count of *all* `Project` you could get from the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "ProjectsEdge",
          "description": "A `Project` edge in the connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `Project` at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Project",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "ProjectsOrderBy",
          "description": "Methods to use when ordering `Project`.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
<<<<<<< HEAD
=======
              "name": "CIF_IDENTIFIER_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CIF_IDENTIFIER_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
>>>>>>> refactor: update schema & reorder sqitch plan
              "name": "CREATED_AT_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CREATED_AT_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CREATED_BY_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CREATED_BY_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DELETED_AT_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DELETED_AT_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DELETED_BY_ASC",
<<<<<<< HEAD
=======
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DELETED_BY_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DESCRIPTION_ASC",
>>>>>>> refactor: update schema & reorder sqitch plan
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DESCRIPTION_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FUNDING_STREAM_ID_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FUNDING_STREAM_ID_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ID_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ID_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NATURAL",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "OPERATOR_ID_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "OPERATOR_ID_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PRIMARY_KEY_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PRIMARY_KEY_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "RFP_NUMBER_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "RFP_NUMBER_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UPDATED_AT_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UPDATED_AT_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UPDATED_BY_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UPDATED_BY_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "Query",
          "description": "The root query type which gives access points into the data universe.",
          "fields": [
            {
              "name": "allAttachments",
              "description": "Reads and enables pagination through a set of `Attachment`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "AttachmentCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "AttachmentFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `Attachment`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "AttachmentsOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "AttachmentsConnection",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "allChangeStatuses",
              "description": "Reads and enables pagination through a set of `ChangeStatus`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ChangeStatusCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ChangeStatusFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `ChangeStatus`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "ChangeStatusesOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "ChangeStatusesConnection",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "allCifUsers",
              "description": "Reads and enables pagination through a set of `CifUser`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CifUserFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `CifUser`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "CifUsersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "CifUsersConnection",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "allFormChanges",
              "description": "Reads and enables pagination through a set of `FormChange`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "FormChangeCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "FormChangeFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `FormChange`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "FormChangesOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "FormChangesConnection",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "allFundingStreams",
              "description": "Reads and enables pagination through a set of `FundingStream`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "FundingStreamCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "FundingStreamFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `FundingStream`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "FundingStreamsOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "FundingStreamsConnection",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "allOperators",
              "description": "Reads and enables pagination through a set of `Operator`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "OperatorCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "OperatorFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `Operator`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "OperatorsOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "OperatorsConnection",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "allProjectManagers",
              "description": "Reads and enables pagination through a set of `ProjectManager`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectManagerCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectManagerFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `ProjectManager`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "ProjectManagersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "ProjectManagersConnection",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "allProjects",
              "description": "Reads and enables pagination through a set of `Project`.",
              "args": [
                {
                  "name": "after",
                  "description": "Read all values in the set after (below) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Read all values in the set before (above) this cursor.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "condition",
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectCondition",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Only read the first `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Only read the last `n` values of the set.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `Project`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "ProjectsOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "ProjectsConnection",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "attachment",
              "description": "Reads a single `Attachment` using its globally unique `ID`.",
              "args": [
                {
                  "name": "id",
                  "description": "The globally unique `ID` to be used in selecting a single `Attachment`.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "ID",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "Attachment",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "attachmentByRowId",
              "description": null,
              "args": [
                {
                  "name": "rowId",
                  "description": null,
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Int",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "Attachment",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "changeStatus",
              "description": "Reads a single `ChangeStatus` using its globally unique `ID`.",
              "args": [
                {
                  "name": "id",
                  "description": "The globally unique `ID` to be used in selecting a single `ChangeStatus`.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "ID",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "ChangeStatus",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "changeStatusByStatus",
              "description": null,
              "args": [
                {
                  "name": "status",
                  "description": null,
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "ChangeStatus",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUser",
              "description": "Reads a single `CifUser` using its globally unique `ID`.",
              "args": [
                {
                  "name": "id",
                  "description": "The globally unique `ID` to be used in selecting a single `CifUser`.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "ID",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUserByRowId",
              "description": null,
              "args": [
                {
                  "name": "rowId",
                  "description": null,
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Int",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "formChange",
              "description": "Reads a single `FormChange` using its globally unique `ID`.",
              "args": [
                {
                  "name": "id",
                  "description": "The globally unique `ID` to be used in selecting a single `FormChange`.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "ID",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "FormChange",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "formChangeByRowId",
              "description": null,
              "args": [
                {
                  "name": "rowId",
                  "description": null,
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Int",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "FormChange",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "fundingStream",
              "description": "Reads a single `FundingStream` using its globally unique `ID`.",
              "args": [
                {
                  "name": "id",
                  "description": "The globally unique `ID` to be used in selecting a single `FundingStream`.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "ID",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "FundingStream",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "fundingStreamByRowId",
              "description": null,
              "args": [
                {
                  "name": "rowId",
                  "description": null,
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Int",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "FundingStream",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": "The root query type must be a `Node` to work well with Relay 1 mutations. This just resolves to `query`.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "Fetches an object given its globally unique `ID`.",
              "args": [
                {
                  "name": "id",
                  "description": "The globally unique `ID`.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "ID",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "INTERFACE",
                "name": "Node",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "operator",
              "description": "Reads a single `Operator` using its globally unique `ID`.",
              "args": [
                {
                  "name": "id",
                  "description": "The globally unique `ID` to be used in selecting a single `Operator`.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "ID",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "Operator",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "operatorByRowId",
              "description": null,
              "args": [
                {
                  "name": "rowId",
                  "description": null,
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Int",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "Operator",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "project",
              "description": "Reads a single `Project` using its globally unique `ID`.",
              "args": [
                {
                  "name": "id",
                  "description": "The globally unique `ID` to be used in selecting a single `Project`.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "ID",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "Project",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projectByRfpNumber",
              "description": null,
              "args": [
                {
                  "name": "rfpNumber",
                  "description": null,
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "Project",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projectByRowId",
              "description": null,
              "args": [
                {
                  "name": "rowId",
                  "description": null,
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Int",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "Project",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projectManager",
              "description": "Reads a single `ProjectManager` using its globally unique `ID`.",
              "args": [
                {
                  "name": "id",
                  "description": "The globally unique `ID` to be used in selecting a single `ProjectManager`.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "ID",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "ProjectManager",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projectManagerByRowId",
              "description": null,
              "args": [
                {
                  "name": "rowId",
                  "description": null,
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Int",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "ProjectManager",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "query",
              "description": "Exposes the root query type nested one level down. This is helpful for Relay 1\nwhich can only query top level fields if they are in a particular form.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Query",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "session",
              "description": null,
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "KeycloakJwt",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "SCALAR",
          "name": "String",
          "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "StringFilter",
          "description": "A filter to be used against String fields. All fields are combined with a logical ‘and.’",
          "fields": null,
          "inputFields": [
            {
              "name": "distinctFrom",
              "description": "Not equal to the specified value, treating null like an ordinary value.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "distinctFromInsensitive",
              "description": "Not equal to the specified value, treating null like an ordinary value (case-insensitive).",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "endsWith",
              "description": "Ends with the specified string (case-sensitive).",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "endsWithInsensitive",
              "description": "Ends with the specified string (case-insensitive).",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "equalTo",
              "description": "Equal to the specified value.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "equalToInsensitive",
              "description": "Equal to the specified value (case-insensitive).",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "greaterThan",
              "description": "Greater than the specified value.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "greaterThanInsensitive",
              "description": "Greater than the specified value (case-insensitive).",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "greaterThanOrEqualTo",
              "description": "Greater than or equal to the specified value.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "greaterThanOrEqualToInsensitive",
              "description": "Greater than or equal to the specified value (case-insensitive).",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "in",
              "description": "Included in the specified list.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "inInsensitive",
              "description": "Included in the specified list (case-insensitive).",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "includes",
              "description": "Contains the specified string (case-sensitive).",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "includesInsensitive",
              "description": "Contains the specified string (case-insensitive).",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "isNull",
              "description": "Is null (if `true` is specified) or is not null (if `false` is specified).",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "lessThan",
              "description": "Less than the specified value.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "lessThanInsensitive",
              "description": "Less than the specified value (case-insensitive).",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "lessThanOrEqualTo",
              "description": "Less than or equal to the specified value.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "lessThanOrEqualToInsensitive",
              "description": "Less than or equal to the specified value (case-insensitive).",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "like",
              "description": "Matches the specified pattern (case-sensitive). An underscore (_) matches any single character; a percent sign (%) matches any sequence of zero or more characters.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "likeInsensitive",
              "description": "Matches the specified pattern (case-insensitive). An underscore (_) matches any single character; a percent sign (%) matches any sequence of zero or more characters.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "notDistinctFrom",
              "description": "Equal to the specified value, treating null like an ordinary value.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "notDistinctFromInsensitive",
              "description": "Equal to the specified value, treating null like an ordinary value (case-insensitive).",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "notEndsWith",
              "description": "Does not end with the specified string (case-sensitive).",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "notEndsWithInsensitive",
              "description": "Does not end with the specified string (case-insensitive).",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "notEqualTo",
              "description": "Not equal to the specified value.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "notEqualToInsensitive",
              "description": "Not equal to the specified value (case-insensitive).",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "notIn",
              "description": "Not included in the specified list.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "notInInsensitive",
              "description": "Not included in the specified list (case-insensitive).",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "notIncludes",
              "description": "Does not contain the specified string (case-sensitive).",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "notIncludesInsensitive",
              "description": "Does not contain the specified string (case-insensitive).",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "notLike",
              "description": "Does not match the specified pattern (case-sensitive). An underscore (_) matches any single character; a percent sign (%) matches any sequence of zero or more characters.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "notLikeInsensitive",
              "description": "Does not match the specified pattern (case-insensitive). An underscore (_) matches any single character; a percent sign (%) matches any sequence of zero or more characters.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "notStartsWith",
              "description": "Does not start with the specified string (case-sensitive).",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "notStartsWithInsensitive",
              "description": "Does not start with the specified string (case-insensitive).",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "startsWith",
              "description": "Starts with the specified string (case-sensitive).",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "startsWithInsensitive",
              "description": "Starts with the specified string (case-insensitive).",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "StringListFilter",
          "description": "A filter to be used against String List fields. All fields are combined with a logical ‘and.’",
          "fields": null,
          "inputFields": [
            {
              "name": "anyEqualTo",
              "description": "Any array item is equal to the specified value.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "anyGreaterThan",
              "description": "Any array item is greater than the specified value.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "anyGreaterThanOrEqualTo",
              "description": "Any array item is greater than or equal to the specified value.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "anyLessThan",
              "description": "Any array item is less than the specified value.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "anyLessThanOrEqualTo",
              "description": "Any array item is less than or equal to the specified value.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "anyNotEqualTo",
              "description": "Any array item is not equal to the specified value.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "containedBy",
              "description": "Contained by the specified list of values.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "contains",
              "description": "Contains the specified list of values.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "distinctFrom",
              "description": "Not equal to the specified value, treating null like an ordinary value.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "equalTo",
              "description": "Equal to the specified value.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "greaterThan",
              "description": "Greater than the specified value.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "greaterThanOrEqualTo",
              "description": "Greater than or equal to the specified value.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "isNull",
              "description": "Is null (if `true` is specified) or is not null (if `false` is specified).",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "lessThan",
              "description": "Less than the specified value.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "lessThanOrEqualTo",
              "description": "Less than or equal to the specified value.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "notDistinctFrom",
              "description": "Equal to the specified value, treating null like an ordinary value.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "notEqualTo",
              "description": "Not equal to the specified value.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "overlaps",
              "description": "Overlaps the specified list of values.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "SCALAR",
          "name": "UUID",
          "description": "A universally unique identifier as defined by [RFC 4122](https://tools.ietf.org/html/rfc4122).",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "UUIDFilter",
          "description": "A filter to be used against UUID fields. All fields are combined with a logical ‘and.’",
          "fields": null,
          "inputFields": [
            {
              "name": "distinctFrom",
              "description": "Not equal to the specified value, treating null like an ordinary value.",
              "type": {
                "kind": "SCALAR",
                "name": "UUID",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "equalTo",
              "description": "Equal to the specified value.",
              "type": {
                "kind": "SCALAR",
                "name": "UUID",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "greaterThan",
              "description": "Greater than the specified value.",
              "type": {
                "kind": "SCALAR",
                "name": "UUID",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "greaterThanOrEqualTo",
              "description": "Greater than or equal to the specified value.",
              "type": {
                "kind": "SCALAR",
                "name": "UUID",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "in",
              "description": "Included in the specified list.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "UUID",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "isNull",
              "description": "Is null (if `true` is specified) or is not null (if `false` is specified).",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "lessThan",
              "description": "Less than the specified value.",
              "type": {
                "kind": "SCALAR",
                "name": "UUID",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "lessThanOrEqualTo",
              "description": "Less than or equal to the specified value.",
              "type": {
                "kind": "SCALAR",
                "name": "UUID",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "notDistinctFrom",
              "description": "Equal to the specified value, treating null like an ordinary value.",
              "type": {
                "kind": "SCALAR",
                "name": "UUID",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "notEqualTo",
              "description": "Not equal to the specified value.",
              "type": {
                "kind": "SCALAR",
                "name": "UUID",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "notIn",
              "description": "Not included in the specified list.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "UUID",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "UpdateAttachmentByRowIdInput",
          "description": "All input for the `updateAttachmentByRowId` mutation.",
          "fields": null,
          "inputFields": [
            {
              "name": "attachmentPatch",
              "description": "An object where the defined keys will be set on the `Attachment` being updated.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "AttachmentPatch",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "clientMutationId",
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "rowId",
              "description": "Unique ID for the attachment",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "UpdateAttachmentInput",
          "description": "All input for the `updateAttachment` mutation.",
          "fields": null,
          "inputFields": [
            {
              "name": "attachmentPatch",
              "description": "An object where the defined keys will be set on the `Attachment` being updated.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "AttachmentPatch",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "clientMutationId",
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "id",
              "description": "The globally unique `ID` which will identify a single `Attachment` to be updated.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "UpdateAttachmentPayload",
          "description": "The output of our update `Attachment` mutation.",
          "fields": [
            {
              "name": "attachment",
              "description": "The `Attachment` that was updated by this mutation.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Attachment",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "attachmentEdge",
              "description": "An edge for our `Attachment`. May be used by Relay 1.",
              "args": [
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `Attachment`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "AttachmentsOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "AttachmentsEdge",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUserByCreatedBy",
              "description": "Reads a single `CifUser` that is related to this `Attachment`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUserByDeletedBy",
              "description": "Reads a single `CifUser` that is related to this `Attachment`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUserByUpdatedBy",
              "description": "Reads a single `CifUser` that is related to this `Attachment`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "clientMutationId",
              "description": "The exact same `clientMutationId` that was provided in the mutation input,\nunchanged and unused. May be used by a client to track mutations.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "query",
              "description": "Our root query field type. Allows us to run any query from our mutation payload.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Query",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "UpdateChangeStatusByStatusInput",
          "description": "All input for the `updateChangeStatusByStatus` mutation.",
          "fields": null,
          "inputFields": [
            {
              "name": "changeStatusPatch",
              "description": "An object where the defined keys will be set on the `ChangeStatus` being updated.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "ChangeStatusPatch",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "clientMutationId",
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "status",
              "description": "The name of the status, e.g. \"pending\", \"committed\", ...",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "UpdateChangeStatusInput",
          "description": "All input for the `updateChangeStatus` mutation.",
          "fields": null,
          "inputFields": [
            {
              "name": "changeStatusPatch",
              "description": "An object where the defined keys will be set on the `ChangeStatus` being updated.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "ChangeStatusPatch",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "clientMutationId",
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "id",
              "description": "The globally unique `ID` which will identify a single `ChangeStatus` to be updated.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "UpdateChangeStatusPayload",
          "description": "The output of our update `ChangeStatus` mutation.",
          "fields": [
            {
              "name": "changeStatus",
              "description": "The `ChangeStatus` that was updated by this mutation.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "ChangeStatus",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "changeStatusEdge",
              "description": "An edge for our `ChangeStatus`. May be used by Relay 1.",
              "args": [
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `ChangeStatus`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "ChangeStatusesOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "ChangeStatusesEdge",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUserByCreatedBy",
              "description": "Reads a single `CifUser` that is related to this `ChangeStatus`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUserByDeletedBy",
              "description": "Reads a single `CifUser` that is related to this `ChangeStatus`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUserByUpdatedBy",
              "description": "Reads a single `CifUser` that is related to this `ChangeStatus`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "clientMutationId",
              "description": "The exact same `clientMutationId` that was provided in the mutation input,\nunchanged and unused. May be used by a client to track mutations.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "query",
              "description": "Our root query field type. Allows us to run any query from our mutation payload.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Query",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "UpdateCifUserByRowIdInput",
          "description": "All input for the `updateCifUserByRowId` mutation.",
          "fields": null,
          "inputFields": [
            {
              "name": "cifUserPatch",
              "description": "An object where the defined keys will be set on the `CifUser` being updated.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "CifUserPatch",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "clientMutationId",
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "rowId",
              "description": "Unique ID for the user",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "UpdateCifUserInput",
          "description": "All input for the `updateCifUser` mutation.",
          "fields": null,
          "inputFields": [
            {
              "name": "cifUserPatch",
              "description": "An object where the defined keys will be set on the `CifUser` being updated.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "CifUserPatch",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "clientMutationId",
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "id",
              "description": "The globally unique `ID` which will identify a single `CifUser` to be updated.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "UpdateCifUserPayload",
          "description": "The output of our update `CifUser` mutation.",
          "fields": [
            {
              "name": "cifUser",
              "description": "The `CifUser` that was updated by this mutation.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUserByCreatedBy",
              "description": "Reads a single `CifUser` that is related to this `CifUser`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUserByDeletedBy",
              "description": "Reads a single `CifUser` that is related to this `CifUser`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUserByUpdatedBy",
              "description": "Reads a single `CifUser` that is related to this `CifUser`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUserEdge",
              "description": "An edge for our `CifUser`. May be used by Relay 1.",
              "args": [
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `CifUser`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "CifUsersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "CifUsersEdge",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "clientMutationId",
              "description": "The exact same `clientMutationId` that was provided in the mutation input,\nunchanged and unused. May be used by a client to track mutations.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "query",
              "description": "Our root query field type. Allows us to run any query from our mutation payload.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Query",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "UpdateFormChangeByRowIdInput",
          "description": "All input for the `updateFormChangeByRowId` mutation.",
          "fields": null,
          "inputFields": [
            {
              "name": "clientMutationId",
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "formChangePatch",
              "description": "An object where the defined keys will be set on the `FormChange` being updated.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "FormChangePatch",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "rowId",
              "description": null,
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "UpdateFormChangeInput",
          "description": "All input for the `updateFormChange` mutation.",
          "fields": null,
          "inputFields": [
            {
              "name": "clientMutationId",
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "formChangePatch",
              "description": "An object where the defined keys will be set on the `FormChange` being updated.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "FormChangePatch",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "id",
              "description": "The globally unique `ID` which will identify a single `FormChange` to be updated.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "UpdateFormChangePayload",
          "description": "The output of our update `FormChange` mutation.",
          "fields": [
            {
              "name": "changeStatusByChangeStatus",
              "description": "Reads a single `ChangeStatus` that is related to this `FormChange`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "ChangeStatus",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUserByCreatedBy",
              "description": "Reads a single `CifUser` that is related to this `FormChange`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUserByDeletedBy",
              "description": "Reads a single `CifUser` that is related to this `FormChange`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUserByUpdatedBy",
              "description": "Reads a single `CifUser` that is related to this `FormChange`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "clientMutationId",
              "description": "The exact same `clientMutationId` that was provided in the mutation input,\nunchanged and unused. May be used by a client to track mutations.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "formChange",
              "description": "The `FormChange` that was updated by this mutation.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "FormChange",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "formChangeEdge",
              "description": "An edge for our `FormChange`. May be used by Relay 1.",
              "args": [
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `FormChange`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "FormChangesOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "FormChangesEdge",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "query",
              "description": "Our root query field type. Allows us to run any query from our mutation payload.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Query",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "UpdateFundingStreamByRowIdInput",
          "description": "All input for the `updateFundingStreamByRowId` mutation.",
          "fields": null,
          "inputFields": [
            {
              "name": "clientMutationId",
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "fundingStreamPatch",
              "description": "An object where the defined keys will be set on the `FundingStream` being updated.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "FundingStreamPatch",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "rowId",
              "description": "Unique ID for the funding_stream",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "UpdateFundingStreamInput",
          "description": "All input for the `updateFundingStream` mutation.",
          "fields": null,
          "inputFields": [
            {
              "name": "clientMutationId",
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "fundingStreamPatch",
              "description": "An object where the defined keys will be set on the `FundingStream` being updated.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "FundingStreamPatch",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "id",
              "description": "The globally unique `ID` which will identify a single `FundingStream` to be updated.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "UpdateFundingStreamPayload",
          "description": "The output of our update `FundingStream` mutation.",
          "fields": [
            {
              "name": "cifUserByCreatedBy",
              "description": "Reads a single `CifUser` that is related to this `FundingStream`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUserByDeletedBy",
              "description": "Reads a single `CifUser` that is related to this `FundingStream`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUserByUpdatedBy",
              "description": "Reads a single `CifUser` that is related to this `FundingStream`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "clientMutationId",
              "description": "The exact same `clientMutationId` that was provided in the mutation input,\nunchanged and unused. May be used by a client to track mutations.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "fundingStream",
              "description": "The `FundingStream` that was updated by this mutation.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "FundingStream",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "fundingStreamEdge",
              "description": "An edge for our `FundingStream`. May be used by Relay 1.",
              "args": [
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `FundingStream`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "FundingStreamsOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "FundingStreamsEdge",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "query",
              "description": "Our root query field type. Allows us to run any query from our mutation payload.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Query",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "UpdateProjectManagerByRowIdInput",
          "description": "All input for the `updateProjectManagerByRowId` mutation.",
          "fields": null,
          "inputFields": [
            {
              "name": "clientMutationId",
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "projectManagerPatch",
              "description": "An object where the defined keys will be set on the `ProjectManager` being updated.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "ProjectManagerPatch",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "rowId",
              "description": "Unique ID for the project manager record",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "UpdateProjectManagerInput",
          "description": "All input for the `updateProjectManager` mutation.",
          "fields": null,
          "inputFields": [
            {
              "name": "clientMutationId",
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "id",
              "description": "The globally unique `ID` which will identify a single `ProjectManager` to be updated.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "projectManagerPatch",
              "description": "An object where the defined keys will be set on the `ProjectManager` being updated.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "ProjectManagerPatch",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "UpdateProjectManagerPayload",
          "description": "The output of our update `ProjectManager` mutation.",
          "fields": [
            {
              "name": "cifUserByCifUserId",
              "description": "Reads a single `CifUser` that is related to this `ProjectManager`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUserByCreatedBy",
              "description": "Reads a single `CifUser` that is related to this `ProjectManager`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUserByDeletedBy",
              "description": "Reads a single `CifUser` that is related to this `ProjectManager`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cifUserByUpdatedBy",
              "description": "Reads a single `CifUser` that is related to this `ProjectManager`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CifUser",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "clientMutationId",
              "description": "The exact same `clientMutationId` that was provided in the mutation input,\nunchanged and unused. May be used by a client to track mutations.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projectByProjectId",
              "description": "Reads a single `Project` that is related to this `ProjectManager`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Project",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projectManager",
              "description": "The `ProjectManager` that was updated by this mutation.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "ProjectManager",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projectManagerEdge",
              "description": "An edge for our `ProjectManager`. May be used by Relay 1.",
              "args": [
                {
                  "name": "orderBy",
                  "description": "The method to use when ordering `ProjectManager`.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "ProjectManagersOrderBy",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": "[PRIMARY_KEY_ASC]"
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "ProjectManagersEdge",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "query",
              "description": "Our root query field type. Allows us to run any query from our mutation payload.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Query",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "SCALAR",
          "name": "Upload",
          "description": "The `Upload` scalar type represents a file upload.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "__Directive",
          "description": "A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.\n\nIn some cases, you need to provide options to alter GraphQL's execution behavior in ways field arguments will not suffice, such as conditionally including or skipping a field. Directives provide this by describing additional information to the executor.",
          "fields": [
            {
              "name": "name",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "description",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isRepeatable",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "locations",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "__DirectiveLocation",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "args",
              "description": null,
              "args": [
                {
                  "name": "includeDeprecated",
                  "description": null,
                  "type": {
                    "kind": "SCALAR",
                    "name": "Boolean",
                    "ofType": null
                  },
                  "defaultValue": "false"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "__InputValue",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "__DirectiveLocation",
          "description": "A Directive can be adjacent to many parts of the GraphQL language, a __DirectiveLocation describes one such possible adjacencies.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "QUERY",
              "description": "Location adjacent to a query operation.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MUTATION",
              "description": "Location adjacent to a mutation operation.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SUBSCRIPTION",
              "description": "Location adjacent to a subscription operation.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FIELD",
              "description": "Location adjacent to a field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FRAGMENT_DEFINITION",
              "description": "Location adjacent to a fragment definition.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FRAGMENT_SPREAD",
              "description": "Location adjacent to a fragment spread.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INLINE_FRAGMENT",
              "description": "Location adjacent to an inline fragment.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VARIABLE_DEFINITION",
              "description": "Location adjacent to a variable definition.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SCHEMA",
              "description": "Location adjacent to a schema definition.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SCALAR",
              "description": "Location adjacent to a scalar definition.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "OBJECT",
              "description": "Location adjacent to an object type definition.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FIELD_DEFINITION",
              "description": "Location adjacent to a field definition.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ARGUMENT_DEFINITION",
              "description": "Location adjacent to an argument definition.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INTERFACE",
              "description": "Location adjacent to an interface definition.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNION",
              "description": "Location adjacent to a union definition.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ENUM",
              "description": "Location adjacent to an enum definition.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ENUM_VALUE",
              "description": "Location adjacent to an enum value definition.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INPUT_OBJECT",
              "description": "Location adjacent to an input object type definition.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INPUT_FIELD_DEFINITION",
              "description": "Location adjacent to an input object field definition.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "__EnumValue",
          "description": "One possible value for a given Enum. Enum values are unique values, not a placeholder for a string or numeric value. However an Enum value is returned in a JSON response as a string.",
          "fields": [
            {
              "name": "name",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "description",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isDeprecated",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "deprecationReason",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "__Field",
          "description": "Object and Interface types are described by a list of Fields, each of which has a name, potentially a list of arguments, and a return type.",
          "fields": [
            {
              "name": "name",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "description",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "args",
              "description": null,
              "args": [
                {
                  "name": "includeDeprecated",
                  "description": null,
                  "type": {
                    "kind": "SCALAR",
                    "name": "Boolean",
                    "ofType": null
                  },
                  "defaultValue": "false"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "__InputValue",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "type",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "__Type",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isDeprecated",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "deprecationReason",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "__InputValue",
          "description": "Arguments provided to Fields or Directives and the input fields of an InputObject are represented as Input Values which describe their type and optionally a default value.",
          "fields": [
            {
              "name": "name",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "description",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "type",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "__Type",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "defaultValue",
              "description": "A GraphQL-formatted string representing the default value for this input value.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isDeprecated",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "deprecationReason",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "__Schema",
          "description": "A GraphQL Schema defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, as well as the entry points for query, mutation, and subscription operations.",
          "fields": [
            {
              "name": "description",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "types",
              "description": "A list of all types supported by this server.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "__Type",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "queryType",
              "description": "The type that query operations will be rooted at.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "__Type",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "mutationType",
              "description": "If this server supports mutation, the type that mutation operations will be rooted at.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "__Type",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "subscriptionType",
              "description": "If this server support subscription, the type that subscription operations will be rooted at.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "__Type",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "directives",
              "description": "A list of all directives supported by this server.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "__Directive",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "__Type",
          "description": "The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.\n\nDepending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name, description and optional `specifiedByUrl`, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.",
          "fields": [
            {
              "name": "kind",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "__TypeKind",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "name",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "description",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "specifiedByUrl",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "fields",
              "description": null,
              "args": [
                {
                  "name": "includeDeprecated",
                  "description": null,
                  "type": {
                    "kind": "SCALAR",
                    "name": "Boolean",
                    "ofType": null
                  },
                  "defaultValue": "false"
                }
              ],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "__Field",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "interfaces",
              "description": null,
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "__Type",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "possibleTypes",
              "description": null,
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "__Type",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "enumValues",
              "description": null,
              "args": [
                {
                  "name": "includeDeprecated",
                  "description": null,
                  "type": {
                    "kind": "SCALAR",
                    "name": "Boolean",
                    "ofType": null
                  },
                  "defaultValue": "false"
                }
              ],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "__EnumValue",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "inputFields",
              "description": null,
              "args": [
                {
                  "name": "includeDeprecated",
                  "description": null,
                  "type": {
                    "kind": "SCALAR",
                    "name": "Boolean",
                    "ofType": null
                  },
                  "defaultValue": "false"
                }
              ],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "__InputValue",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ofType",
              "description": null,
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "__Type",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "__TypeKind",
          "description": "An enum describing what kind of type a given `__Type` is.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "SCALAR",
              "description": "Indicates this type is a scalar.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "OBJECT",
              "description": "Indicates this type is an object. `fields` and `interfaces` are valid fields.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INTERFACE",
              "description": "Indicates this type is an interface. `fields`, `interfaces`, and `possibleTypes` are valid fields.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNION",
              "description": "Indicates this type is a union. `possibleTypes` is a valid field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ENUM",
              "description": "Indicates this type is an enum. `enumValues` is a valid field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INPUT_OBJECT",
              "description": "Indicates this type is an input object. `inputFields` is a valid field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LIST",
              "description": "Indicates this type is a list. `ofType` is a valid field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NON_NULL",
              "description": "Indicates this type is a non-null. `ofType` is a valid field.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        }
      ],
      "directives": [
        {
          "name": "deprecated",
          "description": "Marks an element of a GraphQL schema as no longer supported.",
          "locations": [
            "ARGUMENT_DEFINITION",
            "ENUM_VALUE",
            "FIELD_DEFINITION",
            "INPUT_FIELD_DEFINITION"
          ],
          "args": [
            {
              "name": "reason",
              "description": "Explains why this element was deprecated, usually also including a suggestion for how to access supported similar data. Formatted using the Markdown syntax, as specified by [CommonMark](https://commonmark.org/).",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": "\"No longer supported\""
            }
          ]
        },
        {
          "name": "include",
          "description": "Directs the executor to include this field or fragment only when the `if` argument is true.",
          "locations": [
            "FIELD",
            "FRAGMENT_SPREAD",
            "INLINE_FRAGMENT"
          ],
          "args": [
            {
              "name": "if",
              "description": "Included when true.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ]
        },
        {
          "name": "skip",
          "description": "Directs the executor to skip this field or fragment when the `if` argument is true.",
          "locations": [
            "FIELD",
            "FRAGMENT_SPREAD",
            "INLINE_FRAGMENT"
          ],
          "args": [
            {
              "name": "if",
              "description": "Skipped when true.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ]
        },
        {
          "name": "specifiedBy",
          "description": "Exposes a URL that specifies the behaviour of this scalar.",
          "locations": [
            "SCALAR"
          ],
          "args": [
            {
              "name": "url",
              "description": "The URL that specifies the behaviour of this scalar.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ]
        }
      ]
    }
  }
}
