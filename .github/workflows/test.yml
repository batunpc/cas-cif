name: Test CIF App

on:
  push:
    branches-ignore:
      - main

jobs:
  install-dev-tools:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: dev env setup
        uses: ./.github/actions/dev-env-setup
      - run: make install_dev_tools
      - run: make stop_pg # cleanly stop the database, otherwise it will complain in the subsequent jobs
      - run: yarn install --frozen-lockfile
        working-directory: ./app

  yarn-test:
    needs: install-dev-tools
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: dev env setup
        uses: ./.github/actions/dev-env-setup
      - run: yarn test
        working-directory: ./app
  yarn-audit:
    needs: install-dev-tools
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: dev env setup
        uses: ./.github/actions/dev-env-setup
      - run: yarn audit-deps
        working-directory: ./app
  db-unit-tests:
    needs: install-dev-tools
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: dev env setup
        uses: ./.github/actions/dev-env-setup
      - run: make db_unit_tests
  pre-commit:
    needs: install-dev-tools
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: dev env setup
        uses: ./.github/actions/dev-env-setup
      - run: pre-commit run --all-files

  build-schema-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true
      - name: Login to GCR
        uses: docker/login-action@v1
        with:
          registry: gcr.io
          username: _json_key
          password: ${{ secrets.GCR_KEY }}
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-schema-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-schema
      - name: Build image
        uses: docker/build-push-action@v2
        with:
          context: .
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          file: schema/Dockerfile
          tags: ggl-cas-storage/cas-cif-schema:latest,ggl-cas-storage/cas-cif-schema:${{ github.sha }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

        # Temp fix
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  build-app-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true
      - name: Login to GCR
        uses: docker/login-action@v1
        with:
          registry: gcr.io
          username: _json_key
          password: ${{ secrets.GCR_KEY }}
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-app-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-app
      - name: Build image
        uses: docker/build-push-action@v2
        with:
          context: .
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          file: app/Dockerfile
          tags: ggl-cas-storage/cas-cif-app:latest,ggl-cas-storage/cas-cif-app:${{ github.sha }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  e2e:
    needs: ["build-schema-image", "build-app-image", "install-dev-tools"]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: dev env setup
        uses: ./.github/actions/dev-env-setup
      - name: start postgres and create database
        run: make start_pg && make create_db
      - name: deploy migrations
        run: docker run gcr.io/ggl-cas-storage/cas-cif-schema:${{ github.sha }} "sqitch deploy"
